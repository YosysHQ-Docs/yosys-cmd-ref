Search.setIndex({"docnames": ["CHAPTER_Approach", "CHAPTER_Basics", "CHAPTER_CellLib", "CHAPTER_Intro", "CHAPTER_Optimize", "CHAPTER_Overview", "CHAPTER_Prog", "CHAPTER_Techmap", "CHAPTER_Verilog", "appendix/APPNOTE_010_Verilog_to_BLIF", "appendix/APPNOTE_011_Design_Investigation", "appendix/APPNOTE_012_Verilog_to_BTOR", "appendix/CHAPTER_Auxlibs", "appendix/CHAPTER_Auxprogs", "appendix/CHAPTER_TextRtlil", "bib", "cmd/abc", "cmd/abc9", "cmd/abc9_exe", "cmd/abc9_ops", "cmd/add", "cmd/aigmap", "cmd/alumacc", "cmd/anlogic_eqn", "cmd/anlogic_fixcarry", "cmd/assertpmux", "cmd/async2sync", "cmd/attrmap", "cmd/attrmvcp", "cmd/autoname", "cmd/blackbox", "cmd/bmuxmap", "cmd/bugpoint", "cmd/cd", "cmd/check", "cmd/chformal", "cmd/chparam", "cmd/chtype", "cmd/clean", "cmd/clean_zerowidth", "cmd/clk2fflogic", "cmd/clkbufmap", "cmd/connect", "cmd/connect_rpc", "cmd/connwrappers", "cmd/coolrunner2_fixup", "cmd/coolrunner2_sop", "cmd/copy", "cmd/cover", "cmd/cutpoint", "cmd/debug", "cmd/delete", "cmd/deminout", "cmd/demuxmap", "cmd/design", "cmd/dffinit", "cmd/dfflegalize", "cmd/dfflibmap", "cmd/dffunmap", "cmd/dump", "cmd/echo", "cmd/ecp5_gsr", "cmd/edgetypes", "cmd/efinix_fixcarry", "cmd/equiv_add", "cmd/equiv_induct", "cmd/equiv_make", "cmd/equiv_mark", "cmd/equiv_miter", "cmd/equiv_opt", "cmd/equiv_purge", "cmd/equiv_remove", "cmd/equiv_simple", "cmd/equiv_status", "cmd/equiv_struct", "cmd/eval", "cmd/exec", "cmd/expose", "cmd/extract", "cmd/extract_counter", "cmd/extract_fa", "cmd/extract_reduce", "cmd/extractinv", "cmd/flatten", "cmd/flowmap", "cmd/fmcombine", "cmd/fminit", "cmd/formalff", "cmd/freduce", "cmd/fsm", "cmd/fsm_detect", "cmd/fsm_expand", "cmd/fsm_export", "cmd/fsm_extract", "cmd/fsm_info", "cmd/fsm_map", "cmd/fsm_opt", "cmd/fsm_recode", "cmd/fst2tb", "cmd/gatemate_foldinv", "cmd/glift", "cmd/greenpak4_dffinv", "cmd/help", "cmd/hierarchy", "cmd/hilomap", "cmd/history", "cmd/ice40_braminit", "cmd/ice40_dsp", "cmd/ice40_opt", "cmd/ice40_wrapcarry", "cmd/insbuf", "cmd/iopadmap", "cmd/jny", "cmd/json", "cmd/log", "cmd/logger", "cmd/ls", "cmd/ltp", "cmd/lut2mux", "cmd/maccmap", "cmd/memory", "cmd/memory_bmux2rom", "cmd/memory_bram", "cmd/memory_collect", "cmd/memory_dff", "cmd/memory_libmap", "cmd/memory_map", "cmd/memory_memx", "cmd/memory_narrow", "cmd/memory_nordff", "cmd/memory_share", "cmd/memory_unpack", "cmd/miter", "cmd/mutate", "cmd/muxcover", "cmd/muxpack", "cmd/nlutmap", "cmd/onehot", "cmd/opt", "cmd/opt_clean", "cmd/opt_demorgan", "cmd/opt_dff", "cmd/opt_expr", "cmd/opt_ffinv", "cmd/opt_lut", "cmd/opt_lut_ins", "cmd/opt_mem", "cmd/opt_mem_feedback", "cmd/opt_mem_priority", "cmd/opt_mem_widen", "cmd/opt_merge", "cmd/opt_muxtree", "cmd/opt_reduce", "cmd/opt_share", "cmd/paramap", "cmd/peepopt", "cmd/plugin", "cmd/pmux2shiftx", "cmd/pmuxtree", "cmd/portlist", "cmd/prep", "cmd/printattrs", "cmd/proc", "cmd/proc_arst", "cmd/proc_clean", "cmd/proc_dff", "cmd/proc_dlatch", "cmd/proc_init", "cmd/proc_memwr", "cmd/proc_mux", "cmd/proc_prune", "cmd/proc_rmdead", "cmd/proc_rom", "cmd/qbfsat", "cmd/qwp", "cmd/read", "cmd/read_aiger", "cmd/read_blif", "cmd/read_ilang", "cmd/read_json", "cmd/read_liberty", "cmd/read_rtlil", "cmd/read_verilog", "cmd/rename", "cmd/rmports", "cmd/sat", "cmd/scatter", "cmd/scc", "cmd/scratchpad", "cmd/script", "cmd/select", "cmd/setattr", "cmd/setparam", "cmd/setundef", "cmd/share", "cmd/shell", "cmd/show", "cmd/shregmap", "cmd/sim", "cmd/simplemap", "cmd/splice", "cmd/splitnets", "cmd/sta", "cmd/stat", "cmd/submod", "cmd/supercover", "cmd/synth", "cmd/synth_achronix", "cmd/synth_anlogic", "cmd/synth_coolrunner2", "cmd/synth_easic", "cmd/synth_ecp5", "cmd/synth_efinix", "cmd/synth_gatemate", "cmd/synth_gowin", "cmd/synth_greenpak4", "cmd/synth_ice40", "cmd/synth_intel", "cmd/synth_intel_alm", "cmd/synth_machxo2", "cmd/synth_nexus", "cmd/synth_quicklogic", "cmd/synth_sf2", "cmd/synth_xilinx", "cmd/tcl", "cmd/techmap", "cmd/tee", "cmd/test_abcloop", "cmd/test_autotb", "cmd/test_cell", "cmd/test_pmgen", "cmd/torder", "cmd/trace", "cmd/tribuf", "cmd/uniquify", "cmd/verific", "cmd/verilog_defaults", "cmd/verilog_defines", "cmd/wbflip", "cmd/wreduce", "cmd/write_aiger", "cmd/write_blif", "cmd/write_btor", "cmd/write_cxxrtl", "cmd/write_edif", "cmd/write_file", "cmd/write_firrtl", "cmd/write_ilang", "cmd/write_intersynth", "cmd/write_jny", "cmd/write_json", "cmd/write_rtlil", "cmd/write_simplec", "cmd/write_smt2", "cmd/write_smv", "cmd/write_spice", "cmd/write_table", "cmd/write_verilog", "cmd/write_xaiger", "cmd/xilinx_dffopt", "cmd/xilinx_dsp", "cmd/xilinx_srl", "cmd/zinit", "cmd_ref", "index"], "filenames": ["CHAPTER_Approach.rst", "CHAPTER_Basics.rst", "CHAPTER_CellLib.rst", "CHAPTER_Intro.rst", "CHAPTER_Optimize.rst", "CHAPTER_Overview.rst", "CHAPTER_Prog.rst", "CHAPTER_Techmap.rst", "CHAPTER_Verilog.rst", "appendix/APPNOTE_010_Verilog_to_BLIF.rst", "appendix/APPNOTE_011_Design_Investigation.rst", "appendix/APPNOTE_012_Verilog_to_BTOR.rst", "appendix/CHAPTER_Auxlibs.rst", "appendix/CHAPTER_Auxprogs.rst", "appendix/CHAPTER_TextRtlil.rst", "bib.rst", "cmd/abc.rst", "cmd/abc9.rst", "cmd/abc9_exe.rst", "cmd/abc9_ops.rst", "cmd/add.rst", "cmd/aigmap.rst", "cmd/alumacc.rst", "cmd/anlogic_eqn.rst", "cmd/anlogic_fixcarry.rst", "cmd/assertpmux.rst", "cmd/async2sync.rst", "cmd/attrmap.rst", "cmd/attrmvcp.rst", "cmd/autoname.rst", "cmd/blackbox.rst", "cmd/bmuxmap.rst", "cmd/bugpoint.rst", "cmd/cd.rst", "cmd/check.rst", "cmd/chformal.rst", "cmd/chparam.rst", "cmd/chtype.rst", "cmd/clean.rst", "cmd/clean_zerowidth.rst", "cmd/clk2fflogic.rst", "cmd/clkbufmap.rst", "cmd/connect.rst", "cmd/connect_rpc.rst", "cmd/connwrappers.rst", "cmd/coolrunner2_fixup.rst", "cmd/coolrunner2_sop.rst", "cmd/copy.rst", "cmd/cover.rst", "cmd/cutpoint.rst", "cmd/debug.rst", "cmd/delete.rst", "cmd/deminout.rst", "cmd/demuxmap.rst", "cmd/design.rst", "cmd/dffinit.rst", "cmd/dfflegalize.rst", "cmd/dfflibmap.rst", "cmd/dffunmap.rst", "cmd/dump.rst", "cmd/echo.rst", "cmd/ecp5_gsr.rst", "cmd/edgetypes.rst", "cmd/efinix_fixcarry.rst", "cmd/equiv_add.rst", "cmd/equiv_induct.rst", "cmd/equiv_make.rst", "cmd/equiv_mark.rst", "cmd/equiv_miter.rst", "cmd/equiv_opt.rst", "cmd/equiv_purge.rst", "cmd/equiv_remove.rst", "cmd/equiv_simple.rst", "cmd/equiv_status.rst", "cmd/equiv_struct.rst", "cmd/eval.rst", "cmd/exec.rst", "cmd/expose.rst", "cmd/extract.rst", "cmd/extract_counter.rst", "cmd/extract_fa.rst", "cmd/extract_reduce.rst", "cmd/extractinv.rst", "cmd/flatten.rst", "cmd/flowmap.rst", "cmd/fmcombine.rst", "cmd/fminit.rst", "cmd/formalff.rst", "cmd/freduce.rst", "cmd/fsm.rst", "cmd/fsm_detect.rst", "cmd/fsm_expand.rst", "cmd/fsm_export.rst", "cmd/fsm_extract.rst", "cmd/fsm_info.rst", "cmd/fsm_map.rst", "cmd/fsm_opt.rst", "cmd/fsm_recode.rst", "cmd/fst2tb.rst", "cmd/gatemate_foldinv.rst", "cmd/glift.rst", "cmd/greenpak4_dffinv.rst", "cmd/help.rst", "cmd/hierarchy.rst", "cmd/hilomap.rst", "cmd/history.rst", "cmd/ice40_braminit.rst", "cmd/ice40_dsp.rst", "cmd/ice40_opt.rst", "cmd/ice40_wrapcarry.rst", "cmd/insbuf.rst", "cmd/iopadmap.rst", "cmd/jny.rst", "cmd/json.rst", "cmd/log.rst", "cmd/logger.rst", "cmd/ls.rst", "cmd/ltp.rst", "cmd/lut2mux.rst", "cmd/maccmap.rst", "cmd/memory.rst", "cmd/memory_bmux2rom.rst", "cmd/memory_bram.rst", "cmd/memory_collect.rst", "cmd/memory_dff.rst", "cmd/memory_libmap.rst", "cmd/memory_map.rst", "cmd/memory_memx.rst", "cmd/memory_narrow.rst", "cmd/memory_nordff.rst", "cmd/memory_share.rst", "cmd/memory_unpack.rst", "cmd/miter.rst", "cmd/mutate.rst", "cmd/muxcover.rst", "cmd/muxpack.rst", "cmd/nlutmap.rst", "cmd/onehot.rst", "cmd/opt.rst", "cmd/opt_clean.rst", "cmd/opt_demorgan.rst", "cmd/opt_dff.rst", "cmd/opt_expr.rst", "cmd/opt_ffinv.rst", "cmd/opt_lut.rst", "cmd/opt_lut_ins.rst", "cmd/opt_mem.rst", "cmd/opt_mem_feedback.rst", "cmd/opt_mem_priority.rst", "cmd/opt_mem_widen.rst", "cmd/opt_merge.rst", "cmd/opt_muxtree.rst", "cmd/opt_reduce.rst", "cmd/opt_share.rst", "cmd/paramap.rst", "cmd/peepopt.rst", "cmd/plugin.rst", "cmd/pmux2shiftx.rst", "cmd/pmuxtree.rst", "cmd/portlist.rst", "cmd/prep.rst", "cmd/printattrs.rst", "cmd/proc.rst", "cmd/proc_arst.rst", "cmd/proc_clean.rst", "cmd/proc_dff.rst", "cmd/proc_dlatch.rst", "cmd/proc_init.rst", "cmd/proc_memwr.rst", "cmd/proc_mux.rst", "cmd/proc_prune.rst", "cmd/proc_rmdead.rst", "cmd/proc_rom.rst", "cmd/qbfsat.rst", "cmd/qwp.rst", "cmd/read.rst", "cmd/read_aiger.rst", "cmd/read_blif.rst", "cmd/read_ilang.rst", "cmd/read_json.rst", "cmd/read_liberty.rst", "cmd/read_rtlil.rst", "cmd/read_verilog.rst", "cmd/rename.rst", "cmd/rmports.rst", "cmd/sat.rst", "cmd/scatter.rst", "cmd/scc.rst", "cmd/scratchpad.rst", "cmd/script.rst", "cmd/select.rst", "cmd/setattr.rst", "cmd/setparam.rst", "cmd/setundef.rst", "cmd/share.rst", "cmd/shell.rst", "cmd/show.rst", "cmd/shregmap.rst", "cmd/sim.rst", "cmd/simplemap.rst", "cmd/splice.rst", "cmd/splitnets.rst", "cmd/sta.rst", "cmd/stat.rst", "cmd/submod.rst", "cmd/supercover.rst", "cmd/synth.rst", "cmd/synth_achronix.rst", "cmd/synth_anlogic.rst", "cmd/synth_coolrunner2.rst", "cmd/synth_easic.rst", "cmd/synth_ecp5.rst", "cmd/synth_efinix.rst", "cmd/synth_gatemate.rst", "cmd/synth_gowin.rst", "cmd/synth_greenpak4.rst", "cmd/synth_ice40.rst", "cmd/synth_intel.rst", "cmd/synth_intel_alm.rst", "cmd/synth_machxo2.rst", "cmd/synth_nexus.rst", "cmd/synth_quicklogic.rst", "cmd/synth_sf2.rst", "cmd/synth_xilinx.rst", "cmd/tcl.rst", "cmd/techmap.rst", "cmd/tee.rst", "cmd/test_abcloop.rst", "cmd/test_autotb.rst", "cmd/test_cell.rst", "cmd/test_pmgen.rst", "cmd/torder.rst", "cmd/trace.rst", "cmd/tribuf.rst", "cmd/uniquify.rst", "cmd/verific.rst", "cmd/verilog_defaults.rst", "cmd/verilog_defines.rst", "cmd/wbflip.rst", "cmd/wreduce.rst", "cmd/write_aiger.rst", "cmd/write_blif.rst", "cmd/write_btor.rst", "cmd/write_cxxrtl.rst", "cmd/write_edif.rst", "cmd/write_file.rst", "cmd/write_firrtl.rst", "cmd/write_ilang.rst", "cmd/write_intersynth.rst", "cmd/write_jny.rst", "cmd/write_json.rst", "cmd/write_rtlil.rst", "cmd/write_simplec.rst", "cmd/write_smt2.rst", "cmd/write_smv.rst", "cmd/write_spice.rst", "cmd/write_table.rst", "cmd/write_verilog.rst", "cmd/write_xaiger.rst", "cmd/xilinx_dffopt.rst", "cmd/xilinx_dsp.rst", "cmd/xilinx_srl.rst", "cmd/zinit.rst", "cmd_ref.rst", "index.rst"], "titles": ["<span class=\"section-number\">3. </span>Approach", "<span class=\"section-number\">2. </span>Basic principles", "<span class=\"section-number\">5. </span>Internal cell library", "<span class=\"section-number\">1. </span>Introduction", "<span class=\"section-number\">8. </span>Optimizations", "<span class=\"section-number\">4. </span>Implementation overview", "<span class=\"section-number\">6. </span>Programming Yosys extensions", "<span class=\"section-number\">9. </span>Technology mapping", "<span class=\"section-number\">7. </span>The Verilog and AST frontends", "010: Converting Verilog to BLIF page", "011: Interactive design investigation page", "012: Converting Verilog to BTOR page", "Auxiliary libraries", "Auxiliary programs", "RTLIL text representation", "Literature references", "abc - use ABC for technology mapping", "abc9 - use ABC9 for technology mapping", "abc9_exe - use ABC9 for technology mapping", "abc9_ops - helper functions for ABC9", "add - add objects to the design", "aigmap - map logic to and-inverter-graph circuit", "alumacc - extract ALU and MACC cells", "anlogic_eqn - Anlogic: Calculate equations for luts", "anlogic_fixcarry - Anlogic: fix carry chain", "assertpmux - adds asserts for parallel muxes", "async2sync - convert async FF inputs to sync circuits", "attrmap - renaming attributes", "attrmvcp - move or copy attributes from wires to driving cells", "autoname - automatically assign names to objects", "blackbox - convert modules into blackbox modules", "bmuxmap - transform $bmux cells to trees of $mux cells", "bugpoint - minimize testcases", "cd - a shortcut for \u2018select -module &lt;name&gt;\u2019", "check - check for obvious problems in the design", "chformal - change formal constraints of the design", "chparam - re-evaluate modules with new parameters", "chtype - change type of cells in the design", "clean - remove unused cells and wires", "clean_zerowidth - clean zero-width connections from the design", "clk2fflogic - convert clocked FFs to generic $ff cells", "clkbufmap - insert clock buffers on clock networks", "connect - create or remove connections", "connect_rpc - connect to RPC frontend", "connwrappers - match width of input-output port pairs", "coolrunner2_fixup - insert necessary buffer cells for CoolRunner-II architecture", "coolrunner2_sop - break $sop cells into ANDTERM/ORTERM cells", "copy - copy modules in the design", "cover - print code coverage counters", "cutpoint - adds formal cut points to the design", "debug - run command with debug log messages enabled", "delete - delete objects in the design", "deminout - demote inout ports to input or output", "demuxmap - transform $demux cells to $eq + $mux cells", "design - save, restore and reset current design", "dffinit - set INIT param on FF cells", "dfflegalize - convert FFs to types supported by the target", "dfflibmap - technology mapping of flip-flops", "dffunmap - unmap clock enable and synchronous reset from FFs", "dump - print parts of the design in RTLIL format", "echo - turning echoing back of commands on and off", "ecp5_gsr - ECP5: handle GSR", "edgetypes - list all types of edges in selection", "efinix_fixcarry - Efinix: fix carry chain", "equiv_add - add a $equiv cell", "equiv_induct - proving $equiv cells using temporal induction", "equiv_make - prepare a circuit for equivalence checking", "equiv_mark - mark equivalence checking regions", "equiv_miter - extract miter from equiv circuit", "equiv_opt - prove equivalence for optimized circuit", "equiv_purge - purge equivalence checking module", "equiv_remove - remove $equiv cells", "equiv_simple - try proving simple $equiv instances", "equiv_status - print status of equivalent checking module", "equiv_struct - structural equivalence checking", "eval - evaluate the circuit given an input", "exec - execute commands in the operating system shell", "expose - convert internal signals to module ports", "extract - find subcircuits and replace them with cells", "extract_counter - Extract GreenPak4 counter cells", "extract_fa - find and extract full/half adders", "extract_reduce - converts gate chains into $reduce_* cells", "extractinv - extract explicit inverter cells for invertible cell pins", "flatten - flatten design", "flowmap - pack LUTs with FlowMap", "fmcombine - combine two instances of a cell into one", "fminit - set init values/sequences for formal", "formalff - prepare FFs for formal", "freduce - perform functional reduction", "fsm - extract and optimize finite state machines", "fsm_detect - finding FSMs in design", "fsm_expand - expand FSM cells by merging logic into it", "fsm_export - exporting FSMs to KISS2 files", "fsm_extract - extracting FSMs in design", "fsm_info - print information on finite state machines", "fsm_map - mapping FSMs to basic logic", "fsm_opt - optimize finite state machines", "fsm_recode - recoding finite state machines", "fst2tb - generate testbench out of fst file", "gatemate_foldinv - fold inverters into Gatemate LUT trees", "glift - create GLIFT models and optimization problems", "greenpak4_dffinv - merge greenpak4 inverters and DFF/latches", "help - display help messages", "hierarchy - check, expand and clean up design hierarchy", "hilomap - technology mapping of constant hi- and/or lo-drivers", "history - show last interactive commands", "ice40_braminit - iCE40: perform SB_RAM40_4K initialization from file", "ice40_dsp - iCE40: map multipliers", "ice40_opt - iCE40: perform simple optimizations", "ice40_wrapcarry - iCE40: wrap carries", "insbuf - insert buffer cells for connected wires", "iopadmap - technology mapping of i/o pads (or buffers)", "jny - write design and metadata", "json - write design in JSON format", "log - print text and log files", "logger - set logger properties", "ls - list modules or objects in modules", "ltp - print longest topological path", "lut2mux - convert $lut to $_MUX_", "maccmap - mapping macc cells", "memory - translate memories to basic cells", "memory_bmux2rom - convert muxes to ROMs", "memory_bram - map memories to block rams", "memory_collect - creating multi-port memory cells", "memory_dff - merge input/output DFFs into memory read ports", "memory_libmap - map memories to cells", "memory_map - translate multiport memories to basic cells", "memory_memx - emulate vlog sim behavior for mem ports", "memory_narrow - split up wide memory ports", "memory_nordff - extract read port FFs from memories", "memory_share - consolidate memory ports", "memory_unpack - unpack multi-port memory cells", "miter - automatically create a miter circuit", "mutate - generate or apply design mutations", "muxcover - cover trees of MUX cells with wider MUXes", "muxpack - $mux/$pmux cascades to $pmux", "nlutmap - map to LUTs of different sizes", "onehot - optimize $eq cells for onehot signals", "opt - perform simple optimizations", "opt_clean - remove unused cells and wires", "opt_demorgan - Optimize reductions with DeMorgan equivalents", "opt_dff - perform DFF optimizations", "opt_expr - perform const folding and simple expression rewriting", "opt_ffinv - push inverters through FFs", "opt_lut - optimize LUT cells", "opt_lut_ins - discard unused LUT inputs", "opt_mem - optimize memories", "opt_mem_feedback - convert memory read-to-write port feedback paths to write enables", "opt_mem_priority - remove priority relations between write ports that can never collide", "opt_mem_widen - optimize memories where all ports are wide", "opt_merge - consolidate identical cells", "opt_muxtree - eliminate dead trees in multiplexer trees", "opt_reduce - simplify large MUXes and AND/OR gates", "opt_share - merge mutually exclusive cells of the same type that share an input signal", "paramap - renaming cell parameters", "peepopt - collection of peephole optimizers", "plugin - load and list loaded plugins", "pmux2shiftx - transform $pmux cells to $shiftx cells", "pmuxtree - transform $pmux cells to trees of $mux cells", "portlist - list (top-level) ports", "prep - generic synthesis script", "printattrs - print attributes of selected objects", "proc - translate processes to netlists", "proc_arst - detect asynchronous resets", "proc_clean - remove empty parts of processes", "proc_dff - extract flip-flops from processes", "proc_dlatch - extract latches from processes", "proc_init - convert initial block to init attributes", "proc_memwr - extract memory writes from processes", "proc_mux - convert decision trees to multiplexers", "proc_prune - remove redundant assignments", "proc_rmdead - eliminate dead trees in decision trees", "proc_rom - convert switches to ROMs", "qbfsat - solve a 2QBF-SAT problem in the circuit", "qwp - quadratic wirelength placer", "read - load HDL designs", "read_aiger - read AIGER file", "read_blif - read BLIF file", "read_ilang - (deprecated) alias of read_rtlil", "read_json - read JSON file", "read_liberty - read cells from liberty file", "read_rtlil - read modules from RTLIL file", "read_verilog - read modules from Verilog file", "rename - rename object in the design", "rmports - remove module ports with no connections", "sat - solve a SAT problem in the circuit", "scatter - add additional intermediate nets", "scc - detect strongly connected components (logic loops)", "scratchpad - get/set values in the scratchpad", "script - execute commands from file or wire", "select - modify and view the list of selected objects", "setattr - set/unset attributes on objects", "setparam - set/unset parameters on objects", "setundef - replace undef values with defined constants", "share - perform sat-based resource sharing", "shell - enter interactive command mode", "show - generate schematics using graphviz", "shregmap - map shift registers", "sim - simulate the circuit", "simplemap - mapping simple coarse-grain cells", "splice - create explicit splicing cells", "splitnets - split up multi-bit nets", "sta - perform static timing analysis", "stat - print some statistics", "submod - moving part of a module to a new submodule", "supercover - add hi/lo cover cells for each wire bit", "synth - generic synthesis script", "synth_achronix - synthesis for Acrhonix Speedster22i FPGAs.", "synth_anlogic - synthesis for Anlogic FPGAs", "synth_coolrunner2 - synthesis for Xilinx Coolrunner-II CPLDs", "synth_easic - synthesis for eASIC platform", "synth_ecp5 - synthesis for ECP5 FPGAs", "synth_efinix - synthesis for Efinix FPGAs", "synth_gatemate - synthesis for Cologne Chip GateMate FPGAs", "synth_gowin - synthesis for Gowin FPGAs", "synth_greenpak4 - synthesis for GreenPAK4 FPGAs", "synth_ice40 - synthesis for iCE40 FPGAs", "synth_intel - synthesis for Intel (Altera) FPGAs.", "synth_intel_alm - synthesis for ALM-based Intel (Altera) FPGAs.", "synth_machxo2 - synthesis for MachXO2 FPGAs. This work is experimental.", "synth_nexus - synthesis for Lattice Nexus FPGAs", "synth_quicklogic - Synthesis for QuickLogic FPGAs", "synth_sf2 - synthesis for SmartFusion2 and IGLOO2 FPGAs", "synth_xilinx - synthesis for Xilinx FPGAs", "tcl - execute a TCL script file", "techmap - generic technology mapper", "tee - redirect command output to file", "test_abcloop - automatically test handling of loops in abc command", "test_autotb - generate simple test benches", "test_cell - automatically test the implementation of a cell type", "test_pmgen - test pass for pmgen", "torder - print cells in topological order", "trace - redirect command output to file", "tribuf - infer tri-state buffers", "uniquify - create unique copies of modules", "verific - load Verilog and VHDL designs using Verific", "verilog_defaults - set default options for read_verilog", "verilog_defines - define and undefine verilog defines", "wbflip - flip the whitebox attribute", "wreduce - reduce the word size of operations if possible", "write_aiger - write design to AIGER file", "write_blif - write design to BLIF file", "write_btor - write design to BTOR file", "write_cxxrtl - convert design to C++ RTL simulation", "write_edif - write design to EDIF netlist file", "write_file - write a text to a file", "write_firrtl - write design to a FIRRTL file", "write_ilang - (deprecated) alias of write_rtlil", "write_intersynth - write design to InterSynth netlist file", "write_jny - generate design metadata", "write_json - write design to a JSON file", "write_rtlil - write design to RTLIL file", "write_simplec - convert design to simple C code", "write_smt2 - write design to SMT-LIBv2 file", "write_smv - write design to SMV file", "write_spice - write design to SPICE netlist file", "write_table - write design as connectivity table", "write_verilog - write design to Verilog file", "write_xaiger - write design to XAIGER file", "xilinx_dffopt - Xilinx: optimize FF control signal usage", "xilinx_dsp - Xilinx: pack resources into DSPs", "xilinx_srl - Xilinx shift register extraction", "zinit - add inverters so all FF are zero-initialized", "Command line reference", "Yosys manual"], "terms": {"i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 25, 27, 28, 32, 33, 38, 40, 41, 42, 43, 44, 48, 49, 51, 54, 55, 56, 57, 59, 61, 62, 65, 66, 67, 69, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 94, 96, 97, 100, 103, 104, 107, 114, 115, 116, 119, 122, 124, 125, 126, 130, 131, 132, 133, 134, 135, 136, 138, 141, 142, 145, 147, 148, 154, 156, 159, 160, 162, 163, 173, 174, 175, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 194, 195, 196, 197, 198, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 234, 235, 238, 240, 241, 242, 243, 244, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 263, 264], "tool": [0, 1, 3, 5, 7, 9, 10, 13, 15, 16, 17, 18, 115, 196, 198, 240, 241, 244, 248, 264], "synthesis": 0, "behaviour": [0, 2, 4, 5, 7, 8, 19, 189], "verilog": [0, 3, 5, 7, 10, 15, 42, 43, 54, 78, 102, 122, 127, 159, 160, 167, 169, 175, 207, 210, 213, 214, 217, 218, 220, 221, 222, 225, 228, 229, 236, 243, 250, 263, 264], "hdl": [0, 1, 2, 3, 5, 7, 235, 243, 250, 263, 264], "code": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 102, 115, 182, 239, 243, 250, 253, 263, 264], "target": [0, 1, 3, 5, 7, 8, 16, 17, 18, 34, 57, 79, 111, 122, 136, 197, 217, 218, 223, 244, 260, 263], "architectur": [0, 1, 3, 5, 6, 7, 9, 15, 16, 17, 18, 34, 69, 84, 122, 136, 206, 221, 223, 263], "netlist": [0, 1, 2, 3, 4, 5, 6, 7, 15, 16, 17, 18, 74, 78, 112, 113, 129, 182, 207, 208, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 235, 243, 246, 249, 250, 257, 263], "aim": [0, 1, 5, 16, 198], "wide": [0, 1, 2, 3, 4, 5, 6, 9, 10, 14, 79, 91, 111, 120, 126, 130, 145, 203, 250, 260, 263], "rang": [0, 1, 5, 6, 8, 10, 14, 157, 201], "applic": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 17, 100, 160, 217, 243], "domain": [0, 1, 2, 6, 12, 16, 17, 43], "thu": [0, 1, 4, 7, 14, 16, 35, 51, 189, 225], "must": [0, 1, 2, 3, 5, 7, 8, 10, 32, 35, 36, 42, 54, 78, 103, 117, 122, 132, 183, 185, 188, 191, 192, 194, 200, 202, 220, 225, 235, 240, 243, 248, 250, 253, 257, 261], "flexibl": [0, 1, 8], "easi": [0, 1, 5, 6, 8, 9], "adapt": [0, 5], "new": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 21, 32, 77, 97, 147, 183, 190, 196, 198, 206, 211, 213, 214, 216, 220, 223, 225, 257, 260, 263, 264], "task": [0, 5, 8], "thi": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 31, 32, 33, 34, 38, 39, 40, 42, 43, 44, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 103, 104, 105, 106, 107, 108, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 238, 239, 241, 243, 244, 246, 248, 250, 252, 253, 254, 257, 260, 261, 263, 264], "chapter": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10], "cover": [0, 1, 2, 3, 4, 5, 7, 10, 16, 20, 35, 88, 235, 242, 253, 263, 264], "gener": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 23, 29, 33, 48, 76, 87, 93, 97, 103, 114, 123, 126, 130, 136, 145, 163, 167, 173, 182, 183, 193, 197, 211, 216, 217, 219, 221, 223, 229, 230, 235, 240, 241, 243, 244, 248, 250, 252, 253, 255, 257, 263], "follow": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 14, 16, 17, 18, 32, 34, 35, 48, 56, 69, 78, 97, 108, 122, 130, 138, 160, 162, 185, 190, 199, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 235, 239, 241, 243, 246, 250, 253, 256], "effort": [0, 1, 5, 10], "implement": [0, 1, 2, 3, 4, 6, 7, 8, 9, 12, 15, 39, 83, 122, 130, 174, 187, 190, 211, 214, 220, 223, 225, 243, 253, 260, 263, 264], "The": [0, 1, 2, 3, 7, 10, 11, 12, 13, 14, 16, 17, 18, 20, 35, 41, 42, 44, 54, 56, 57, 66, 67, 69, 78, 82, 83, 86, 87, 88, 90, 91, 93, 100, 103, 111, 122, 130, 132, 133, 136, 160, 162, 175, 182, 183, 185, 188, 190, 192, 195, 196, 197, 199, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 234, 235, 240, 241, 243, 246, 249, 250, 252, 253, 256, 264], "synthesi": [0, 2, 3, 4, 6, 7, 10, 11, 15, 44, 94, 182, 185, 195, 200, 228, 235, 248, 263, 264], "veri": [0, 1, 4, 5, 6, 10, 65, 83, 88, 111, 182, 225, 235], "similar": [0, 1, 3, 5, 6, 10, 83, 87, 111, 129, 190, 260], "compil": [0, 5, 6, 8, 9, 11, 13, 15, 182, 196, 206, 235, 243, 264], "differ": [0, 1, 4, 5, 7, 8, 10, 14, 16, 17, 18, 20, 83, 85, 87, 103, 113, 122, 125, 134, 148, 163, 187, 190, 196, 225, 235, 243, 244, 250, 255, 263], "subsystem": 0, "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 26, 28, 32, 34, 35, 38, 41, 42, 43, 44, 47, 48, 55, 56, 57, 65, 67, 69, 71, 74, 75, 76, 77, 78, 79, 80, 84, 85, 88, 90, 92, 96, 98, 100, 103, 105, 111, 122, 130, 132, 133, 134, 135, 136, 138, 139, 144, 145, 150, 160, 162, 170, 173, 175, 182, 183, 184, 185, 187, 190, 194, 196, 199, 200, 201, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 231, 233, 234, 235, 238, 240, 241, 243, 244, 246, 248, 250, 253, 256, 257, 260, 263, 264], "call": [0, 1, 2, 4, 5, 6, 8, 9, 10, 16, 17, 18, 19, 43, 54, 57, 88, 89, 91, 94, 110, 115, 120, 129, 132, 136, 138, 160, 162, 175, 182, 190, 191, 196, 204, 225, 229, 235, 243, 253, 257], "predetermin": 0, "order": [0, 1, 3, 4, 5, 6, 8, 10, 14, 19, 32, 78, 89, 100, 120, 138, 162, 174, 224, 225, 228, 235, 250, 255, 263], "each": [0, 1, 2, 4, 5, 6, 8, 9, 10, 14, 16, 17, 18, 19, 32, 68, 88, 103, 104, 122, 132, 148, 173, 182, 190, 196, 225, 243, 250, 253, 261, 263], "consum": [0, 1, 9, 28, 93, 124, 225], "last": [0, 2, 4, 5, 8, 9, 10, 54, 86, 263], "next": [0, 4, 5, 6, 9, 10, 11, 26, 40, 110, 122, 189, 196, 225, 243, 260], "see": [0, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 66, 69, 78, 96, 112, 113, 125, 160, 178, 179, 182, 190, 195, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 247], "fig": [0, 1, 5, 8, 10], "3": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 16, 17, 18, 48, 76, 78, 84, 136, 157, 216, 221, 223, 225, 239, 250, 253, 261], "1": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 14, 15, 16, 17, 18, 20, 27, 39, 43, 48, 55, 56, 72, 82, 84, 100, 122, 126, 136, 152, 180, 182, 185, 190, 193, 198, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 223, 225, 239, 241, 243, 250, 253, 255, 257, 260], "first": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 14, 19, 35, 41, 57, 78, 92, 111, 133, 144, 185, 188, 194, 197, 201, 225, 235, 244, 250, 255], "usual": [0, 1, 2, 4, 5, 6, 7, 9, 10, 16, 17, 18, 25, 96, 182, 187, 188, 196, 257], "frontend": [0, 2, 3, 5, 14, 103, 163, 182, 225, 257, 263, 264], "It": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 16, 17, 18, 20, 32, 48, 84, 89, 93, 94, 96, 103, 122, 126, 131, 142, 151, 174, 182, 209, 215, 225, 241, 244, 253, 264], "doe": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 32, 42, 51, 76, 78, 82, 85, 87, 103, 136, 160, 173, 182, 188, 190, 206, 223, 225, 235, 236], "process": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 16, 32, 39, 42, 43, 74, 78, 94, 106, 139, 151, 163, 167, 169, 170, 182, 190, 204, 225, 243, 250, 257, 263], "anoth": [0, 1, 10, 11, 16, 17, 18, 32, 148, 196, 241, 243], "instead": [0, 1, 3, 5, 6, 8, 9, 10, 16, 17, 18, 27, 28, 42, 59, 66, 78, 82, 87, 92, 100, 110, 115, 119, 133, 138, 145, 159, 173, 177, 182, 183, 185, 190, 191, 196, 197, 201, 204, 206, 216, 217, 218, 222, 225, 229, 235, 241, 242, 245, 250, 253, 255, 257, 259], "read": [0, 1, 2, 3, 5, 8, 9, 10, 11, 43, 98, 122, 126, 127, 130, 160, 172, 188, 190, 198, 206, 211, 214, 216, 231, 240, 241, 253, 257, 263], "user": [0, 1, 5, 6, 9, 10, 15, 114, 196, 235, 243, 250], "input": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18, 19, 20, 25, 40, 41, 42, 51, 56, 58, 72, 74, 77, 84, 85, 98, 100, 103, 107, 111, 121, 132, 135, 136, 141, 142, 144, 150, 151, 152, 173, 174, 182, 185, 187, 190, 193, 196, 197, 198, 200, 223, 225, 228, 229, 233, 239, 240, 243, 245, 248, 250, 253, 256, 257, 258, 260, 263], "from": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 32, 35, 43, 49, 54, 56, 66, 69, 76, 79, 80, 90, 96, 97, 98, 100, 105, 111, 122, 133, 134, 135, 142, 145, 151, 153, 160, 167, 169, 173, 176, 177, 179, 183, 185, 188, 190, 197, 198, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 235, 239, 240, 241, 243, 245, 253, 257, 258, 263, 264], "previou": [0, 1, 7, 8, 10], "produc": [0, 1, 4, 8, 10, 32, 34, 65, 69, 73, 84, 173, 187, 190, 225, 235, 244, 264], "same": [0, 1, 2, 3, 4, 5, 6, 8, 10, 14, 26, 32, 43, 82, 85, 122, 124, 130, 132, 134, 144, 147, 148, 170, 180, 181, 182, 185, 197, 204, 206, 211, 214, 216, 225, 233, 261, 263], "pass": [0, 2, 3, 5, 6, 7, 9, 10, 11, 12, 14, 16, 17, 18, 19, 22, 26, 31, 34, 36, 40, 53, 55, 56, 57, 58, 69, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 103, 111, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 184, 185, 186, 188, 191, 192, 194, 197, 199, 204, 206, 211, 216, 218, 222, 225, 229, 233, 234, 235, 239, 243, 257, 260, 261, 263], "execut": [0, 1, 4, 5, 6, 9, 10, 11, 13, 16, 17, 18, 38, 50, 60, 69, 105, 108, 114, 138, 160, 162, 175, 190, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 232, 235, 246, 263], "transform": [0, 1, 4, 5, 7, 9, 10, 56, 58, 87, 130, 141, 145, 176, 225, 233, 260, 263, 264], "suitabl": [0, 1, 4, 5, 6, 141, 163, 211, 216, 219, 223], "output": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 14, 16, 17, 18, 19, 20, 25, 26, 40, 48, 51, 65, 66, 68, 72, 75, 77, 78, 79, 80, 82, 84, 88, 96, 100, 103, 107, 111, 112, 114, 115, 132, 133, 137, 145, 153, 157, 173, 174, 180, 182, 183, 185, 187, 190, 196, 198, 200, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 228, 231, 233, 235, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 253, 254, 255, 256, 257, 258, 260, 263], "write": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 16, 17, 18, 19, 32, 48, 59, 78, 97, 122, 124, 126, 127, 130, 133, 173, 190, 198, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 229, 243, 249, 252, 263, 264], "disk": 0, "file": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 32, 48, 57, 59, 66, 69, 78, 79, 89, 94, 97, 103, 112, 113, 122, 125, 133, 173, 174, 175, 185, 190, 196, 197, 198, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 228, 229, 235, 243, 249, 263, 264], "backend": [0, 5, 11, 87, 217, 228, 243], "In": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 32, 41, 78, 103, 107, 148, 163, 182, 185, 189, 225, 260, 264], "all": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 25, 32, 35, 41, 42, 60, 67, 73, 75, 76, 77, 80, 82, 85, 87, 88, 89, 91, 92, 93, 94, 100, 102, 103, 104, 105, 106, 110, 113, 114, 115, 120, 122, 124, 125, 132, 133, 134, 136, 138, 141, 142, 145, 150, 159, 161, 162, 173, 174, 180, 182, 183, 185, 186, 187, 190, 194, 196, 197, 198, 200, 204, 206, 211, 214, 216, 220, 223, 224, 225, 228, 229, 232, 233, 234, 235, 241, 242, 243, 248, 250, 253, 257, 263], "directli": [0, 1, 2, 4, 5, 7, 8, 10, 77, 103, 110, 113, 145, 182, 224, 243, 250, 257], "avail": [0, 1, 2, 3, 5, 6, 7, 10, 36, 48, 56, 115, 122, 125, 133, 136, 175, 225, 235, 264], "command": [0, 1, 3, 6, 8, 9, 11, 16, 17, 18, 20, 25, 26, 27, 32, 35, 38, 40, 42, 43, 44, 47, 48, 49, 54, 55, 57, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 81, 83, 88, 97, 98, 100, 102, 103, 106, 108, 114, 115, 117, 122, 138, 154, 159, 160, 173, 174, 175, 182, 183, 185, 186, 187, 190, 191, 193, 196, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 231, 234, 235, 238, 239, 244, 246, 248, 250, 252, 253, 254, 257, 264], "script": [0, 4, 6, 10, 11, 13, 16, 17, 18, 19, 32, 105, 108, 114, 138, 185, 195, 229, 245, 253, 263, 264], "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 28, 32, 35, 42, 43, 44, 55, 56, 65, 74, 78, 84, 87, 90, 91, 93, 94, 100, 103, 107, 111, 122, 125, 130, 135, 136, 139, 141, 143, 145, 151, 182, 183, 185, 187, 189, 190, 192, 195, 196, 198, 200, 204, 224, 225, 228, 235, 241, 243, 245, 248, 250, 252, 253, 257, 260, 263, 264], "easili": [0, 1, 5, 8, 9, 10, 11], "creat": [0, 1, 2, 4, 5, 6, 8, 10, 16, 17, 18, 19, 20, 48, 49, 66, 68, 72, 75, 77, 86, 87, 92, 93, 98, 99, 104, 111, 122, 133, 135, 136, 173, 175, 176, 177, 180, 181, 182, 190, 193, 196, 201, 204, 223, 225, 227, 228, 229, 230, 235, 240, 241, 242, 243, 244, 250, 253, 263], "custom": [0, 1, 3, 6, 9, 10, 11, 13, 241, 244, 264], "just": [0, 1, 5, 6, 8, 9, 10, 14, 33, 150, 185, 190, 196, 197, 198, 229, 235, 243, 248], "right": [0, 1, 2, 5, 6, 8, 10, 57, 174, 185, 196, 260], "two": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 34, 65, 66, 88, 132, 152, 190, 194, 205, 211, 216, 233, 253, 263], "store": [0, 1, 5, 6, 8, 19, 163], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 32, 34, 42, 43, 48, 55, 56, 62, 64, 67, 69, 70, 73, 76, 77, 78, 82, 87, 93, 100, 103, 105, 107, 109, 116, 124, 126, 132, 133, 136, 147, 160, 173, 175, 176, 180, 181, 182, 183, 185, 187, 189, 190, 196, 197, 198, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 228, 229, 235, 240, 241, 243, 244, 248, 250, 251, 253, 254, 255, 257, 258, 260, 263, 264], "abstract": [0, 5, 7, 8, 182], "syntax": [0, 1, 5, 8, 9, 10, 103, 182, 190, 196, 250, 257], "tree": [0, 1, 2, 4, 7, 8, 10, 25, 103, 147, 152, 182, 213, 230, 263, 264], "ast": [0, 1, 5, 182, 264], "simpli": [0, 1, 4, 5, 6, 7, 8, 10, 14, 133, 190, 197], "structur": [0, 5, 6, 7, 8, 10, 15, 164, 210, 220, 263, 264], "design": [0, 2, 3, 4, 6, 7, 9, 11, 14, 15, 16, 17, 18, 19, 25, 32, 33, 40, 43, 57, 61, 69, 70, 77, 78, 80, 81, 82, 85, 87, 88, 100, 108, 110, 117, 122, 138, 139, 146, 151, 155, 160, 162, 174, 176, 177, 179, 180, 181, 182, 185, 187, 188, 190, 195, 196, 198, 200, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 228, 232, 234, 263, 264], "main": [0, 1, 3, 5, 6, 9, 10, 13, 243, 264], "regist": [0, 4, 5, 7, 8, 9, 10, 11, 15, 77, 78, 107, 156, 163, 182, 185, 221, 235, 253, 257, 260, 263], "transfer": [0, 15], "level": [0, 4, 5, 6, 8, 9, 11, 14, 15, 54, 80, 84, 98, 100, 182, 198, 205, 214, 235, 243, 261, 263, 264], "intermedi": [0, 1, 3, 8, 84, 263, 264], "languag": [0, 1, 2, 3, 6, 15, 103, 175, 235, 264], "rtlil": [0, 2, 4, 6, 43, 78, 182, 225, 229, 257, 263, 264], "represent": [0, 1, 5, 6, 7, 8, 9, 10, 43, 163, 181, 250, 251, 264], "perform": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 14, 17, 56, 65, 74, 84, 87, 89, 126, 144, 146, 152, 182, 185, 190, 206, 218, 225, 232, 243, 263, 264], "number": [0, 1, 2, 4, 5, 7, 8, 10, 11, 16, 43, 56, 65, 67, 72, 74, 78, 87, 98, 100, 113, 122, 125, 130, 134, 136, 157, 174, 183, 185, 187, 193, 194, 196, 197, 198, 203, 223, 225, 227, 228, 229, 235, 250, 255, 257], "simplif": [0, 182], "within": [0, 1, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 117, 125, 191, 202, 243], "simplifi": [0, 1, 6, 8, 12, 173, 243, 263, 264], "ha": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 20, 55, 56, 61, 80, 100, 103, 122, 126, 132, 144, 148, 182, 185, 195, 203, 217, 221, 225, 243, 257], "advantag": [0, 1, 2, 3, 5, 10], "over": [0, 1, 2, 3, 5, 6, 8, 9, 10, 85, 111, 148, 173, 185], "between": [0, 1, 5, 10, 13, 14, 16, 17, 20, 38, 41, 54, 69, 125, 132, 160, 189, 190, 201, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 263], "rearrang": 0, "remov": [0, 4, 6, 8, 9, 10, 11, 16, 17, 18, 27, 28, 30, 32, 33, 35, 39, 51, 70, 77, 82, 88, 96, 100, 103, 110, 141, 142, 145, 147, 151, 154, 171, 188, 190, 222, 225, 235, 239, 263], "insert": [0, 6, 19, 82, 85, 134, 201, 213, 218, 219, 220, 222, 223, 243, 253, 257, 263], "thru": 0, "part": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 14, 32, 48, 67, 70, 81, 187, 190, 194, 195, 196, 201, 215, 243, 251, 263], "thei": [0, 1, 2, 4, 5, 6, 8, 9, 10, 11, 14, 65, 88, 122, 130, 133, 139, 143, 145, 148, 173, 183, 235, 243, 250], "don": [0, 1, 4, 6, 9, 14, 78, 85, 87, 88, 112, 114, 124, 141, 142, 150, 182, 186, 196, 201, 204, 206, 211, 214, 216, 229, 239, 243, 249, 250], "t": [0, 1, 2, 4, 5, 6, 9, 10, 14, 17, 56, 57, 78, 85, 87, 88, 112, 114, 124, 141, 142, 150, 154, 182, 186, 190, 196, 201, 204, 206, 209, 211, 213, 214, 215, 216, 219, 220, 223, 225, 229, 239, 243, 249, 250, 257], "chang": [0, 1, 4, 5, 6, 8, 9, 10, 57, 87, 90, 108, 138, 141, 142, 183, 192, 196, 225, 232, 239, 257, 263], "without": [0, 4, 5, 6, 7, 8, 9, 10, 11, 16, 28, 41, 54, 84, 87, 97, 132, 139, 151, 175, 189, 190, 197, 206, 213, 225, 235, 241, 253, 257], "need": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 24, 57, 63, 70, 89, 103, 122, 186, 198, 200, 224, 235, 253, 262], "convert": [0, 1, 2, 5, 6, 8, 16, 17, 18, 57, 78, 79, 103, 106, 120, 122, 126, 130, 131, 135, 141, 163, 165, 166, 168, 182, 197, 233, 240, 253, 257, 258, 259, 261, 263, 264], "fact": [0, 1, 8, 10], "receiv": 0, "place": [0, 1, 9, 10, 32, 174, 209, 215, 243, 244], "interfac": [0, 1, 2, 122, 124, 132, 197, 243, 250, 264], "reduc": [0, 1, 2, 32, 87, 100, 134, 140, 194, 234, 263], "requir": [0, 1, 2, 3, 4, 5, 10, 19, 32, 75, 82, 106, 122, 175, 185, 198, 243], "understand": [0, 2, 3, 10, 14], "when": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 25, 26, 27, 33, 38, 40, 48, 56, 57, 65, 74, 77, 78, 103, 114, 116, 119, 120, 126, 130, 132, 134, 138, 141, 142, 143, 147, 154, 172, 173, 182, 186, 190, 191, 195, 196, 197, 198, 201, 225, 229, 235, 241, 244, 250, 257, 264], "sourc": [0, 1, 2, 3, 6, 7, 8, 9, 10, 12, 41, 43, 54, 62, 75, 78, 132, 204, 225, 235, 264], "e": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 32, 44, 56, 78, 88, 124, 135, 187, 188, 190, 195, 197, 201, 203, 206, 209, 217, 222, 223, 228, 238, 248, 250, 257, 261], "g": [0, 1, 2, 4, 5, 6, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 32, 78, 81, 107, 135, 187, 188, 195, 197, 201, 203, 209, 214, 228, 243, 244, 257], "ad": [0, 2, 4, 5, 6, 7, 8, 9, 10, 16, 42, 56, 100, 173, 175, 190, 235, 240, 260], "addit": [0, 1, 2, 3, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 25, 41, 74, 77, 78, 91, 100, 111, 127, 130, 132, 175, 182, 185, 190, 225, 229, 235, 240, 242, 243, 250, 260, 263], "featur": [0, 3, 5, 7, 8, 9, 10, 11, 115, 182, 211, 214, 216, 219, 257, 260, 264], "basic": [0, 2, 3, 4, 5, 7, 9, 182, 263, 264], "cell": [0, 1, 3, 6, 8, 9, 10, 11, 12, 16, 17, 19, 20, 21, 25, 27, 32, 33, 34, 35, 39, 41, 42, 43, 44, 49, 56, 57, 58, 61, 62, 66, 67, 68, 69, 72, 73, 74, 77, 80, 83, 84, 87, 88, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 109, 111, 117, 118, 121, 122, 130, 132, 133, 135, 140, 142, 145, 163, 165, 168, 169, 173, 174, 176, 177, 182, 183, 185, 186, 187, 190, 192, 193, 194, 196, 197, 203, 204, 207, 208, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 225, 233, 234, 235, 238, 239, 240, 241, 244, 248, 250, 253, 256, 257, 258, 259, 260, 261, 263, 264], "librari": [0, 1, 3, 5, 6, 7, 10, 16, 17, 18, 19, 57, 83, 103, 111, 125, 196, 225, 235, 248, 264], "fix": [0, 1, 2, 9, 39, 223, 261, 263], "function": [0, 2, 4, 5, 6, 7, 8, 10, 14, 84, 180, 241, 243, 253, 257, 263], "repres": [0, 1, 2, 3, 5, 8, 10, 14, 16, 35, 55, 190, 235, 253], "rtl": [0, 3, 4, 7, 8, 9, 15, 74, 160, 225, 263, 264], "datapath": [0, 1], "well": [0, 1, 3, 4, 5, 8, 9, 10, 19, 43, 252, 261], "logic": [0, 3, 5, 7, 8, 9, 14, 15, 16, 17, 18, 19, 56, 57, 68, 80, 84, 85, 93, 100, 103, 109, 125, 130, 132, 134, 136, 144, 182, 194, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 233, 235, 241, 243, 253, 257, 263, 264], "gate": [0, 4, 11, 15, 16, 69, 71, 74, 80, 84, 91, 100, 113, 118, 132, 136, 140, 190, 197, 198, 199, 211, 216, 219, 225, 235, 241, 250, 263, 264], "singl": [0, 2, 4, 5, 6, 7, 9, 10, 11, 14, 55, 59, 87, 117, 125, 130, 141, 142, 152, 176, 177, 185, 187, 194, 196, 201, 202, 225, 233, 242, 243, 250, 253], "bit": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 39, 44, 55, 79, 84, 86, 87, 91, 104, 107, 111, 113, 122, 125, 126, 132, 141, 142, 148, 150, 173, 176, 177, 185, 193, 197, 200, 203, 207, 209, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 225, 229, 235, 239, 243, 250, 252, 253, 255, 257, 260, 261, 263], "support": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 16, 17, 19, 47, 55, 82, 97, 103, 107, 125, 126, 162, 173, 175, 182, 183, 190, 198, 203, 206, 214, 220, 221, 223, 225, 229, 235, 243, 250, 253, 260, 263], "multi": [0, 2, 4, 6, 8, 9, 10, 11, 14, 55, 84, 122, 176, 177, 200, 253, 255, 263], "valu": [0, 1, 2, 4, 5, 8, 9, 10, 11, 16, 19, 26, 27, 36, 40, 43, 55, 56, 75, 76, 78, 82, 85, 87, 88, 92, 100, 103, 107, 113, 122, 124, 126, 132, 133, 145, 150, 154, 163, 167, 169, 173, 175, 180, 182, 185, 187, 189, 190, 191, 192, 196, 197, 198, 203, 204, 206, 211, 214, 215, 216, 220, 221, 222, 223, 225, 227, 228, 229, 235, 237, 239, 243, 250, 253, 257, 260, 263], "individu": [0, 1, 2, 5, 6, 9, 10, 11, 68, 111, 122, 131, 201, 250, 257], "wire": [0, 1, 2, 4, 6, 8, 9, 10, 11, 16, 19, 20, 27, 32, 34, 41, 51, 66, 67, 72, 77, 78, 82, 87, 88, 100, 103, 133, 167, 173, 176, 182, 183, 187, 190, 196, 200, 201, 225, 241, 243, 253, 257, 260, 263], "constant": [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 14, 16, 17, 18, 44, 78, 86, 100, 121, 137, 141, 142, 144, 173, 189, 198, 225, 228, 229, 241, 243, 244, 250, 255, 257, 263], "coars": [0, 1, 2, 3, 5, 7, 9, 10, 15, 44, 87, 160, 200, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 248, 253, 263, 264], "grain": [0, 1, 2, 3, 5, 7, 9, 10, 15, 44, 87, 142, 152, 200, 248, 253, 263, 264], "construct": [0, 1, 6, 10, 100, 135, 252, 254, 257], "els": [0, 1, 2, 5, 6, 8, 9, 11, 135, 169, 195], "switch": [0, 5, 6, 8, 10, 33, 190, 263], "sensit": [0, 1, 4, 5, 7, 8, 19, 122], "list": [0, 4, 5, 6, 8, 9, 10, 11, 14, 16, 17, 36, 43, 57, 69, 74, 79, 86, 102, 103, 115, 122, 133, 160, 182, 185, 194, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 235, 236, 237, 250, 263], "updat": [0, 1, 5, 8, 9, 14, 32, 193], "port": [0, 1, 2, 5, 6, 8, 9, 10, 11, 14, 19, 20, 32, 41, 42, 51, 62, 64, 70, 75, 78, 82, 84, 100, 103, 111, 122, 126, 132, 133, 144, 160, 176, 177, 183, 185, 186, 187, 190, 196, 198, 200, 201, 204, 206, 211, 214, 216, 225, 231, 233, 235, 239, 240, 241, 243, 244, 248, 250, 253, 255, 256, 258, 263], "memori": [0, 6, 8, 9, 10, 11, 54, 78, 127, 148, 160, 172, 182, 187, 190, 198, 204, 206, 211, 213, 214, 216, 218, 220, 221, 223, 225, 231, 234, 239, 250, 253, 257, 263], "also": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 20, 34, 41, 48, 51, 59, 66, 70, 74, 77, 78, 87, 89, 96, 100, 103, 113, 115, 122, 126, 130, 132, 139, 141, 142, 160, 182, 183, 185, 190, 193, 196, 200, 201, 225, 235, 245, 260, 261, 262], "disadvantag": [0, 1], "have": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 25, 34, 54, 78, 79, 81, 82, 85, 92, 109, 115, 126, 132, 139, 163, 173, 183, 187, 190, 221, 225, 234, 243], "power": [0, 2, 5, 7, 10, 65, 260], "even": [0, 1, 5, 7, 8, 10, 14, 28, 59, 76, 85, 100, 111, 133, 148, 235, 243], "do": [0, 2, 5, 6, 8, 10, 11, 25, 34, 48, 60, 66, 69, 78, 85, 100, 103, 108, 114, 115, 126, 134, 138, 139, 142, 150, 160, 164, 173, 182, 183, 185, 187, 190, 195, 196, 200, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 226, 229, 231, 233, 235, 239, 241, 243, 244, 248, 259], "where": [0, 1, 2, 5, 6, 8, 9, 10, 19, 56, 74, 122, 144, 147, 148, 182, 200, 225, 250, 260, 261, 263, 264], "more": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 14, 32, 34, 48, 56, 78, 81, 100, 103, 111, 122, 125, 130, 141, 175, 194, 196, 228, 235, 239, 240, 243, 248, 253], "advanc": [0, 8, 15, 264], "complex": [0, 1, 2, 5, 6, 8, 9, 10, 15, 65, 100, 130, 182, 243], "oper": [0, 1, 4, 5, 6, 8, 9, 19, 20, 22, 27, 35, 42, 55, 78, 81, 88, 93, 103, 107, 111, 114, 139, 145, 150, 151, 160, 174, 190, 198, 204, 206, 223, 234, 253, 259, 260, 263], "low": [0, 1, 2, 7, 9, 11, 14, 55, 61, 132, 163, 173, 198, 228], "check": [0, 1, 5, 6, 9, 10, 11, 14, 15, 16, 17, 19, 25, 32, 69, 77, 85, 87, 115, 120, 124, 125, 132, 160, 175, 182, 185, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 228, 229, 253, 263], "fail": [0, 4, 9, 10, 20, 32, 55, 72, 183, 185], "run": [0, 1, 4, 8, 9, 10, 11, 14, 16, 17, 18, 32, 43, 57, 69, 74, 81, 87, 103, 160, 173, 174, 182, 185, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 235, 243, 253, 263], "unsupport": [0, 6, 56, 235], "high": [0, 2, 5, 7, 9, 11, 14, 15, 55, 132, 182, 198, 264], "higher": [0, 1, 2, 67, 122, 243], "lower": [0, 1, 2, 10, 107, 125], "exampl": [0, 1, 3, 4, 5, 7, 8, 10, 14, 15, 16, 26, 27, 40, 74, 76, 86, 100, 141, 142, 148, 154, 173, 182, 185, 190, 200, 229, 239, 243, 248, 250, 253, 264], "mai": [0, 1, 2, 5, 6, 7, 8, 9, 11, 14, 32, 39, 57, 76, 78, 81, 84, 103, 173, 175, 185, 188, 193, 225, 235, 243, 250], "v": [0, 1, 2, 5, 6, 7, 9, 10, 11, 15, 17, 18, 72, 78, 80, 88, 98, 103, 137, 157, 174, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 229, 235, 242, 250, 253, 257], "synth": [0, 6, 207, 208, 209, 210, 212, 214, 215, 217, 219, 222, 263], "describ": [0, 1, 3, 4, 5, 7, 8, 11, 122, 190, 225], "liberti": [0, 2, 7, 13, 16, 57, 175, 196, 203, 209, 210, 215, 235, 263], "read_verilog": [0, 8, 9, 10, 11, 17, 54, 103, 196, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 253, 263], "behavior": [0, 2, 5, 10, 26, 34, 42, 49, 85, 87, 103, 111, 141, 142, 160, 169, 180, 181, 182, 263], "d": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 19, 41, 48, 56, 69, 80, 107, 125, 165, 166, 175, 182, 190, 195, 197, 198, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 229, 235, 260], "type": [0, 1, 4, 5, 6, 7, 9, 10, 11, 14, 16, 19, 34, 35, 39, 41, 43, 55, 57, 58, 74, 77, 78, 79, 80, 81, 82, 89, 97, 102, 103, 110, 111, 113, 115, 117, 125, 134, 141, 142, 144, 150, 165, 166, 182, 183, 190, 192, 194, 195, 197, 199, 203, 225, 235, 240, 241, 243, 250, 256, 261, 263], "flip": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 16, 40, 77, 87, 95, 122, 124, 141, 162, 163, 193, 223, 240, 243, 263], "flop": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 16, 19, 40, 77, 87, 95, 122, 124, 141, 162, 163, 193, 223, 240, 243, 261, 263], "mux": [0, 2, 4, 5, 10, 11, 16, 56, 100, 142, 147, 150, 153, 199, 211, 214, 220, 223, 229, 233, 239, 263], "proc": [0, 2, 4, 5, 6, 9, 10, 11, 14, 17, 78, 160, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 253, 257, 263], "some": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 56, 81, 85, 100, 132, 141, 142, 182, 194, 195, 229, 253, 263], "simpl": [0, 1, 5, 8, 9, 14, 16, 19, 43, 100, 111, 141, 190, 194, 214, 225, 240, 257, 263, 264], "optim": [0, 2, 3, 5, 9, 11, 16, 17, 18, 84, 87, 130, 142, 145, 152, 173, 182, 206, 225, 230, 234, 239, 243, 263, 264], "opt": [0, 4, 5, 6, 9, 10, 11, 17, 160, 188, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 253, 263], "multiplex": [0, 1, 4, 5, 8, 9, 10, 11, 58, 141, 153, 162, 213, 223, 263], "techmap": [0, 2, 6, 7, 9, 10, 17, 19, 69, 78, 79, 83, 111, 122, 197, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 229, 259, 263], "map": [0, 2, 3, 4, 5, 6, 8, 9, 10, 19, 27, 34, 37, 42, 69, 78, 79, 81, 83, 84, 97, 99, 100, 109, 126, 134, 145, 154, 176, 198, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 229, 230, 240, 244, 257, 258, 261, 263, 264], "ones": [0, 1, 10, 29, 183, 257], "dfflibmap": [0, 2, 7, 209, 210, 215, 263], "lib": [0, 10, 12, 17, 125, 175, 180, 181, 182, 196, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 235, 248, 253], "abc": [0, 1, 2, 4, 7, 9, 11, 17, 18, 19, 81, 136, 145, 173, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 263, 264], "remain": [0, 7, 9, 19, 57, 81, 190], "cleanup": [0, 138], "result": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 14, 18, 98, 111, 124, 129, 134, 141, 142, 145, 175, 182, 194, 198, 206, 211, 214, 216, 221, 225, 228, 260, 264], "write_verilog": [0, 10, 32, 207, 210, 213, 214, 217, 218, 220, 221, 222, 229, 263], "A": [0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 17, 43, 69, 88, 100, 107, 109, 121, 122, 160, 182, 187, 190, 194, 196, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 250, 253, 257, 260], "detail": [0, 1, 3, 4, 5, 13, 14, 66, 196, 264], "descript": [0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 15, 66, 112, 113, 122, 125, 179, 242, 253, 254], "found": [0, 1, 2, 4, 5, 6, 8, 9, 10, 11, 33, 34, 57, 62, 73, 133, 147, 159, 183, 187, 190, 235], "line": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 14, 16, 43, 55, 76, 115, 135, 195, 216, 235, 241, 253, 254, 264], "refer": [0, 1, 3, 5, 6, 10, 11, 16, 78, 102, 235, 264], "term": [0, 1], "onli": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18, 19, 21, 25, 28, 32, 35, 42, 48, 56, 57, 58, 59, 65, 69, 70, 71, 74, 76, 77, 78, 79, 81, 83, 84, 92, 97, 100, 104, 107, 111, 114, 117, 122, 126, 135, 138, 139, 141, 144, 147, 151, 160, 164, 172, 173, 174, 175, 180, 181, 182, 185, 186, 187, 189, 190, 194, 195, 196, 197, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 234, 235, 242, 243, 248, 250, 251, 253, 254, 257, 258, 260], "contain": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 19, 39, 54, 85, 87, 97, 103, 122, 125, 132, 164, 183, 188, 190, 197, 200, 225, 235, 240, 243, 244, 253, 254], "short": [1, 3, 6, 10, 11, 72, 183, 225, 257], "introduct": [1, 264], "dure": [1, 8, 19, 25, 69, 84, 182, 183, 225], "specifi": [1, 5, 8, 9, 10, 11, 14, 16, 17, 18, 19, 20, 27, 32, 33, 35, 41, 42, 43, 44, 47, 48, 50, 54, 55, 56, 57, 59, 64, 65, 74, 75, 76, 78, 79, 82, 84, 92, 97, 100, 103, 111, 112, 113, 115, 122, 126, 133, 134, 136, 154, 156, 157, 160, 173, 175, 176, 180, 182, 183, 185, 187, 189, 190, 193, 195, 196, 197, 198, 200, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 235, 236, 241, 243, 244, 248, 250, 255, 257], "us": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 19, 25, 27, 28, 32, 34, 38, 40, 41, 42, 43, 44, 48, 54, 55, 56, 61, 66, 69, 71, 72, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 100, 103, 107, 110, 111, 112, 113, 114, 115, 119, 120, 122, 125, 126, 130, 132, 133, 134, 136, 138, 139, 144, 145, 154, 160, 163, 169, 173, 174, 175, 176, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 200, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 231, 239, 240, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 256, 257, 259, 260, 263, 264], "understood": [1, 3, 5], "find": [1, 5, 6, 7, 9, 10, 11, 12, 32, 81, 87, 187, 235, 263], "equival": [1, 5, 7, 8, 16, 33, 42, 65, 72, 77, 88, 132, 185, 225, 229, 258, 263], "done": [1, 4, 5, 7, 8, 10, 11, 264], "automat": [1, 5, 6, 8, 9, 11, 16, 17, 74, 94, 103, 117, 125, 160, 182, 185, 197, 206, 213, 216, 223, 225, 228, 235, 243, 250, 263], "softwar": [1, 3, 6, 10], "so": [1, 2, 3, 5, 6, 8, 9, 10, 11, 13, 16, 17, 18, 19, 20, 43, 78, 94, 117, 122, 196, 197, 201, 202, 204, 257, 259, 263], "convers": [1, 5, 8, 11, 126, 141, 240], "figur": [1, 5, 10, 48], "2": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 48, 79, 84, 107, 122, 136, 152, 197, 211, 215, 216, 223, 229, 250, 253, 257, 260], "how": [1, 3, 5, 6, 7, 8, 9, 10, 122], "relat": [1, 2, 4, 8, 10, 32, 235, 263], "kind": [1, 10, 125], "regardless": [1, 2, 5, 26, 40], "wai": [1, 4, 5, 6, 8, 9, 10, 15, 225], "obtain": [1, 11], "manual": [1, 5, 6, 10, 15, 109, 115, 125, 195], "verifi": [1, 4, 9, 10, 11, 42, 115, 185, 264], "compar": [1, 4, 5, 6, 8, 14, 68, 137, 228, 229, 264], "simul": [1, 2, 5, 9, 10, 65, 98, 122, 127, 160, 169, 182, 252, 263], "therefor": [1, 2, 3, 4, 5, 7, 8, 10, 11, 57], "still": [1, 5, 6, 7, 8, 10, 16, 17, 18, 26, 32, 34, 40, 91, 93, 125, 196, 207], "simulat": 1, "allow": [1, 2, 4, 5, 6, 7, 10, 34, 43, 56, 79, 81, 84, 100, 103, 132, 147, 153, 185, 188, 195, 244], "verif": [1, 3, 11, 15, 40, 69, 87, 126, 160, 175, 183, 252, 263, 264], "note": [1, 2, 4, 5, 6, 7, 8, 9, 11, 14, 15, 16, 17, 18, 47, 66, 74, 81, 87, 130, 138, 163, 174, 182, 183, 185, 190, 194, 196, 217, 220, 224, 225, 236, 243, 257], "exact": [1, 5, 14, 174, 198], "mean": [1, 4, 6, 9, 10, 100, 122, 186, 225], "terminologi": [1, 3], "cours": [1, 10], "time": [1, 2, 3, 4, 6, 7, 9, 10, 16, 19, 25, 26, 28, 40, 44, 55, 65, 72, 76, 78, 81, 98, 103, 111, 115, 125, 126, 130, 148, 185, 190, 196, 198, 200, 216, 225, 227, 228, 229, 232, 235, 243, 248, 263], "For": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 26, 27, 40, 87, 92, 100, 103, 122, 154, 187, 217, 225, 239, 243, 250, 253], "abel": 1, "wa": [1, 3, 4, 5, 9, 10, 32, 82, 100, 206, 264], "introduc": [1, 10, 11, 74], "1985": [1, 15], "programm": [1, 15], "devic": [1, 15, 216, 217, 220, 223, 259, 260, 261], "lhbb85": [1, 15], "would": [1, 3, 4, 6, 7, 8, 9, 10, 14, 41, 57, 129, 182, 216, 243, 250, 259, 264], "consid": [1, 4, 5, 6, 8, 10, 19, 32, 41, 44, 65, 72, 77, 78, 88, 91, 117, 134, 187, 190, 194, 202, 253], "todai": [1, 264], "look": [1, 3, 5, 6, 9, 10, 78, 79, 103, 122, 149, 201, 235, 253], "its": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 20, 41, 81, 82, 93, 124, 126, 153, 173, 182, 190, 237, 243], "biggest": 1, "build": [1, 3, 6, 9, 10, 11, 13, 103, 264], "block": [1, 2, 5, 6, 7, 9, 10, 11, 19, 106, 120, 125, 182, 189, 208, 211, 214, 216, 217, 218, 219, 220, 222, 223, 235, 257, 263, 264], "like": [1, 2, 3, 5, 6, 7, 10, 16, 20, 22, 27, 32, 59, 66, 87, 100, 103, 111, 122, 154, 173, 182, 183, 185, 190, 201, 217, 221, 225, 235, 240, 243, 250, 253, 257], "cpu": [1, 5, 264], "comput": [1, 3, 15, 19, 190, 243], "core": [1, 5, 9], "At": [1, 4, 6, 9, 41, 97, 223, 225, 264], "tradit": 1, "program": [1, 3, 4, 5, 7, 9, 11, 48, 250, 264], "c": [1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 15, 17, 18, 48, 107, 182, 190, 239, 242, 250, 260, 263], "matlab": 1, "sometim": [1, 7, 10, 72, 85], "special": [1, 5, 8, 10, 12, 85, 173, 187, 225, 243, 253, 264], "systemc": 1, "But": [1, 2, 5, 6, 9, 10, 234], "exist": [1, 2, 3, 5, 6, 8, 10, 20, 42, 48, 90, 103, 115, 122, 132, 173, 180, 181, 182, 188, 225, 226, 235, 258, 260, 264], "connect": [1, 2, 4, 5, 6, 8, 9, 10, 20, 32, 41, 61, 67, 76, 77, 78, 104, 111, 112, 144, 147, 189, 190, 225, 241, 249, 250, 255, 257, 260, 263], "ieee": [1, 4, 15], "1685": [1, 15], "2009": [1, 15], "defin": [1, 2, 4, 5, 6, 8, 9, 16, 54, 55, 113, 173, 175, 182, 185, 225, 235, 243, 250, 253, 263], "ip": [1, 15], "xact": [1, 15], "format": [1, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18, 97, 112, 125, 179, 181, 185, 196, 198, 201, 203, 235, 240, 244, 250, 251, 257, 258, 263, 264], "10": [1, 2, 4, 10, 11, 14, 15, 78, 122, 217, 223, 250], "algorithm": [1, 4, 5, 6, 7, 10, 12, 15, 84, 130, 174, 225, 264], "often": [1, 4, 7, 10, 139], "set": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 27, 28, 30, 34, 36, 37, 41, 42, 43, 49, 56, 61, 67, 74, 75, 77, 78, 80, 82, 83, 87, 90, 92, 97, 100, 103, 111, 122, 124, 125, 126, 133, 141, 142, 145, 154, 167, 173, 175, 180, 182, 183, 185, 187, 190, 193, 196, 198, 203, 206, 210, 211, 214, 216, 223, 225, 226, 228, 229, 234, 235, 237, 238, 241, 243, 244, 250, 252, 253, 255, 257, 259, 260, 263], "pointer": [1, 8], "mimic": [1, 6], "concept": 1, "hardwar": [1, 3, 5, 7, 15, 125, 200, 243, 259], "full": [1, 3, 5, 8, 10, 16, 17, 18, 89, 91, 107, 108, 138, 142, 145, 152, 175, 198, 206, 207, 209, 213, 216, 217, 218, 219, 223, 243, 263], "dynam": [1, 4, 5, 8], "manag": [1, 10], "correspond": [1, 4, 5, 10, 81, 100, 173, 225, 243, 260], "synthes": [1, 3, 4, 5, 9, 10, 11, 182, 215, 217, 264], "metadata": [1, 2, 5, 253, 263], "vhdl": [1, 2, 3, 5, 15, 175, 263, 264], "asid": 1, "mani": [1, 2, 5, 6, 8, 9, 10, 16, 17, 82, 190], "commerci": [1, 6, 264], "foss": [1, 3, 264], "least": [1, 2, 6, 10, 41, 48, 65, 78, 79, 115, 122, 185, 190], "imper": 1, "data": [1, 2, 3, 4, 6, 8, 10, 26, 40, 43, 103, 122, 130, 180, 243, 257, 264], "path": [1, 4, 5, 8, 10, 19, 43, 57, 77, 130, 202, 210, 235, 260, 263], "alwai": [1, 2, 5, 6, 9, 10, 11, 14, 16, 25, 43, 103, 111, 132, 148, 170, 173, 182, 185, 225, 235, 243, 253, 257, 264], "fragment": 1, "provid": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 43, 85, 87, 100, 136, 159, 173, 185, 203, 224, 235, 243], "togeth": [1, 5, 10, 109, 152, 243], "signal": [1, 2, 4, 5, 6, 8, 9, 11, 16, 20, 26, 42, 56, 64, 66, 69, 75, 78, 86, 88, 90, 93, 96, 98, 111, 122, 133, 134, 145, 147, 148, 150, 151, 152, 157, 163, 170, 173, 185, 200, 201, 205, 228, 241, 243, 250, 256, 263], "whenev": [1, 2, 5, 6, 8, 9, 10, 43], "trigger": [1, 66, 68, 132, 243], "abl": [1, 5, 11, 32, 130, 194], "appropri": [1, 8, 172, 239], "posedg": [1, 2, 5, 8, 9, 10, 11, 14, 86, 253], "clk": [1, 2, 5, 9, 10, 11, 16, 243, 253], "y": [1, 2, 4, 5, 8, 9, 10, 11, 15, 79, 174, 213, 222, 235, 239, 244, 250, 253], "b": [1, 2, 4, 5, 6, 8, 9, 10, 78, 80, 100, 107, 153, 196, 219, 220, 239, 240, 250, 260], "posit": [1, 2, 5, 6, 7, 103, 122, 197], "edg": [1, 2, 5, 7, 8, 14, 19, 26, 40, 122, 197, 229, 243, 263], "detect": [1, 2, 5, 8, 9, 88, 90, 96, 124, 132, 141, 147, 148, 225, 228, 260, 263], "howev": [1, 4, 5, 9, 10, 65], "adder": [1, 2, 5, 7, 9, 10, 24, 63, 100, 107, 213, 239, 260, 263], "calcul": [1, 2, 4, 5, 7, 8, 9, 78, 100, 263], "sum": [1, 10, 16, 260], "q": [1, 2, 5, 9, 10, 19, 48, 56, 76, 114, 197, 198, 209, 215, 218, 221, 226, 231, 250], "case": [1, 2, 3, 4, 5, 6, 7, 9, 10, 14, 27, 32, 74, 81, 87, 115, 122, 126, 135, 141, 144, 147, 148, 149, 154, 160, 169, 182, 185, 189, 196, 225, 229, 235, 250, 264], "long": [1, 3, 6, 10, 196], "those": [1, 6, 10, 14, 19, 74, 77, 79, 133, 135, 197, 198, 235, 253, 260], "complet": [1, 3, 5, 6, 10, 102, 139, 151, 204], "unrol": [1, 8, 103], "interestingli": 1, "seem": [1, 10], "other": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 19, 27, 54, 55, 77, 89, 92, 111, 120, 125, 130, 135, 138, 139, 141, 143, 148, 154, 162, 196, 225, 234, 241], "capabl": [1, 9, 10, 56], "besid": [1, 4, 5, 13], "On": [1, 5, 6, 7, 8, 196], "combinatori": [1, 2, 5, 7, 19, 34, 190, 243], "tmp": 1, "limit": [1, 6, 7, 14, 19, 126, 144, 185, 187, 190, 194, 197, 260, 264], "subset": [1, 3, 5, 182], "name": [1, 2, 5, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 27, 36, 41, 42, 43, 48, 54, 56, 62, 66, 69, 77, 78, 82, 87, 92, 98, 100, 103, 109, 111, 122, 126, 133, 139, 154, 156, 163, 173, 175, 176, 177, 180, 181, 182, 183, 185, 187, 188, 190, 191, 192, 196, 197, 198, 200, 201, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 235, 237, 241, 243, 250, 253, 255, 256, 257, 263], "minimalist": [1, 3], "uncondit": 1, "analys": [1, 19], "best": [1, 17, 18, 57], "includ": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 19, 84, 94, 100, 109, 112, 113, 133, 144, 175, 182, 190, 196, 198, 235, 240, 241, 243, 249, 250, 255, 257, 264], "fsm": [1, 2, 9, 11, 15, 66, 94, 96, 97, 206, 211, 213, 216, 218, 220, 221, 223, 235, 263, 264], "identif": [1, 4], "larger": [1, 5, 6, 10, 16, 17, 18, 32, 44, 84, 91, 197, 211, 214, 220, 223], "shareabl": [1, 4, 194], "resourc": [1, 2, 4, 5, 107, 122, 130, 206, 223, 263], "which": [1, 2, 3, 4, 5, 6, 9, 10, 11, 14, 16, 18, 32, 34, 43, 56, 78, 82, 84, 85, 87, 96, 100, 103, 111, 182, 184, 185, 190, 197, 221, 225, 235, 243, 249, 250, 260], "graph": [1, 10, 84, 196, 250, 263], "element": [1, 5, 6, 8, 9, 10, 11, 19, 84, 190, 255, 257, 261, 264], "Such": [1, 2, 5, 10, 14, 150], "encod": [1, 2, 5, 9, 14, 66, 89, 92, 93, 97, 157, 197, 264], "node": [1, 10, 72, 88, 250], "replac": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 16, 17, 18, 21, 26, 32, 40, 81, 83, 85, 87, 93, 100, 104, 141, 142, 147, 152, 162, 173, 182, 183, 187, 190, 204, 225, 239, 241, 243, 253, 254, 257, 263], "highli": [1, 10, 15], "sophist": [1, 111], "abov": [1, 4, 5, 8, 10, 11, 14, 16, 17, 18, 89, 92, 183, 223, 225, 243, 250], "isol": 1, "step": [1, 2, 4, 5, 8, 9, 10, 32, 65, 72, 182, 185, 235, 243], "small": [1, 5, 10, 13, 136, 174, 182, 187, 199, 244], "AND": [1, 16, 81, 100, 209, 230, 263], "OR": [1, 16, 81, 100, 109, 230, 263], "NOT": [1, 16], "xor": [1, 2, 8, 16, 81, 199, 209, 230], "etc": [1, 2, 5, 7, 8, 19, 20, 22, 32, 119, 136, 206], "electron": [1, 5, 15], "interchang": 1, "edif": [1, 175, 208, 211, 212, 216, 219, 222, 223, 235, 263], "eas": [1, 4], "latter": [1, 2, 225], "most": [1, 2, 3, 4, 5, 6, 9, 10, 11, 14, 84, 162, 190, 196, 243, 264], "instanti": [1, 8, 9, 10, 19, 43, 103, 109, 218, 225, 234, 241, 243], "There": [1, 5, 6, 10, 14, 253], "opportun": [1, 194], "second": [1, 2, 5, 6, 7, 8, 10, 11, 41, 81, 173, 185, 188, 201], "good": [1, 5, 6, 9, 10, 182], "simplest": [1, 2, 6, 7], "approach": [1, 3, 6, 8, 72, 100, 173, 213, 264], "product": [1, 10, 16, 260], "karnaugh": 1, "exponenti": [1, 185], "worst": 1, "cannot": [1, 5, 7, 14, 87, 145, 261], "make": [1, 2, 5, 6, 10, 11, 35, 42, 134, 173, 182, 183, 200, 235, 240, 244, 253, 262], "effici": [1, 10, 15, 122, 134], "than": [1, 2, 5, 6, 7, 8, 10, 14, 16, 17, 18, 20, 78, 100, 122, 125, 134, 182, 187, 190, 196, 200, 211, 214, 216, 220, 223, 235, 248, 260], "nand": [1, 8, 16, 21, 250], "nor": [1, 16, 17, 58, 71], "modern": [1, 9, 11], "util": [1, 5, 7, 8, 10, 13, 48], "much": [1, 9, 10, 78, 194], "complic": [1, 7, 8, 10], "bhsv90": [1, 15], "binari": [1, 6, 8, 14, 32, 43, 92, 97, 175, 235, 250, 257], "decis": [1, 2, 4, 5, 8, 10, 84, 134, 263], "diagram": [1, 5, 10], "bdd": 1, "And": [1, 6, 11, 250], "invert": [1, 7, 16, 56, 57, 88, 140, 142, 190, 198, 250, 263], "aig": [1, 6, 16, 17, 18, 113, 250], "work": [1, 3, 4, 5, 6, 7, 9, 11, 13, 14, 18, 66, 139, 207, 209, 214, 215, 235, 252, 263], "former": [1, 225], "uniqu": [1, 6, 10, 12, 14, 16, 19, 62, 187, 196, 225, 250, 263], "normal": [1, 5, 10, 48, 78, 82, 226], "better": [1, 4, 8, 9, 10, 185, 196], "suit": [1, 15, 235, 264], "larg": [1, 4, 5, 8, 9, 10, 11, 182, 185, 187, 194, 216, 220, 223, 263], "recommend": [1, 3, 4, 8, 9, 10, 57, 81, 182, 223, 241], "might": [1, 4, 5, 7, 8, 10, 103, 204, 244, 250, 264], "half": [1, 10, 185, 263], "fpga": [1, 2, 9, 17, 18, 55, 263], "lut": [1, 2, 16, 17, 18, 19, 143, 177, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 259, 263], "option": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 30, 32, 34, 35, 37, 38, 40, 41, 42, 44, 45, 46, 48, 49, 52, 55, 56, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 97, 98, 100, 101, 103, 104, 107, 108, 110, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 125, 126, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 141, 142, 144, 145, 146, 149, 150, 152, 154, 155, 156, 157, 159, 160, 162, 164, 169, 173, 174, 175, 176, 177, 182, 183, 185, 187, 188, 190, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 233, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "chain": [1, 135, 197, 230, 260, 261, 263], "lowest": [1, 5, 250], "asic": 1, "further": [1, 5, 9, 10, 68, 111, 190, 225], "inform": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 73, 100, 112, 175, 203, 229, 242, 243, 249, 253, 263], "transistor": 1, "possibl": [1, 2, 3, 4, 5, 6, 8, 9, 10, 17, 18, 32, 48, 52, 122, 134, 142, 196, 225, 243, 263], "seldom": 1, "atom": 1, "take": [1, 2, 3, 5, 6, 11, 28, 85, 111, 125, 185, 243], "strength": 1, "extens": [1, 5, 9, 176, 182, 186, 235, 257, 264], "basi": [1, 3, 264], "specialis": 1, "06": [1, 3, 4, 15], "separ": [1, 2, 5, 6, 8, 9, 10, 11, 14, 38, 77, 86, 104, 122, 190, 201, 225, 235, 243, 256], "document": [1, 5, 6, 10, 11, 14, 133, 245, 264], "1364": [1, 4, 15], "2002": [1, 15], "02": [1, 3, 15], "certain": [1, 5, 6, 7, 9, 10, 14, 19, 135, 182, 195, 234], "interpret": [1, 2, 8, 16, 17, 18, 122, 182, 190, 228], "scope": [1, 10, 98, 189, 190, 198], "section": [1, 2, 4, 5, 6, 9, 10, 13, 15, 189, 250], "quick": [1, 3, 5, 264], "overview": [1, 3, 8, 14, 264], "import": [1, 3, 5, 7, 8, 10, 54, 180, 182, 194, 224, 225, 235], "increas": [1, 5, 84, 185, 243], "known": [1, 2, 5, 9, 10, 14, 32, 250], "declar": [1, 5, 6, 8, 14, 19, 54, 103, 163, 173, 196, 198, 235, 253], "especi": [1, 3, 6], "back": [1, 5, 6, 9, 10, 19, 43, 109, 136, 187, 257, 263], "end": [1, 3, 5, 6, 8, 9, 10, 11, 14, 17, 48, 54, 69, 98, 160, 182, 189, 198, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 250, 257], "unfortun": [1, 8, 244], "what": [1, 8, 9, 10, 11, 48, 85, 129, 182, 186], "actual": [1, 2, 3, 6, 8, 9, 10, 26, 41, 57, 79, 96, 115, 122, 139, 182, 185, 197], "lead": [1, 5, 10, 16, 17, 18], "confus": 1, "about": [1, 2, 3, 4, 5, 6, 9, 10, 11, 14, 91, 175, 253], "come": [1, 10, 13], "attribut": [1, 2, 4, 5, 8, 9, 10, 16, 18, 19, 30, 32, 34, 41, 61, 67, 78, 83, 90, 92, 93, 97, 100, 103, 106, 109, 112, 122, 124, 125, 126, 154, 163, 173, 174, 180, 182, 183, 187, 190, 196, 198, 203, 204, 206, 211, 214, 216, 220, 225, 228, 234, 241, 243, 244, 249, 250, 253, 257, 258, 260, 263], "situat": [1, 2, 148], "accept": [1, 10, 13, 225], "arithmet": [1, 2, 12, 22, 206, 216, 253], "boolean": [1, 8, 10], "comparison": [1, 53], "unari": [1, 8], "respect": [1, 2, 3, 8, 10, 141, 142, 167, 169, 182], "claim": 1, "simpler": [1, 7, 8, 9, 72, 100], "enabl": [1, 5, 16, 20, 21, 25, 56, 61, 65, 69, 72, 80, 88, 89, 111, 115, 122, 125, 130, 141, 148, 160, 180, 182, 185, 197, 198, 216, 223, 240, 241, 243, 253, 259, 260, 261, 263], "richer": 1, "event": [1, 8, 10, 14], "ani": [1, 2, 3, 4, 5, 6, 7, 10, 14, 16, 17, 18, 19, 25, 32, 34, 41, 51, 56, 61, 73, 76, 78, 84, 85, 122, 125, 126, 132, 160, 164, 183, 185, 190, 197, 198, 200, 224, 240, 241, 258], "rise": [1, 243], "fall": 1, "one": [1, 2, 4, 5, 6, 8, 9, 10, 11, 14, 16, 18, 19, 25, 32, 34, 35, 41, 42, 48, 54, 56, 88, 97, 100, 103, 104, 115, 122, 125, 129, 137, 148, 150, 157, 173, 185, 187, 189, 190, 193, 196, 204, 205, 218, 235, 240, 243, 248, 253, 258, 263, 264], "asynchron": [1, 2, 4, 5, 7, 8, 9, 124, 147, 263], "latch": [1, 5, 8, 87, 162, 176, 180, 182, 198, 240, 263], "begin": [1, 4, 6, 8, 9, 10, 11, 14, 17, 160, 189, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "add_mod": 1, "hold": [1, 2, 5, 8, 10, 26, 40, 107, 182, 185, 250, 253], "bad": [1, 74, 240, 242], "style": [1, 6, 15, 27, 154, 253], "sloppi": 1, "warn": [1, 6, 14, 103, 115, 190, 217, 235, 257], "synchron": [1, 2, 5, 8, 9, 10, 11, 26, 122, 124, 141, 243, 263], "reset": [1, 4, 5, 7, 8, 9, 10, 26, 32, 40, 56, 61, 65, 79, 86, 107, 141, 190, 198, 228, 235, 237, 259, 260, 261, 263], "clock": [1, 2, 5, 7, 8, 10, 14, 16, 17, 26, 32, 35, 56, 86, 87, 98, 122, 126, 141, 142, 176, 197, 198, 213, 218, 223, 228, 243, 259, 261, 263], "counter": [1, 6, 11, 185, 263], "0": [1, 2, 4, 5, 6, 8, 9, 10, 11, 14, 15, 27, 55, 56, 67, 76, 78, 98, 100, 115, 122, 141, 142, 193, 197, 198, 212, 214, 215, 216, 218, 219, 221, 223, 225, 228, 239, 241, 243, 250, 253, 255], "branch": [1, 8, 151, 171], "wider": [1, 111, 263], "should": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 41, 43, 56, 78, 82, 85, 87, 122, 173, 198, 225, 228, 243, 257], "herself": 1, "himself": 1, "non": [1, 2, 3, 4, 5, 6, 8, 10, 79, 100, 106, 122, 141, 153, 182, 183, 187, 190, 211, 216, 218, 219, 225, 233, 235, 241, 250, 253, 258], "misunderstood": 1, "ci00": [1, 15], "behav": [1, 87], "exactli": [1, 5, 8, 14, 35, 43, 54, 57, 87, 187, 190], "while": [1, 5, 6, 14, 32, 76, 78, 108, 138, 145, 243], "hand": [1, 5, 6, 8, 185, 257], "side": [1, 2, 5, 8, 10, 143, 185, 196, 253, 257], "evalu": [1, 3, 4, 8, 9, 12, 54, 84, 225, 235, 243, 253, 263, 264], "immedi": [1, 10], "left": [1, 2, 8, 9, 10, 28, 174, 196, 225, 253, 257], "delai": [1, 2, 16, 17, 18, 19, 35], "until": [1, 2, 4, 6, 10, 33, 74, 149, 189, 190, 196], "exchang": [1, 5], "bundl": [1, 9, 12], "multipl": [1, 2, 5, 6, 8, 10, 14, 28, 40, 44, 55, 76, 78, 84, 87, 103, 111, 125, 126, 130, 196, 197, 200, 225, 233, 235, 244, 248, 250], "procedur": [1, 5, 9, 11], "both": [1, 2, 3, 5, 9, 10, 14, 56, 79, 85, 109, 144, 148, 225, 243], "substitut": [1, 4, 5, 8, 9, 134, 225, 264], "bodi": [1, 8, 11, 14], "insid": [1, 18, 19, 245], "modul": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 27, 32, 41, 42, 43, 51, 54, 59, 66, 67, 68, 69, 75, 78, 82, 83, 85, 88, 92, 98, 100, 103, 111, 117, 132, 133, 139, 151, 159, 160, 163, 173, 174, 175, 176, 177, 179, 180, 183, 185, 187, 189, 190, 191, 195, 196, 198, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 228, 230, 235, 239, 241, 243, 244, 248, 250, 252, 253, 254, 255, 256, 257, 258, 263, 264], "select": [1, 2, 4, 5, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 216, 223, 225, 230, 231, 233, 234, 238, 239, 248, 249, 251, 257, 258, 259, 260, 261, 262, 263], "disabl": [1, 2, 4, 61, 69, 72, 89, 103, 115, 125, 130, 141, 142, 157, 182, 198, 213, 214, 223, 243, 253], "paramet": [1, 2, 5, 8, 9, 10, 11, 14, 16, 17, 18, 19, 43, 44, 55, 61, 78, 82, 84, 92, 103, 106, 111, 113, 122, 133, 182, 185, 190, 193, 196, 197, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 235, 241, 243, 250, 257, 263], "subcircuit": [1, 263, 264], "three": [1, 2, 3, 4, 5, 8, 10, 11, 14], "built": [1, 6, 7, 9, 10, 11, 43, 150, 175, 216, 224, 261], "macro": [1, 48, 54, 175, 182, 235, 237], "processor": [1, 9, 182], "const": [1, 8, 9, 11, 182, 229, 243, 263], "fold": [1, 2, 8, 9, 81, 107, 182, 260, 263], "address": [1, 2, 5, 9, 11, 120, 122, 126, 130, 147, 148, 182, 239, 250], "access": [1, 2, 5, 8, 9, 10, 11, 130, 160, 243, 253], "pattern": [1, 4, 5, 8, 10, 14, 27, 47, 48, 115, 122, 154, 176, 177, 183, 190, 225, 230, 257, 260], "word": [1, 2, 5, 11, 15, 91, 111, 120, 122, 126, 203, 225, 261, 263], "desir": [1, 6, 9, 10], "in_data": 1, "out_data": 1, "8": [1, 2, 3, 4, 5, 6, 10, 11, 14, 84, 100, 134, 203, 213, 214, 215, 243], "stage": [1, 5, 14, 160], "4": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 14, 15, 62, 65, 100, 122, 134, 207, 208, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 250], "reg": [1, 5, 8, 9, 10, 11, 163, 185, 197, 198, 253], "ff": [1, 16, 34, 35, 57, 85, 117, 125, 126, 142, 160, 197, 199, 206, 209, 215, 222, 231, 235, 240, 257, 263], "integ": [1, 2, 6, 8, 10, 12, 14, 16, 43, 67, 78, 98, 122, 126, 134, 183, 193, 196, 198, 227, 229, 250, 252], "endmodul": [1, 4, 5, 6, 9, 10, 11, 239, 243, 250, 253], "could": [1, 6, 8, 9, 10, 243], "shift": [1, 2, 8, 260, 263], "either": [1, 2, 5, 6, 9, 10, 42, 54, 109, 114, 175, 182], "identifi": [1, 2, 4, 6, 7, 8, 10, 34, 90, 139, 150, 151, 152, 153, 163, 165, 166, 170, 171, 184, 187, 188, 204, 235, 243], "front": [1, 3, 10, 54, 82, 182, 257], "direct": [1, 5, 6, 8, 10, 72, 103, 122, 174, 180, 206, 222, 250, 253, 256], "correct": [1, 5, 8, 10, 182, 186], "summar": [1, 10], "character": 1, "topic": 1, "question": [1, 6, 10], "2005": [1, 4, 5, 8, 9, 15, 182], "broken": [1, 10, 14], "down": [1, 79], "item": 1, "mostli": [1, 88, 264], "guarante": [1, 76, 134], "compat": [1, 5, 9, 13, 78, 113, 217, 223, 250, 257], "onc": [1, 2, 4, 9, 10, 32, 76, 125, 234, 235], "been": [1, 3, 5, 7, 8, 10, 13, 34, 115, 163, 190, 195, 217, 225, 257], "test": [1, 3, 5, 6, 9, 10, 11, 14, 48, 69, 85, 186, 217, 239, 250, 253, 263, 264], "reluct": 1, "regard": [1, 4, 6, 9, 10, 91], "few": [1, 5, 7, 9, 10], "minor": 1, "around": 1, "miss": [1, 180, 194, 225], "crucial": 1, "area": [1, 16, 17, 18, 19, 84, 100, 203, 218, 259], "obviou": [1, 4, 141, 263], "concern": 1, "rule": [1, 5, 6, 8, 9, 14, 19, 78, 120, 122, 187, 190, 217, 218], "handl": [1, 5, 6, 68, 69, 88, 160, 182, 263], "sign": [1, 2, 5, 8, 10, 14, 16, 17, 18, 43, 44, 196, 250], "becaus": [1, 10, 14, 65, 81, 114, 148, 253], "unlik": 1, "formal": [1, 3, 4, 40, 85, 97, 103, 126, 175, 182, 183, 193, 233, 235, 252, 263, 264], "kei": [1, 5, 6, 10, 27, 154], "hard": [1, 6, 7, 10, 223], "give": [1, 3, 4, 65, 100, 115, 185], "dimension": [1, 9, 11], "multipli": [1, 7, 9, 211, 213, 218, 220, 223, 260, 263], "fine": [1, 2, 9, 11, 56, 87, 138, 142, 152, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223], "speed": [1, 185], "scale": 1, "appli": [1, 5, 10, 14, 155, 263], "control": [1, 2, 4, 5, 6, 9, 56, 76, 82, 93, 133, 141, 151, 152, 157, 173, 194, 263, 264], "skip": [1, 17, 32, 35, 111, 120, 185, 211, 213, 216, 217, 218, 220, 223, 250], "goal": [1, 5], "specif": [1, 3, 5, 6, 9, 10, 15, 16, 17, 18, 43, 69, 79, 108, 145, 180, 197, 235, 250], "fab": 1, "unit": [1, 235], "dedic": [1, 9, 144, 200, 260], "open": [1, 3, 5, 6, 9, 15, 264], "vendor": [1, 5], "independ": [1, 5, 8, 16, 185], "interest": [1, 3, 6, 9, 10, 11, 250], "start": [1, 5, 6, 10, 14, 16, 17, 18, 33, 43, 65, 69, 98, 182, 198, 225, 235, 242, 264], "re": [1, 4, 6, 9, 10, 19, 103, 122, 180, 181, 182, 263], "Then": [1, 8, 78], "seri": [1, 5, 8, 10, 14, 138, 190, 223, 260], "again": [1, 8, 9, 10, 74, 190], "illustr": [1, 8], "typic": [1, 160, 264], "green": 1, "box": [1, 17, 18, 19, 182, 190, 243, 258], "orang": 1, "modesl": 1, "written": [1, 3, 5, 6, 8, 9, 10, 11, 12, 18, 92, 148, 190, 196, 225, 250, 252, 257], "after": [1, 2, 4, 5, 8, 9, 10, 16, 32, 65, 69, 87, 88, 122, 139, 175, 182, 183, 185, 190, 197, 204, 225, 228, 235, 241, 257], "final": [1, 4, 5, 6, 8, 9, 10, 11, 14, 76, 173, 198, 221, 223, 225], "finish": [1, 2, 10, 32, 204], "real": [1, 3, 5, 9, 14, 43, 232, 264], "world": [1, 3, 5, 6, 9, 245, 264], "iter": [1, 6, 10, 74, 173, 225, 228], "reason": [1, 6, 15, 182], "late": 1, "analysi": [1, 10, 68, 235, 263], "reveal": 1, "meet": [1, 56], "maximum": [1, 10, 16, 25, 74, 80, 185, 197, 235, 252, 260], "reproduc": [1, 6, 10], "project": [1, 5], "via": [1, 2, 6, 7, 8, 10, 65, 147, 175, 185, 198, 206, 224, 253], "text": [1, 4, 5, 10, 181, 189, 196, 225, 251, 263, 264], "gui": 1, "complementari": 1, "unix": [1, 9, 11, 43, 227, 229], "linux": [1, 6, 9, 11, 48], "environ": [1, 48, 252], "shell": [1, 10, 11, 13, 48, 105, 224, 263], "interact": [1, 5, 243, 263, 264], "necessari": [1, 3, 8, 9, 10, 19, 122, 200, 243, 244, 263, 264], "These": [1, 2, 4, 5, 7, 8, 81], "kept": [1, 8, 11, 132, 234], "under": [1, 3, 10, 54, 69, 182, 188, 190, 252, 254], "version": [1, 9, 10, 11, 13, 16, 17, 18, 65, 100, 175, 198, 217, 225, 235, 240, 250, 258], "involv": [1, 7, 185], "problem": [1, 3, 5, 7, 8, 9, 12, 15, 66, 72, 194, 263], "tradition": 1, "probabl": [1, 9], "asu86": [1, 3, 15], "lexer": [1, 14], "charact": [1, 5, 6, 56, 103, 183, 201, 244], "stream": [1, 14, 243], "lexic": [1, 264], "consist": [1, 5, 6, 8, 14, 243], "translat": [1, 5, 8, 22, 95, 235, 241, 250, 263], "given": [1, 2, 3, 4, 5, 7, 10, 11, 14, 16, 17, 18, 19, 20, 32, 35, 37, 41, 54, 56, 57, 78, 85, 92, 98, 100, 102, 103, 110, 111, 114, 122, 125, 133, 134, 138, 145, 148, 163, 183, 185, 188, 190, 191, 192, 198, 225, 229, 235, 250, 253, 254, 263], "tab": [1, 6, 14, 256], "tok_assign": 1, "tok_identifi": 1, "tok_eq": 1, "tok_plu": 1, "tok_numb": 1, "tok_semicolon": 1, "flex": [1, 8], "regular": [1, 6, 115, 250, 253, 254], "match": [1, 4, 5, 7, 10, 27, 37, 48, 56, 57, 66, 69, 76, 78, 81, 103, 115, 122, 132, 133, 154, 176, 177, 185, 190, 197, 198, 225, 230, 235, 263], "respons": [1, 43], "ignor": [1, 5, 8, 14, 35, 74, 83, 103, 111, 126, 133, 157, 173, 180, 181, 182, 183, 185, 198, 225, 235, 243, 250, 257], "whitespac": [1, 5, 76, 188], "outsid": [1, 8, 14, 81, 103], "string": [1, 5, 6, 8, 9, 16, 17, 18, 27, 32, 36, 43, 55, 103, 114, 122, 126, 133, 154, 183, 191, 192, 196, 198, 225, 235, 243, 250, 257], "comment": [1, 8, 242, 253, 257], "origin": [1, 2, 4, 5, 8, 10, 16, 19, 77, 81, 85, 93, 100, 134, 152, 169, 197, 204, 234, 250, 257, 264], "snippet": [1, 16, 17, 18], "keyword": [1, 8], "parser": [1, 113, 182, 235, 241, 250], "grammat": 1, "role": [1, 8, 35, 190], "close": [1, 2, 8], "resembl": [1, 2, 8], "grammar": [1, 14], "As": [1, 2, 5, 8, 10, 11, 253], "bison": [1, 8], "backu": [1, 14], "naur": [1, 14], "bnf": 1, "let": [1, 5, 6, 10], "": [1, 2, 3, 5, 6, 8, 9, 10, 14, 15, 16, 19, 20, 41, 48, 76, 133, 145, 181, 189, 190, 223, 224, 225, 226, 227, 229, 238, 241, 242, 251, 253, 260, 264], "assign_stmt": 1, "expr": [1, 42], "never": [1, 4, 5, 8, 9, 74, 130, 151, 253, 263], "whole": [1, 5, 6, 8, 9, 10, 51, 190], "inner": [1, 4, 228], "depth": [1, 8, 80, 84, 197, 225], "stack": [1, 8, 10, 54, 190, 236], "machin": [1, 4, 9, 90, 91, 190, 203, 228, 263], "relev": [1, 8, 10, 216, 253, 261], "dictat": 1, "yet": [1, 6, 10, 11, 13, 87, 214], "assembl": [1, 9], "solv": [1, 7, 8, 12, 15, 194, 263], "split": [1, 2, 5, 6, 10, 11, 263], "up": [1, 5, 6, 8, 10, 11, 79, 100, 115, 133, 139, 149, 185, 209, 235, 263], "smaller": [1, 5, 32, 44, 100, 113, 250], "certainli": 1, "true": [1, 2, 6, 27, 241, 243, 250, 253], "compon": [1, 6, 8, 10, 263], "through": [1, 4, 10, 16, 17, 89, 111, 138, 140, 162, 243, 263], "pipelin": [1, 3, 107, 260], "return": [1, 2, 5, 6, 8, 9, 14, 43, 76, 115, 124, 173, 185, 195, 196, 206, 211, 214, 216, 243, 253], "concurr": 1, "them": [1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 16, 28, 57, 60, 81, 85, 87, 96, 99, 124, 125, 126, 134, 139, 152, 163, 165, 166, 170, 171, 184, 204, 225, 227, 229, 243, 263], "footprint": 1, "tighter": 1, "coupl": [1, 5, 6, 9], "conceptu": [1, 5], "tightli": 1, "loos": 1, "benefici": 1, "improv": [1, 8, 9, 211, 216, 243, 259], "easier": [1, 6, 8, 9, 10, 182, 194], "variabl": [1, 6, 8, 10, 48, 173, 223, 224, 253, 260, 261], "context": [1, 8, 10, 213, 223], "depend": [1, 2, 5, 8, 9, 11, 23, 39, 182], "show": [1, 4, 5, 8, 9, 11, 75, 173, 185, 263, 264], "void": [1, 6, 9], "demo1": 1, "int": [1, 6, 8, 9, 19, 76, 80, 113, 133, 157, 176, 177, 223, 226, 228, 235, 243, 250], "printf": [1, 48], "n": [1, 2, 5, 6, 14, 15, 16, 17, 18, 35, 48, 59, 65, 72, 74, 79, 84, 88, 98, 114, 133, 134, 144, 174, 185, 190, 194, 197, 198, 209, 215, 225, 227, 228, 229, 235, 243, 261], "demo2": 1, "bool": [1, 6, 9, 243, 253], "23": [1, 9, 11, 15, 250], "bring": [1, 10], "twice": [1, 5], "demo3": 1, "ident": [1, 2, 4, 7, 10, 16, 17, 18, 38, 190, 263], "demo": [1, 10, 230], "index": [1, 2, 5, 6, 8, 201, 240, 250, 257], "phi": 1, "merg": [1, 4, 5, 6, 74, 88, 111, 130, 141, 143, 150, 160, 176, 177, 194, 197, 206, 233, 253, 263], "instanc": [1, 4, 5, 7, 8, 9, 10, 20, 77, 78, 103, 122, 185, 197, 204, 229, 235, 253, 257, 263], "pseudo": [1, 228, 258], "a_1": 1, "a_2": 1, "a_3": 1, "locat": [1, 2, 5, 8, 10, 235, 249], "manipul": [1, 10], "recent": [1, 3, 10, 217], "year": 1, "becam": [1, 2], "valid": [1, 5, 6, 19, 78, 145, 182, 215, 243, 250, 253], "yosi": [2, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15], "care": [2, 4, 6, 10, 14, 87, 88, 124, 141, 142, 150, 206, 211, 214, 216, 239], "object": [2, 4, 5, 6, 8, 10, 16, 77, 113, 196, 203, 204, 257, 263], "discuss": [2, 3, 9, 10], "vector": [2, 5, 6, 225, 250], "categori": [2, 5], "indic": [2, 5, 10, 17, 18, 27, 35, 89, 122, 154, 175, 195, 196, 235, 243, 250], "size": [2, 5, 6, 14, 16, 17, 44, 100, 111, 185, 190, 234, 243, 250, 257, 263], "modifi": [2, 5, 6, 8, 9, 11, 32, 34, 132, 163, 188, 204, 263], "keep": [2, 5, 8, 10, 11, 16, 27, 71, 100, 103, 109, 126, 132, 197, 206, 235, 243, 244, 250, 253], "sync": [2, 5, 8, 32, 56, 58, 65, 141, 263], "model": [2, 4, 5, 8, 9, 10, 11, 15, 65, 69, 72, 86, 98, 113, 173, 185, 198, 229, 241, 250, 253, 263], "techlib": [2, 5, 6, 7], "common": [2, 6, 7, 9, 10, 16, 162, 217, 218, 225, 260], "simlib": [2, 10, 229], "a_sign": [2, 10], "zero": [2, 4, 5, 10, 11, 14, 19, 84, 100, 183, 185, 193, 196, 197, 198, 207, 214, 217, 218, 220, 221, 225, 229, 240, 253, 263], "extend": [2, 4, 5, 8, 14, 44], "a_width": [2, 10], "width": [2, 4, 5, 7, 8, 9, 14, 16, 17, 18, 20, 82, 103, 111, 133, 149, 190, 196, 203, 213, 225, 239, 243, 250, 252, 253, 263], "y_width": [2, 10], "tabl": [2, 4, 6, 8, 10, 75, 240, 241, 263], "5": [2, 3, 4, 5, 7, 10, 11, 14, 15, 78, 220, 223, 250], "po": [2, 197, 199, 255, 256], "neg": [2, 7, 26, 40, 111, 122, 173, 197, 255], "reduce_and": [2, 4, 199, 250], "reduce_or": [2, 4, 199], "reduce_xor": [2, 199], "reduce_xnor": [2, 199], "reduce_bool": [2, 199], "logic_not": [2, 8, 199], "greater": [2, 17, 122], "signific": [2, 14], "vari": [2, 100], "prefix": [2, 5, 6, 8, 10, 16, 29, 32, 88, 103, 109, 111, 122, 132, 183, 188, 190, 196, 225, 229, 255, 257], "being": [2, 5, 9, 10, 90, 149, 160, 194, 225], "condit": [2, 5, 7, 8, 10, 25, 125, 147, 169, 182, 185, 243], "statement": [2, 5, 6, 10, 11, 16, 35, 42, 122, 169, 182, 225, 235, 241, 242, 253, 257], "b_sign": [2, 10], "b_width": [2, 10], "lt": [2, 22], "le": 2, "eq": [2, 4, 11, 135, 230, 263], "xnor": [2, 16, 199], "ne": [2, 4, 230], "shl": 2, "ge": [2, 260], "shr": 2, "gt": 2, "sshl": 2, "add": [2, 4, 5, 6, 7, 8, 9, 10, 11, 22, 24, 28, 57, 63, 70, 74, 86, 100, 107, 119, 122, 127, 133, 173, 174, 175, 182, 185, 190, 196, 197, 200, 203, 206, 226, 229, 233, 235, 236, 242, 250, 257, 260, 263, 264], "sshr": 2, "sub": [2, 6, 11, 119, 145, 157, 206, 253], "logic_and": [2, 199], "mul": [2, 22, 107, 211, 216, 223], "logic_or": [2, 199], "div": 2, "eqx": 2, "mod": [2, 17, 20, 191, 253], "nex": 2, "divfloor": 2, "pow": 2, "modfoor": 2, "wherea": 2, "four": [2, 100], "operand": 2, "unsign": [2, 8, 43, 44], "shiftx": [2, 261, 263], "vacat": 2, "fill": [2, 14, 225], "undef": [2, 4, 10, 11, 49, 65, 68, 69, 72, 75, 88, 132, 142, 160, 169, 175, 185, 225, 235, 239, 241, 263], "x": [2, 4, 5, 6, 10, 11, 14, 16, 32, 49, 56, 75, 79, 107, 126, 132, 141, 142, 174, 182, 185, 190, 193, 198, 207, 211, 212, 213, 216, 219, 220, 221, 222, 225, 242, 250], "base": [2, 5, 6, 7, 9, 10, 11, 12, 43, 58, 74, 126, 149, 183, 185, 206, 228, 229, 240, 252, 259, 263, 264], "truncat": [2, 48, 226], "semant": [2, 14, 250], "modfloor": 2, "floor": 2, "remaind": [2, 10, 86], "sever": [2, 103, 128, 234, 235], "witdh": 2, "If": [2, 4, 5, 8, 10, 14, 28, 35, 41, 56, 61, 71, 82, 85, 87, 92, 115, 134, 159, 173, 185, 186, 188, 189, 194, 197, 224, 225, 240, 243], "sent": 2, "pmux": [2, 4, 25, 100, 142, 153, 230, 239, 263], "hot": [2, 4, 97, 137, 157], "s_width": 2, "th": 2, "slice": [2, 11, 200], "undefin": [2, 5, 87, 185, 235, 241, 263], "parallel": [2, 79, 235, 263], "parallel_cas": [2, 5], "tribuf": [2, 199, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 263], "tristat": [2, 9, 111, 233], "en": [2, 221, 243], "driven": [2, 4, 10, 11, 15, 19, 28, 34, 44, 77, 135, 184, 200, 209, 215, 219, 241, 243, 248, 250], "bz": 2, "cascad": [2, 144, 260, 263], "variou": [2, 3, 6, 9, 10, 145, 146], "extract": [2, 7, 9, 10, 12, 13, 15, 16, 17, 18, 167, 209, 225, 263, 264], "heavili": 2, "break": [2, 4, 5, 6, 9, 19, 263], "clr": 2, "set_polar": 2, "activ": [2, 5, 7, 10, 35, 42, 61, 78, 116, 133, 151, 163, 198, 253], "b1": [2, 5, 11, 20, 260], "b0": [2, 10], "clr_polar": 2, "everi": [2, 5, 8, 92, 225, 243], "preced": [2, 111], "dff": [2, 4, 10, 16, 17, 19, 56, 77, 120, 126, 197, 199, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 258, 261, 263], "clk_polar": [2, 5, 9], "adff": [2, 4, 5, 9, 56, 199], "arst": [2, 5, 9], "pin": [2, 11, 56, 180, 228, 240, 263], "arst_polar": [2, 5, 9], "arst_valu": [2, 5, 9], "sdff": [2, 141, 199], "srst": [2, 58], "srst_polar": 2, "srst_valu": 2, "load": [2, 10, 16, 17, 18, 43, 54, 69, 81, 176, 177, 179, 180, 181, 182, 196, 225, 229, 263], "aldff": [2, 199, 211], "aload": 2, "async": [2, 40, 61, 79, 126, 163, 211, 263], "aload_polar": 2, "dffsr": [2, 56, 199], "polar": [2, 56, 98, 111, 122, 173, 197, 198, 261], "dffe": [2, 56, 141, 199, 261], "dffsre": [2, 199], "sdffe": [2, 199], "sdffce": [2, 199], "enhanc": 2, "variant": [2, 122, 125], "en_polar": 2, "dlatch": [2, 56, 199], "transpar": [2, 8, 122], "adlatch": [2, 56, 199], "dlatchsr": [2, 56, 199], "memrd_v2": 2, "memwr_v2": 2, "meminit_v2": 2, "mem_v2": 2, "alon": [2, 7, 58], "altern": [2, 41], "consolid": [2, 4, 5, 48, 152, 263], "share": [2, 4, 5, 6, 7, 16, 19, 72, 77, 122, 126, 130, 206, 211, 213, 216, 218, 220, 221, 223, 263], "drastic": 2, "initi": [2, 4, 5, 8, 9, 10, 11, 14, 19, 55, 56, 85, 87, 122, 150, 163, 182, 185, 197, 198, 225, 228, 235, 240, 253, 257, 263], "addr": 2, "memid": [2, 5], "associ": [2, 15, 57, 109, 223], "abit": [2, 122], "underli": 2, "align": [2, 130], "group": [2, 5, 6, 15, 56, 72, 122, 204], "ti": [2, 243], "clk_enabl": 2, "otherwis": [2, 6, 8, 9, 14, 16, 17, 18, 33, 61, 92, 103, 114, 126, 176, 182, 200, 225, 243, 253], "transparency_mask": 2, "bitmask": 2, "portid": 2, "pair": [2, 5, 8, 27, 77, 78, 132, 154, 190, 225, 250, 263], "cycl": [2, 10, 26, 35, 40, 65, 98, 198, 243], "old": [2, 4, 5, 8, 97, 113, 139, 221, 250], "collision_x_mask": 2, "collis": [2, 5, 124, 206, 211, 214, 216, 224], "exclus": [2, 135, 148, 190, 263], "assert": [2, 11, 20, 34, 35, 42, 68, 69, 73, 132, 136, 182, 185, 188, 190, 215, 225, 233, 235, 240, 242, 253, 263], "init_valu": [2, 56], "ce_over_srst": 2, "recogn": [2, 124, 141, 206, 211, 214, 216, 243], "restrict": [2, 79, 182], "mask": [2, 229], "priority_mask": 2, "prioriti": [2, 5, 185, 263], "id": [2, 5, 14, 225, 235, 253], "neither": [2, 17, 58, 71, 243], "equal": [2, 10, 14, 17, 53, 55, 65, 133], "resolv": [2, 8, 42, 61, 103, 235], "succe": [2, 185], "per": [2, 5, 8, 10, 42, 78, 100, 103, 104, 173, 194, 198, 201, 218], "consecut": [2, 14], "win": 2, "conflict": [2, 34], "migrat": 2, "decod": [2, 9, 11, 120, 126, 134, 157], "init": [2, 10, 14, 25, 34, 56, 122, 154, 163, 185, 193, 197, 198, 209, 215, 222, 225, 263], "content": [2, 8, 30, 190, 243, 258], "rd_port": 2, "rd_wide_continu": 2, "continu": [2, 6, 8, 9, 10], "extra": [2, 6, 10, 11, 240, 244, 258], "combin": [2, 4, 5, 7, 10, 35, 56, 65, 87, 93, 96, 100, 144, 200, 225, 243, 263], "except": [2, 5, 6, 10, 14, 138, 229, 240], "proper": 2, "rd_clk_enabl": 2, "rd_clk_polar": 2, "rd_transparency_mask": 2, "wr_port": 2, "concaten": [2, 5, 14, 76, 257], "rd_collision_x_mask": 2, "rd_ce_over_srst": 2, "determin": [2, 4, 5, 9, 10, 78, 100, 103, 130, 160, 190, 194, 196, 206, 243, 248], "rel": [2, 5, 189, 190, 235], "rd_init_valu": 2, "rd_arst_valu": 2, "rd_srst_valu": 2, "wr_wide_continu": 2, "wr_clk_enabl": 2, "wr_clk_polar": 2, "wr_priority_mask": 2, "rd_clk": 2, "rd_en": 2, "rd_addr": 2, "rd_data": 2, "rd_arst": 2, "rd_srst": 2, "wr_clk": 2, "wr_en": 2, "wr_addr": 2, "wr_data": 2, "memory_collect": [2, 11, 120, 126, 131, 160, 263], "discret": 2, "belong": [2, 5, 16, 91, 235], "memory_unpack": [2, 11, 263], "invers": [2, 82, 98, 198], "memory_dff": [2, 11, 120, 129, 160, 216, 223, 263], "fed": [2, 187], "feed": 2, "memory_bram": [2, 120, 217, 218, 263], "ram": [2, 7, 125, 211, 214, 217, 218, 219, 220, 223, 263], "memory_map": [2, 120, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 263], "brief": 2, "specify2": [2, 19], "specify3": [2, 19], "specrul": [2, 19], "assum": [2, 4, 5, 10, 11, 16, 20, 26, 35, 40, 87, 173, 182, 185, 187, 197, 240, 253, 259], "live": [2, 20, 35], "fair": [2, 20, 35], "equiv": [2, 66, 69, 73, 74, 132, 263], "initst": [2, 240], "anyconst": [2, 85, 100, 173, 193], "anyseq": [2, 49, 85, 193], "anyinit": [2, 87], "allconst": [2, 173], "allseq": 2, "_ff_": [2, 87, 176], "simcel": [2, 10], "_buf_": [2, 110], "_not_": [2, 21, 84, 240, 258], "_and_": [2, 21, 81, 84, 136, 240, 258], "_nand_": [2, 21], "_andnot_": 2, "_or_": [2, 81, 84], "_nor_": 2, "_ornot_": 2, "_xor_": [2, 81, 84], "_xnor_": 2, "_aoi3_": 2, "_oai3_": 2, "_aoi4_": 2, "_oai4_": 2, "_mux_": [2, 84, 134, 142, 153, 239, 263], "_nmux_": 2, "below": [2, 17, 69, 160, 190, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 235], "_mux4_": [2, 134], "_mux8_": [2, 134], "_mux16_": [2, 134], "_tbuf_": [2, 34, 111], "negedg": [2, 14, 86], "_dff_n_": [2, 197, 225, 258], "_dff_p_": [2, 176, 197, 207, 219, 220, 225, 258], "_dlatch_n_": 2, "_dlatch_p_": 2, "clkedg": 2, "rstlvl": 2, "rstval": 2, "_dff_nn0_": 2, "_sdff_nn0_": 2, "_dff_nn1_": 2, "_sdff_nn1_": 2, "_dff_np0_": 2, "_sdff_np0_": 2, "_dff_np1_": 2, "_sdff_np1_": 2, "_dff_pn0_": 2, "_sdff_pn0_": 2, "_dff_pn1_": 2, "_sdff_pn1_": 2, "_dff_pp0_": 2, "_sdff_pp0_": 2, "_dff_pp1_": 2, "_sdff_pp1_": 2, "enlvl": 2, "_dffe_nn_": 2, "_dffe_np_": 2, "_dffe_pn_": 2, "_dffe_pp_": [2, 220], "_dffe_nn0n_": 2, "_sdffe_nn0n_": 2, "_sdffce_nn0n_": 2, "_dffe_nn0p_": 2, "_sdffe_nn0p_": 2, "_sdffce_nn0p_": 2, "_dffe_nn1n_": 2, "_sdffe_nn1n_": 2, "_sdffce_nn1n_": 2, "_dffe_nn1p_": 2, "_sdffe_nn1p_": 2, "_sdffce_nn1p_": 2, "_dffe_np0n_": 2, "_sdffe_np0n_": 2, "_sdffce_np0n_": 2, "_dffe_np0p_": 2, "_sdffe_np0p_": 2, "_sdffce_np0p_": 2, "_dffe_np1n_": 2, "_sdffe_np1n_": 2, "_sdffce_np1n_": 2, "_dffe_np1p_": 2, "_sdffe_np1p_": 2, "_sdffce_np1p_": 2, "_dffe_pn0n_": 2, "_sdffe_pn0n_": 2, "_sdffce_pn0n_": 2, "_dffe_pn0p_": [2, 217, 218], "_sdffe_pn0p_": 2, "_sdffce_pn0p_": 2, "_dffe_pn1n_": 2, "_sdffe_pn1n_": 2, "_sdffce_pn1n_": 2, "_dffe_pn1p_": 2, "_sdffe_pn1p_": 2, "_sdffce_pn1p_": 2, "_dffe_pp0n_": 2, "_sdffe_pp0n_": 2, "_sdffce_pp0n_": 2, "_dffe_pp0p_": 2, "_sdffe_pp0p_": 2, "_sdffce_pp0p_": [2, 218], "_dffe_pp1n_": 2, "_sdffe_pp1n_": 2, "_sdffce_pp1n_": 2, "_dffe_pp1p_": 2, "_sdffe_pp1p_": 2, "_sdffce_pp1p_": 2, "setlvl": 2, "_dffsr_nnn_": 2, "_dffsr_nnp_": 2, "_dffsr_npn_": 2, "_dffsr_npp_": 2, "_dffsr_pnn_": 2, "_dffsr_pnp_": 2, "_dffsr_ppn_": 2, "_dffsr_ppp_": 2, "_dffsre_nnnn_": 2, "_dffsre_nnnp_": 2, "_dffsre_nnpn_": 2, "_dffsre_nnpp_": 2, "_dffsre_npnn_": 2, "_dffsre_npnp_": 2, "_dffsre_nppn_": 2, "_dffsre_nppp_": 2, "_dffsre_pnnn_": 2, "_dffsre_pnnp_": 2, "_dffsre_pnpn_": 2, "_dffsre_pnpp_": 2, "_dffsre_ppnn_": 2, "_dffsre_ppnp_": 2, "_dffsre_pppn_": 2, "_dffsre_pppp_": [2, 221], "_dlatch_nn0_": 2, "_dlatch_nn1_": 2, "_dlatch_np0_": 2, "_dlatch_np1_": 2, "_dlatch_pn0_": 2, "_dlatch_pn1_": 2, "_dlatch_pp0_": 2, "_dlatch_pp1_": 2, "_dlatchsr_nnn_": 2, "_dlatchsr_nnp_": 2, "_dlatchsr_npn_": 2, "_dlatchsr_npp_": 2, "_dlatchsr_pnn_": 2, "_dlatchsr_pnp_": 2, "_dlatchsr_ppn_": 2, "_dlatchsr_ppp_": 2, "_sr_nn_": 2, "_sr_np_": 2, "_sr_pn_": 2, "_sr_pp_": 2, "6": [2, 3, 5, 9, 10, 11, 13, 14, 15, 80, 208, 215, 218, 223, 253], "7": [2, 3, 8, 9, 10, 11, 14, 211, 223, 239, 243, 260], "9": [2, 3, 4, 10, 11, 13, 14, 223, 250], "11": [2, 5, 6, 9, 10, 11, 216], "12": [2, 3, 5, 8, 10, 11, 15, 260], "assign": [2, 4, 5, 6, 9, 10, 11, 14, 15, 32, 42, 100, 103, 163, 173, 183, 196, 225, 239, 250, 257, 263], "u": [2, 10, 41, 190, 216, 235], "h": [2, 4, 5, 6, 8, 9, 11, 12, 107, 243], "f": [2, 6, 10, 15, 16, 17, 18, 107, 175, 229, 235], "p": [2, 6, 9, 10, 16, 17, 18, 48, 190, 196, 209, 211, 214, 216, 221, 223, 243, 244, 250, 260], "o": [2, 6, 9, 16, 48, 59, 92, 103, 107, 112, 113, 133, 190, 207, 209, 212, 213, 214, 217, 218, 219, 220, 223, 226, 240, 243, 250, 263], "m": [2, 6, 14, 59, 159, 190, 260], "l": [2, 8, 10, 15, 156, 235, 240, 263], "k": [2, 6, 9, 15, 84, 107, 206, 235], "j": [2, 9, 15, 107], "_dffe_": [2, 16, 56, 211, 212, 213, 214, 216, 220, 223, 261], "np": [2, 17, 19, 56, 197, 258, 261], "_": [2, 10, 16, 17, 19, 56, 88, 134, 183, 197, 208, 211, 212, 213, 214, 216, 220, 221, 222, 223, 225, 253, 257, 258, 261], "templat": [2, 243, 253, 254], "clk_edg": 2, "en_lvl": 2, "_dff_": [2, 4, 16, 17, 19, 56, 197, 211, 214, 216, 220, 225, 258, 261], "01": [2, 10, 56, 211, 217, 220, 223], "rst_edg": 2, "rst_lvl": 2, "r": [2, 14, 15, 17, 18, 56, 84, 98, 190, 198, 208, 211, 214, 220, 253], "rst_val": 2, "_sdff_": [2, 56, 211, 214, 216], "_sdffe_": [2, 56, 211, 212, 214, 223], "_sdffce_": [2, 56, 212, 216], "_dffsr_": [2, 56], "set_edg": 2, "set_lvl": 2, "_dffsre_": [2, 56], "_dlatch_": [2, 56, 211, 212, 213, 216, 220, 221, 223], "_dlatchsr_": [2, 56], "_sr_": [2, 56], "physic": 2, "concat": [2, 11, 200], "sop": [2, 16, 177, 209, 263], "alu": [2, 7, 119, 214, 263], "macc": [2, 263], "fa": [2, 10, 80, 119], "lcu": 2, "present": [3, 6, 11, 61, 198, 235, 243], "free": [3, 6, 235, 264], "Its": [3, 8], "circuit": [3, 4, 8, 9, 11, 12, 15, 65, 67, 71, 74, 84, 85, 88, 98, 134, 140, 141, 142, 174, 225, 227, 228, 229, 230, 263, 264], "current": [3, 4, 5, 6, 8, 10, 17, 18, 21, 32, 33, 34, 75, 83, 100, 103, 107, 112, 155, 173, 176, 177, 179, 180, 181, 182, 185, 187, 188, 190, 195, 196, 203, 228, 237, 240, 241, 242, 244, 246, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 260, 263], "digit": [3, 14, 264], "04": [3, 11, 15], "09": [3, 15], "purpos": [3, 6, 10, 11, 133, 252], "synthesiz": [3, 11, 182, 264], "we": [3, 6, 9, 10, 11, 253], "heterogen": [3, 15], "reconfigur": [3, 15], "wg": [3, 15], "emerg": 3, "soon": 3, "realis": 3, "prefer": [3, 11], "integr": [3, 4, 15], "estim": [3, 100], "propos": 3, "licens": 3, "licenc": 3, "upon": 3, "choos": [3, 173], "abil": 3, "mitig": 3, "learn": [3, 5, 10], "field": [3, 250], "hs96": [3, 15], "lex": [3, 14], "pars": [3, 5, 6, 8, 182, 235], "thoroughli": 3, "research": [3, 5], "openli": 3, "due": [3, 19, 56], "author": [3, 9], "decid": [3, 10, 44], "earli": [3, 5, 35, 182], "go": [3, 6, 10, 11, 16, 17, 18, 190, 216, 235, 241], "were": [3, 5, 243], "utterli": 3, "devast": 3, "principl": [3, 15, 264], "outlin": [3, 4, 6, 7], "quickest": 3, "everyon": 3, "who": [3, 5, 9], "intern": [3, 4, 5, 7, 8, 9, 10, 14, 15, 16, 17, 18, 34, 56, 57, 65, 74, 78, 94, 100, 109, 111, 114, 139, 142, 163, 181, 182, 187, 194, 196, 199, 201, 203, 223, 225, 229, 231, 235, 241, 242, 243, 251, 255, 257, 263, 264], "knowledg": [3, 44, 243], "anyon": [3, 6], "want": [3, 6, 9, 10, 11, 16, 17, 18, 66, 185, 253], "tour": [3, 9], "api": [3, 6, 11, 243], "conclud": [3, 10], "loadabl": [3, 13], "piec": [3, 6], "technologi": [3, 4, 15, 19, 84, 109, 145, 203, 263, 264], "appendic": 3, "investig": [3, 8, 264], "yield": [3, 4, 5, 8, 10, 11, 72, 124, 182, 225], "grim": 3, "emploi": 4, "cleaner": 4, "unus": [4, 103, 122, 141, 144, 200, 225, 235, 263], "major": [4, 9], "nomux": [4, 138, 150, 162], "repeat": [4, 10, 32, 122, 190], "stabl": 4, "opt_": [4, 138, 160], "chap": [4, 14], "drive": [4, 16, 25, 26, 40, 44, 49, 55, 81, 87, 132, 153, 183, 185, 200, 201, 233, 241, 243, 244, 263], "z": [4, 6, 10, 11, 14, 86, 220, 225, 233, 250], "propag": [4, 65], "state": [4, 5, 6, 8, 9, 10, 11, 19, 25, 65, 69, 72, 90, 91, 92, 93, 185, 194, 198, 228, 235, 240, 243, 253, 263], "accord": [4, 18, 190, 225, 258], "sec": [4, 5, 7, 13, 14], "std": [4, 6, 8, 15, 243], "hope": [4, 173], "buffer": [4, 16, 105, 142, 213, 218, 219, 220, 222, 223, 241, 263], "conserv": [4, 91, 135, 160], "interfer": 4, "analyz": [4, 9, 10, 74, 78, 88, 94, 151, 204], "uut": [4, 6], "outer": [4, 5], "contradict": 4, "sort": [4, 6, 48, 231, 253], "lastli": 4, "loop": [4, 5, 6, 8, 34, 182, 263], "driver": [4, 5, 10, 11, 34, 41, 42, 77, 78, 88, 111, 141, 193, 200, 201, 225, 243, 244, 250, 263], "unused_bit": 4, "debug": [4, 6, 8, 10, 16, 17, 78, 84, 88, 115, 144, 173, 174, 182, 194, 198, 229, 235, 243, 263], "trivial": [4, 5, 6, 8, 10, 138], "prevent": [4, 160, 234, 253], "finit": [4, 9, 90, 91, 263], "fsm_detect": [4, 89, 263], "fsm_extract": [4, 89, 91, 263], "fsm_opt": [4, 89, 93, 263], "expand": [4, 11, 69, 89, 190, 225, 263], "nearbi": 4, "fsm_expand": [4, 89, 263], "unless": [4, 6, 9, 10, 32, 69, 76, 89, 100, 182, 196, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222], "norecod": [4, 89], "fsm_recod": [4, 66, 89, 206, 263], "print": [4, 5, 6, 8, 10, 16, 17, 18, 57, 60, 78, 102, 105, 115, 116, 159, 164, 173, 188, 190, 226, 229, 235, 241, 243, 252, 253, 254, 257, 263], "fsm_info": [4, 89, 263], "export": [4, 5, 89, 252, 253, 254, 257, 263], "kiss2": [4, 263], "fsm_export": [4, 89, 263], "nomap": [4, 9, 42, 89, 120, 206, 211, 213, 216, 218, 220, 221, 223], "fsm_map": [4, 89, 263], "mark": [4, 5, 10, 14, 19, 82, 90, 93, 103, 111, 124, 173, 180, 189, 196, 198, 206, 211, 214, 216, 234, 243, 263], "fsm_encod": [4, 90, 93, 97], "auto": [4, 5, 6, 10, 11, 13, 14, 17, 29, 48, 61, 69, 90, 97, 103, 125, 160, 183, 206, 208, 211, 214, 216, 219, 220, 221, 223, 253, 257], "none": [4, 35, 41, 80, 85, 90, 133, 134, 182, 190, 197], "fsm_": [4, 89], "influenc": [4, 8, 145], "report": [4, 6, 7, 182], "techniqu": [4, 9, 15, 264], "stgr10": [4, 15], "alreadi": [4, 6, 10, 20, 42, 55, 57, 111], "leav": [4, 9, 57, 58, 70, 125, 139, 195], "said": [4, 9], "heurist": [4, 84, 194], "proven": [4, 10, 65, 67, 70, 71, 185], "overwrit": [4, 10, 21, 59, 92, 180, 181, 182, 245], "criteria": 4, "caus": [4, 5, 9, 10, 14, 28, 32, 85, 103, 141, 142, 225, 228, 235, 260], "invalid": [4, 6, 8, 180, 182, 195], "transit": [4, 253], "recurs": [4, 8, 32, 225, 230, 252, 253, 254], "travers": [4, 10], "leaf": 4, "itself": [4, 5, 6, 9, 88, 190, 225], "render": 4, "arbitrari": [4, 5, 7, 10, 12, 32, 107, 228], "constev": [4, 12], "helper": [4, 6, 13, 186, 263], "class": [4, 5, 6, 12], "kernel": [4, 5, 6, 12], "ask": [4, 6], "stop": [4, 10, 72, 88, 98, 144, 149, 185, 194, 198, 231], "abort": [4, 74], "try": [4, 6, 10, 11, 32, 64, 225, 263], "success": [4, 9, 10, 136], "goto": 4, "offend": 4, "emit": [4, 5, 87, 113, 145, 173, 214, 222, 250, 253], "disconnect": [4, 77, 88], "alter": [4, 9], "extern": [4, 5, 7, 16, 17, 18, 111, 122, 198, 225, 235], "feedback": [4, 107, 243, 260, 263], "entri": [4, 188], "turn": [4, 5, 9, 77, 78, 194, 263], "unchang": [4, 190], "impli": [4, 84, 126, 182, 185, 200, 218, 223, 233, 236, 253], "moment": [4, 6, 10, 97, 223, 225, 264], "synopsi": [4, 8, 15, 97], "univers": [5, 15, 173, 264], "scientist": 5, "autom": 5, "eda": 5, "framework": [5, 10], "openrisc": 5, "1200": 5, "openmsp430": 5, "opencor": 5, "i2c": 5, "master": [5, 249], "k68": 5, "develop": [5, 6, 10, 235, 243, 264], "standard": [5, 6, 7, 10, 15, 16, 182, 224, 241, 243], "fundament": 5, "sake": 5, "simplic": 5, "though": [5, 8, 148], "explain": [5, 10, 84], "idea": [5, 10], "behind": [5, 9, 10], "rectangl": [5, 10], "ellips": [5, 10], "enough": [5, 10], "With": [5, 8, 9, 11, 28, 187, 194, 235], "By": [5, 28, 91, 100, 183, 188, 190, 200, 234, 235], "befor": [5, 6, 8, 10, 16, 17, 18, 32, 60, 69, 74, 87, 160, 173, 175, 182, 196, 197, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 235], "avoid": [5, 6, 13, 224], "reinvent": 5, "namespac": [5, 6, 243], "entiti": 5, "relationship": 5, "er": 5, "arrow": [5, 10], "point": [5, 6, 10, 65, 195, 225, 263], "root": [5, 8, 11], "auxiliari": [5, 91, 242, 264], "classic": 5, "arrai": [5, 9, 11, 103, 182, 253, 264], "rational": 5, "convent": [5, 188], "backslash": [5, 14, 257], "dollar": [5, 10, 257], "public": [5, 6, 10, 12, 14, 15, 29, 139, 183, 185, 198, 204, 243, 253], "visibl": [5, 14, 243], "sig42": 5, "collid": [5, 263], "imposs": 5, "help": [5, 6, 10, 263, 264], "guid": [5, 6], "opt_rmunus": 5, "tri": [5, 10, 72, 78, 263], "preserv": [5, 8, 16, 76, 109, 144, 182, 198, 234, 235, 250], "doesn": [5, 6, 56, 225], "hesit": 5, "delet": [5, 17, 54, 173, 182, 263], "duplic": [5, 74, 85, 122, 152], "third": [5, 11], "delic": 5, "job": [5, 182], "defer": [5, 182], "central": 5, "disturb": 5, "form": [5, 6, 7, 8, 9, 14, 97, 190, 206, 225, 250, 253, 260], "_integer_": 5, "ascii": [5, 14, 240, 256, 258], "32": [5, 9, 10, 14, 107, 113, 122, 239, 250, 257], "less": [5, 14, 38, 56, 134, 190, 216, 221, 260], "error": [5, 6, 10, 14, 34, 43, 56, 69, 73, 76, 103, 115, 136, 173, 175, 180, 181, 182, 185, 187, 190, 195, 222, 225, 235, 243, 244], "violat": [5, 132], "runtim": [5, 34, 235], "flatten": [5, 10, 11, 15, 117, 132, 160, 198, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 235, 240, 243, 263], "happen": [5, 6, 8, 11, 14, 115], "hdlname": [5, 126, 198], "attach": [5, 109, 228, 260], "disambigu": 5, "space": [5, 14, 122, 225, 243], "mechan": 5, "affect": [5, 87, 225, 250], "shown": [5, 9, 10, 11, 185, 243, 264], "properti": [5, 7, 8, 10, 11, 14, 20, 85, 103, 112, 132, 235, 240, 242, 244, 249, 263], "callback": 5, "deriv": [5, 6, 8, 19, 43, 122, 197, 243], "parametr": [5, 9, 103, 243, 264], "variat": [5, 7, 103], "hash": 5, "prohibit": [5, 182, 206], "buse": [5, 10, 196], "bu": [5, 196], "msb": [5, 10, 250, 255], "lsb": [5, 10, 197, 255], "vice": [5, 6, 10, 238], "versa": [5, 6, 10, 238], "inout": [5, 14, 20, 103, 111, 187, 196, 250, 263], "buss": 5, "aspect": [5, 6, 264], "entir": [5, 6, 10, 51, 59, 195, 248, 257], "bound": [5, 11, 127, 160], "highest": [5, 243], "correctli": [5, 8, 10, 19, 68], "messag": [5, 6, 43, 103, 115, 164, 180, 181, 182, 190, 198, 235, 263], "constraint": [5, 10, 16, 25, 86, 174, 185, 240, 263], "everyth": [5, 8, 10, 190], "1em": 5, "1337": [5, 250], "16": [5, 8, 9, 10, 11, 107, 134, 174, 215, 216, 235], "b0000010100111001": 5, "bx": [5, 225], "mywir": 5, "24": [5, 10, 11, 260], "15": [5, 9, 10, 11], "d1337": 5, "sigsig": 5, "express": [5, 8, 9, 10, 12, 42, 169, 190, 196, 243, 257, 263], "ff_with_en_and_async_reset": 5, "syncrul": [5, 8], "switchrul": [5, 8], "five": 5, "caserul": [5, 8], "0q": 5, "dot": [5, 10, 196], "13": [5, 8, 9, 10, 11, 14], "memwriteact": [5, 8], "infer": [5, 107, 157, 182, 216, 220, 223, 235, 250, 261, 263], "here": [5, 6, 10, 11, 190, 245, 253], "default": [5, 7, 8, 9, 10, 14, 16, 17, 18, 20, 28, 42, 49, 60, 65, 72, 74, 77, 78, 79, 80, 84, 85, 91, 92, 98, 100, 103, 104, 111, 134, 157, 160, 163, 173, 174, 175, 176, 180, 181, 182, 183, 189, 190, 194, 195, 196, 197, 198, 200, 201, 203, 204, 206, 207, 209, 210, 214, 215, 216, 217, 218, 223, 225, 227, 228, 229, 231, 234, 235, 241, 243, 244, 253, 255, 257, 260, 261, 263], "whether": [5, 6, 196, 248], "priorit": 5, "becom": [5, 8, 9, 14, 197], "full_cas": [5, 8], "invari": [5, 240], "ever": [5, 9], "invis": 5, "nonblock": [5, 15], "storag": [5, 8, 9], "One": 5, "action": [5, 8, 10, 167, 190, 195], "proc_arst": [5, 8, 162, 263], "procdff": [5, 10], "procmux": [5, 10], "refus": 5, "presenc": [5, 260], "memrd": [5, 8, 130, 131], "memwr": [5, 8, 130, 131, 168], "meminit": [5, 182], "link": [5, 9], "versu": 5, "multiport": [5, 120, 123, 263], "lend": 5, "optimis": [5, 135, 216, 218], "mem": [5, 10, 11, 19, 122, 131, 253, 257, 263], "argument": [5, 7, 9, 10, 16, 43, 57, 76, 103, 114, 189, 190, 195, 196, 217, 224], "prompt": [5, 195], "termin": [5, 14, 115, 195], "newlin": [5, 14, 43, 114], "semicolon": [5, 9], "empti": [5, 8, 16, 17, 18, 69, 106, 160, 175, 180, 181, 182, 189, 190, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 235, 263], "dump": [5, 10, 14, 84, 88, 94, 173, 174, 182, 185, 228, 235, 243, 257, 263], "foobar": [5, 6, 163], "w": [5, 17, 18, 41, 190, 198, 211, 218, 220, 223, 229], "organ": [5, 122], "top": [5, 6, 8, 9, 10, 11, 18, 41, 54, 69, 98, 103, 160, 174, 183, 190, 198, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 234, 235, 241, 243, 244, 255, 258, 263], "directori": [5, 6, 10, 11, 18, 48, 103, 173, 175, 182, 196, 235], "subdirectori": 5, "definit": [5, 65, 125, 159, 180, 181, 182, 235, 237, 241, 253], "cc": [5, 6, 8, 11, 243], "log": [5, 6, 16, 17, 18, 32, 48, 60, 76, 94, 115, 198, 226, 232, 235, 243, 263], "realli": 5, "seven": 5, "opt_expr": [5, 11, 108, 132, 138, 160, 162, 206, 208, 211, 212, 213, 214, 216, 218, 220, 221, 222, 223, 263], "opt_muxtre": [5, 138, 263], "opt_reduc": [5, 138, 263], "opt_rmdff": 5, "opt_merg": [5, 108, 130, 138, 263], "download": [5, 6], "makefil": [5, 6, 9, 11], "inc": [5, 15], "your": [5, 6, 16, 17, 18, 122, 186], "readm": [5, 9, 10, 11, 182], "get": [5, 6, 10, 11, 16, 17, 18, 129, 185, 186, 235, 263, 264], "instruct": [5, 10, 48, 225], "sole": [5, 14], "qt": [5, 9], "creator": [5, 229, 250], "qtcreator": 5, "eclips": 5, "dialog": 5, "cdt": 5, "plugin": [5, 263], "instal": [5, 156, 210, 264], "brows": 5, "length": [5, 12, 185, 197, 260, 261], "consult": 6, "websit": 6, "pdf": [6, 10, 253], "afraid": 6, "yosyshq": [6, 235, 249], "slack": 6, "gettingstart": 6, "codingstyl": 6, "particular": [6, 173], "hello_world": 6, "hello": [6, 245], "using_yosys_namespac": 6, "private_namespace_begin": 6, "struct": [6, 243], "helloworldpass": 6, "overrid": [6, 8, 103, 190, 235, 243, 260], "private_namespace_end": 6, "config": [6, 10, 264], "exec": [6, 43, 263], "cxx": 6, "cxxflag": 6, "ldflag": 6, "ldlib": 6, "Or": [6, 10], "you": [6, 16, 17, 18, 32, 65, 66, 185, 186, 235], "yourself": 6, "familiar": 6, "dict": 6, "pool": 6, "essenti": [6, 225], "unordered_map": 6, "unordered_set": 6, "characterist": 6, "2x": 6, "faster": [6, 16, 17, 18, 32, 85, 185], "push_back": 6, "eras": 6, "method": [6, 8, 10, 15, 43, 130, 225, 264], "count": [6, 78, 133, 140, 187, 190], "reach": [6, 190], "it1": 6, "it2": 6, "t2": 6, "t1": 6, "stai": [6, 9, 11, 190, 198], "across": [6, 16, 17, 18, 109, 126], "idict": 6, "biject": 6, "42": [6, 15, 201, 250], "si": [6, 16], "43": 6, "dummi": [6, 240], "throw": [6, 103], "c_str": 6, "44": [6, 11], "mfp": 6, "aka": [6, 10, 185, 187], "disjoint": 6, "union": [6, 10, 190], "promot": 6, "stl": 6, "collect": [6, 8, 9, 11, 48, 123, 253, 263], "glanc": 6, "idstr": 6, "feel": 6, "lot": 6, "global": [6, 8, 9, 10, 14, 40, 87, 115, 126, 175, 190, 218], "lookup": 6, "sigbit": 6, "sigspec": [6, 8, 14], "sigmap": [6, 186], "importantli": 6, "sigtool": 6, "addwir": 6, "new_id": 6, "consequ": 6, "danger": [6, 182], "somewher": [6, 8], "solut": [6, 10, 173, 185], "fast": [6, 16, 17, 18, 32, 138, 160, 194, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "modindex": 6, "own": [6, 10, 13, 186, 189], "sigbit_to_driver_index": 6, "conn": [6, 14, 211, 216, 219, 241], "theme": 6, "renam": [6, 11, 17, 218, 224, 244, 257, 263], "unconnect": [6, 9, 42], "clean": [6, 8, 9, 10, 32, 88, 110, 139, 204, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 263], "dangl": [6, 10, 32], "safe": [6, 14], "sure": [6, 253], "chapter_prog": 6, "stubnet": 6, "presentation_prog": 6, "my_cmd": 6, "scriptpass": 6, "prep": [6, 263], "flow": [6, 7, 8, 10, 15, 55, 100, 126, 160, 206, 211, 213, 214, 216, 217, 220, 221, 223, 239, 264], "predat": 6, "system": [6, 9, 11, 15, 196, 228, 263, 264], "rare": 6, "request": [6, 43, 220], "autoproc": [6, 69, 225, 229], "bugpoint": [6, 263], "natur": 6, "factor": [6, 10], "out": [6, 11, 32, 43, 48, 65, 110, 127, 160, 197, 213, 215, 223, 225, 229, 241, 243, 250, 257, 261, 263], "expect": [6, 7, 18, 19, 76, 115, 187, 198], "2nd": [6, 9, 10, 111, 189], "write_aig": [6, 263], "codebas": 6, "histor": 6, "adher": 6, "surround": 6, "indent": [6, 242], "thumb": [6, 9], "column": [6, 10, 256], "150": [6, 11], "brace": 6, "put": [6, 16, 114], "blank": [6, 16, 17, 18, 250], "stick": 6, "http": [6, 12, 16, 17, 18, 209, 215, 235, 248, 249, 253], "www": [6, 16, 17, 18, 235], "org": [6, 253], "doc": 6, "gcc": [6, 9], "futur": [6, 250], "releas": [6, 11], "size_t": [6, 243], "To": [6, 10, 11, 82, 190, 225, 235], "implicit": [6, 9, 40, 87, 182], "cast": 6, "getsiz": 6, "distribut": [6, 12, 13, 125, 208, 211, 214, 219, 220, 223], "unencumb": 6, "copi": [6, 17, 54, 69, 85, 188, 190, 204, 211, 220, 225, 263], "publish": [6, 15, 264], "sell": 6, "static": [6, 9, 243, 263], "find_stub_net": 6, "report_bit": 6, "net": [6, 10, 12, 41, 49, 55, 100, 139, 142, 163, 193, 198, 233, 235, 241, 244, 248, 250, 255, 263], "bit_usage_count": 6, "summari": 6, "line_count": 6, "stub": 6, "id2cstr": 6, "cell_it": 6, "cells_": 6, "uniq": 6, "sig": 6, "null": 6, "wire_it": 6, "wires_": 6, "usag": [6, 10, 11, 263], "usage_offset": 6, "port_id": 6, "record": 6, "possibli": 6, "stub_bit": 6, "fals": [6, 27, 241, 243, 250, 253], "increment": [6, 14, 15], "singleton": [6, 104, 214, 218, 220, 221], "stubnetspass": 6, "arg": [6, 43, 48, 224], "mirror": 6, "log_head": 6, "argidx": 6, "extra_arg": 6, "modules_": 6, "selected_modul": 6, "ql": 6, "test1": 6, "test2": 6, "test3": 6, "tail": 6, "rm": 6, "in1": [6, 8], "in2": [6, 8], "in3": [6, 8], "out1": [6, 8], "out2": [6, 8], "phase": 7, "lost": 7, "curiou": 7, "reader": 7, "mapper": [7, 263], "absolut": 7, "against": [7, 9, 10, 14, 122, 137, 229], "portion": [7, 10, 203], "isomorph": [7, 12, 15, 78], "swap": [7, 78, 190], "commut": [7, 74], "frequent": [7, 78], "mine": [7, 78], "recur": 7, "gw13": [7, 15], "stand": 7, "industri": 7, "secondli": [7, 10], "occasion": 7, "trade": [7, 84, 100], "secret": 7, "freeli": 7, "bug": [7, 221], "filterlib": [7, 264], "strip": [7, 13], "scan": 8, "ifdef": 8, "descriptor": 8, "pre": [8, 17, 19, 182, 260, 264], "preproc": 8, "verilog_lex": 8, "littl": 8, "liter": 8, "recognis": 8, "track": [8, 10, 87, 100], "constructor": 8, "annot": [8, 66, 174, 196, 203], "translate_off": 8, "synsopsi": 8, "translate_on": 8, "off": [8, 10, 78, 81, 84, 100, 194, 263], "verilog_pars": 8, "astnod": 8, "ast_non": 8, "ast_design": 8, "ast_modul": 8, "ast_task": 8, "ast_funct": 8, "ast_wir": 8, "ast_memori": 8, "ast_autowir": 8, "undeclar": 8, "ast_paramet": 8, "ast_localparam": 8, "localparam": 8, "ast_paraset": 8, "ast_argu": 8, "ast_rang": 8, "ast_const": 8, "ast_celltyp": 8, "ast_identifi": 8, "ast_prefix": 8, "suffix": [8, 77, 183, 225], "ast_fcal": 8, "ast_tcal": 8, "ast_to_sign": 8, "ast_to_unsign": 8, "ast_concat": 8, "ast_repl": 8, "ast_bit_not": 8, "ast_bit_and": 8, "ast_bit_or": 8, "ast_bit_xor": 8, "ast_bit_xnor": 8, "bitwis": 8, "ast_reduce_and": 8, "ast_reduce_or": 8, "ast_reduce_xor": 8, "ast_reduce_xnor": 8, "reduct": [8, 263], "ast_reduce_bool": 8, "ast_shift_left": 8, "ast_shift_right": 8, "ast_shift_sleft": 8, "ast_shift_sright": 8, "ast_lt": 8, "ast_l": 8, "ast_eq": 8, "ast_n": 8, "ast_g": 8, "ast_gt": 8, "ast_add": 8, "ast_sub": 8, "ast_mul": 8, "ast_div": 8, "ast_mod": 8, "ast_pow": 8, "ast_po": 8, "ast_neg": 8, "ast_logic_and": 8, "ast_logic_or": 8, "ast_logic_not": 8, "ast_ternari": 8, "ternari": 8, "ast_memrd": 8, "ast_memwr": 8, "ast_assign": 8, "ast_cel": 8, "ast_primit": 8, "primit": [8, 9, 61, 69, 197, 199, 228, 235], "ast_alwai": 8, "ast_initi": 8, "ast_block": 8, "ast_assign_eq": 8, "ast_assign_l": 8, "ast_cas": 8, "ast_cond": 8, "ast_default": 8, "ast_for": 8, "ast_genvar": 8, "ast_genblock": 8, "ast_genfor": 8, "ast_genif": 8, "genvar": 8, "ast_posedg": 8, "ast_negedg": 8, "ast_edg": 8, "enum": [8, 196], "astnodetyp": 8, "child": [8, 32], "children": 8, "almost": 8, "member": 8, "str": 8, "filenam": [8, 9, 10, 16, 17, 18, 32, 59, 69, 92, 98, 112, 113, 133, 176, 177, 179, 180, 181, 182, 189, 190, 196, 198, 224, 225, 228, 229, 235, 240, 241, 242, 243, 244, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258], "linenum": [8, 253], "creation": [8, 21], "basic_expr": 8, "attr": [8, 14, 28, 122, 126, 209, 211, 215, 216, 219, 220, 221, 241], "append_attr": 8, "yydebug": [8, 182], "dump_ast": 8, "too": [8, 9, 114], "brought": 8, "inlin": [8, 225, 243], "fairli": 8, "genrtlil": 8, "That": [8, 9, 10, 14, 136, 225], "encount": [8, 9], "ast_intern": 8, "temporari": [8, 10, 16, 17, 18, 19, 173, 224], "scheme": [8, 97], "original_nam": 8, "configur": [8, 122, 133, 225, 243], "previous": [8, 10, 54, 115, 190, 235], "page": [8, 15, 264], "suppos": [8, 10], "in4": 8, "in5": 8, "out3": 8, "in6": 8, "in7": 8, "2_y": [8, 10], "3_y": 8, "move": [8, 19, 153, 263], "deeper": 8, "hierarchi": [8, 9, 10, 11, 43, 69, 160, 182, 198, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 235, 243, 253, 263], "upper": [8, 10, 44, 235], "22": [8, 11, 250], "serv": [8, 10], "contrast": 8, "seen": 8, "18": [8, 9, 11, 211], "wrong": 8, "35": 8, "later": [8, 10, 14, 170, 182], "proc_adff": 8, "subst_rvalue_from": 8, "subst_rvalue_to": 8, "subst_lvalue_from": 8, "subst_lvalue_to": 8, "thing": [8, 9, 10, 11, 78, 225], "current_cas": 8, "push": [8, 10, 54, 140, 190, 236, 263], "restor": [8, 69, 109, 204, 263], "earlier": [8, 11], "pop": [8, 10, 54, 190, 236], "startup": 8, "discov": [8, 19], "lvalu": 8, "append": [8, 10, 48, 59, 114, 122, 201, 226, 245, 250, 257], "save": [8, 10, 32, 69, 188, 190, 196, 235, 263], "local": [8, 187, 243], "this_case_eq_lvalu": 8, "this_case_eq_ltemp": 8, "this_case_eq_rvalu": 8, "accordingli": 8, "_eq_": 8, "overwritten": [8, 42, 170], "effect": [8, 10, 65, 74, 81, 82, 85, 134, 190, 238, 253], "tupl": [8, 10, 62], "launch": [8, 10, 196], "proc_clean": [8, 32, 162, 263], "proc_rmdead": [8, 162, 263], "eg": [8, 56, 82, 125], "unreach": [8, 171], "rewrit": [8, 19, 235, 263], "reflect": 8, "proc_mux": [8, 162, 263], "proc_dff": [8, 162, 263], "now": [8, 9, 10], "benefit": 8, "sr": [8, 56, 199], "prerequisit": [9, 11, 264], "rich": [9, 11], "deactiv": [9, 11, 25, 42, 196, 231, 257], "unavail": 9, "tcl": [9, 11, 114, 263], "minisat": [9, 10, 12], "git": [9, 10, 11, 250], "rev": [9, 10, 11], "e216e0": 9, "2013": [9, 10, 15], "taken": [9, 258], "bigsim": 9, "regress": 9, "our": [9, 253], "navr\u00e9": 9, "avr": 9, "clone": 9, "softusb_navr": 9, "nice": 9, "scene": 9, "write_blif": [9, 16, 18, 211, 216, 217, 219, 221, 223, 263], "likewis": 9, "big": [9, 10], "conveni": [9, 225], "replic": [9, 81], "did": [9, 10], "obvious": 9, "op": [9, 260], "3rd": [9, 10, 201], "practic": 9, "appreci": 9, "blackbox": [9, 10, 19, 82, 103, 159, 175, 180, 181, 182, 187, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 235, 238, 241, 257, 263], "referenc": [9, 19, 250], "tell": [9, 10], "a23_alu": 9, "a23_barrel_shift_fpga": 9, "a23_barrel_shift": 9, "a23_cach": 9, "a23_coprocessor": 9, "a23_cor": 9, "a23_decod": 9, "a23_execut": 9, "a23_fetch": 9, "a23_multipli": 9, "a23_ram_register_bank": 9, "a23_register_bank": 9, "a23_wishbon": 9, "generic_sram_byte_en": 9, "generic_sram_line_en": 9, "global_input": [9, 20], "globrst": 9, "global_arst": [9, 162, 163], "adff2dff": 9, "rom": [9, 125, 126, 263], "17": [9, 11, 260], "throughout": 9, "37": 9, "techmap_celltyp": [9, 225], "1023": 9, "_techmap_do_": [9, 225], "_techmap_fail_": [9, 225], "19": [9, 11, 250], "mini": 9, "siev": 9, "eratosthen": 9, "arm": 9, "marm": 9, "march": 9, "mno": 9, "interwork": 9, "ffreestand": 9, "v4bx": 9, "boot": 9, "setup": [9, 19], "routin": 9, "stdint": 9, "stdbool": 9, "bitmap_s": 9, "64": [9, 79], "outport": 9, "0x10000000": 9, "uint32_t": 9, "bitmap": 9, "bitmap_set": 9, "idx": 9, "bitmap_get": 9, "val": 9, "volatil": 9, "bench": [9, 48, 85, 229, 263], "successfulli": [9, 264], "energi": 9, "ineffici": 9, "31": [9, 10, 15], "prime": [9, 10], "conduct": 9, "readmemb": 9, "readmemh": [9, 257], "overwhelm": 9, "quit": [9, 10], "gatewai": 9, "quickli": [9, 65], "hassl": 9, "extrem": 9, "armv2": 9, "fit": [9, 10, 136], "touch": 9, "2b90ba1": 10, "08": 10, "graphviz": [10, 263], "xdot": [10, 196], "symbol": [10, 176, 182, 198, 237, 240, 242, 258], "cat": 10, "paus": [10, 196], "d0": [10, 11], "appear": [10, 100, 115, 250], "forth": [10, 122], "displai": [10, 115, 190, 196, 235, 263], "subsequ": [10, 14, 88, 175, 182, 204], "demonstr": [10, 11], "halt": 10, "press": [10, 195, 196], "enter": [10, 196, 263], "bottom": [10, 174], "octagon": 10, "shape": 10, "label": [10, 17, 69, 100, 122, 160, 189, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223], "bit_width": 10, "ordinari": 10, "decim": [10, 14, 214, 217, 218, 257], "thin": 10, "think": 10, "round": 10, "corner": [10, 182], "hidden": [10, 204], "rhombu": 10, "buf": [10, 41, 110, 212, 213, 218, 222, 223, 241, 255], "artefact": 10, "abbrevi": [10, 196], "token": [10, 14, 38, 187, 225, 253, 254], "doubl": [10, 14, 16, 17, 18, 36, 103, 188, 191, 192, 235], "artifact": 10, "splice": [10, 11, 263], "splice_demo": 10, "splitnet": [10, 11, 209, 214, 263], "cmo": [10, 16, 203], "nativ": [10, 223], "great": 10, "visual": 10, "row": 10, "msb_left": 10, "lsb_left": 10, "msb_right": 10, "lsb_right": 10, "slightli": [10, 16, 17, 18, 125, 211, 216], "emphasis": 10, "necess": 10, "graphic": [10, 196], "distinct": [10, 225, 253], "technic": 10, "pitfal": 10, "why": 10, "drawn": 10, "awkwardli": 10, "arrang": 10, "breakout": 10, "unnecessari": 10, "interior": 10, "viewer": [10, 196], "plot": 10, "dens": [10, 174], "color": [10, 196], "randomli": [10, 183, 196], "seed": [10, 133, 183, 193, 196, 227, 228, 229], "random": [10, 183, 190, 193, 196, 228, 229], "stupidli": 10, "carefulli": 10, "troubleshoot": 10, "earliest": 10, "noexpr": [10, 210, 257], "datdir": 10, "cd": [10, 42, 189, 263], "src": [10, 14, 133, 183, 209, 215, 219, 250], "mode": [10, 35, 38, 55, 78, 103, 107, 111, 133, 162, 182, 189, 190, 198, 211, 216, 219, 222, 225, 235, 257, 263], "narrow": [10, 128, 194], "rather": [10, 182], "module_nam": [10, 17, 85, 97, 103, 176, 250], "whose": [10, 11, 14, 135], "suppress": [10, 16, 17, 18, 76, 228, 241], "read_": 10, "write_": 10, "strategi": [10, 157], "foobaraddsub": 10, "ba": 10, "foo": [10, 20, 250, 257], "bar": 10, "explicit": [10, 11, 88, 239, 263], "engin": [10, 204], "del": [10, 190], "clear": [10, 33, 54, 115, 190, 193, 216, 223, 235, 236, 237], "sumprod": 10, "prod": 10, "sumstuff": 10, "glimps": 10, "stuff": 10, "ineffect": 10, "intersect": [10, 190], "themselv": 10, "1_y": 10, "disjunct": 10, "unselect": 10, "rst": [10, 11], "properli": 10, "achiev": [10, 182], "broaden": 10, "ci": [10, 17, 190, 216], "maintain": 10, "sequenc": [10, 17, 122, 225, 243, 263], "dull": 10, "shortcut": [10, 263], "ci3": 10, "anymor": 10, "memdemo": 10, "s1": [10, 92, 253], "s2": [10, 253], "mayb": [10, 194], "predecessor": 10, "ci2": 10, "goe": [10, 114, 132], "colon": 10, "self": 10, "exclud": [10, 117], "comma": [10, 14, 16, 17, 18, 86, 190, 235], "squar": [10, 138, 190, 235, 244], "bracket": [10, 138, 190, 235, 244], "sinc": [10, 14, 23, 122], "know": [10, 186], "jump": 10, "co": [10, 15, 17, 98, 190, 198, 216], "repetit": 10, "mention": [10, 11, 92], "histori": [10, 263, 264], "session": [10, 105], "critic": 10, "spot": 10, "encapsul": 10, "submod": [10, 17, 253, 263], "outstag": 10, "selstag": 10, "scrambl": [10, 183], "eval": [10, 84, 229, 243, 263], "b1001": 10, "hc": 10, "n2": 10, "n1": 10, "unspecifi": [10, 75], "truth": [10, 75, 241], "00": 10, "xx": 10, "miter": [10, 66, 173, 240, 263], "14": [10, 11, 215], "primetest": 10, "ok": 10, "experi": [10, 217], "attempt": [10, 173, 185], "prove": [10, 185, 253, 263], "solver": [10, 11, 12, 85, 87, 130, 141, 173, 174, 183, 194, 229, 240, 253], "creativ": 10, "overflow": [10, 260], "0000000000011111": 10, "equat": [10, 263], "databas": 10, "proof": [10, 65, 185, 253], "2790": 10, "8241": 10, "claus": [10, 244], "______": 10, "___": 10, "_____": 10, "__": 10, "____": 10, "dec": 10, "hex": [10, 182, 257], "bin": 10, "15029": 10, "3ab5": 10, "0011101010110101": 10, "4099": 10, "1003": 10, "0001000000000011": 10, "1f": 10, "0000000000000000": 10, "8257": 10, "________": 10, "_______": 10, "opposit": [10, 78, 225], "accomplish": 10, "1001": 10, "81": 10, "207": 10, "wrapper": [10, 16, 17, 18, 44, 225], "met": [10, 11, 115], "forc": [10, 185, 194, 228], "plu": [10, 16, 17, 18, 85, 223], "circuitri": [10, 122, 127], "unexpect": [10, 11], "satisfi": [10, 15, 173], "worth": 10, "particularli": 10, "occur": 10, "perfectli": 10, "seq": [10, 65, 72, 86, 185], "max_undef": [10, 185], "29": [10, 11], "timestep": [10, 185], "0001": 10, "0010": 10, "0011": 10, "xxxxxxxxxxxxxxxxxxxxxxxx": 10, "10322": 10, "27881": 10, "maxim": [10, 173, 185], "xxxx": 10, "0000": 10, "001x": 10, "treat": [10, 14, 173, 182, 235, 243], "ensur": [10, 182, 183], "clearli": 10, "plai": 10, "surpris": 10, "harder": 10, "instant": 10, "tempor": [10, 15, 69, 185, 263], "induct": [10, 15, 69, 185, 263], "eensorensson03": [10, 15], "suffici": [10, 200], "inspect": [10, 195], "disprov": 10, "theorem": 10, "alik": 10, "082550f": 11, "2015": 11, "implicitli": [11, 103, 234, 235], "uniniti": [11, 87, 198, 240, 262], "pleas": 11, "bbl08": [11, 15], "verilog2btor": 11, "sh": 11, "safeti": 11, "safety1": 11, "boolector": 11, "unsat": [11, 173, 253], "nuxmv": 11, "sv": [11, 175, 182, 207, 217, 235, 257], "libdir": [11, 103, 235], "dir": [11, 16, 17, 18, 48, 79, 182, 209, 235], "mux_undef": [11, 108, 138, 142, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 239], "hide": [11, 183, 218], "wr_onli": 11, "setundef": [11, 87, 207, 214, 217, 218, 220, 221, 263], "undriven": [11, 108, 132, 138, 142, 193, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222], "write_btor": [11, 263], "partial": [11, 260], "command_nam": 11, "d1": 11, "21": 11, "var": 11, "20": [11, 80, 98, 198, 223, 250, 260], "00000001": 11, "00000000": 11, "ugt": 11, "11111111": 11, "acond": 11, "anext": 11, "25": 11, "26": [11, 15], "cond": 11, "27": 11, "28": 11, "54": 11, "53": 11, "50": [11, 15, 157], "52": 11, "55": [11, 250], "77": 11, "76": 11, "78": [11, 15, 223], "79": 11, "consider": 11, "bear": 11, "mind": 11, "benchmark": 11, "newer": 11, "sequenti": [11, 19, 65, 185, 218, 257], "picosat": 11, "951": 11, "incompat": [11, 217], "steve": 12, "reid": 12, "bruce": 12, "guenter": 12, "volker": 12, "grabsch": 12, "parameter": [12, 243], "matt": 12, "mccutchen": 12, "mattmccutchen": 12, "wolf": [12, 15], "ullmann": [12, 15], "subgraph": [12, 15], "ull76": [12, 15], "cnf": [12, 185], "formula": 12, "sat": [12, 15, 72, 100, 130, 138, 141, 206, 229, 253, 263], "bind": [12, 235], "queri": 13, "fork": 13, "modif": [13, 244], "upstream": 13, "Not": 13, "issu": 13, "appendix": 14, "ebnf": 14, "meant": 14, "permiss": 14, "rigor": 14, "yacc": 14, "somewhat": 14, "notat": 14, "stmt": 14, "byte": [14, 43], "strictli": 14, "speak": 14, "utf": 14, "nonw": 14, "eol": 14, "carriag": 14, "autogen": 14, "unknown": [14, 103, 187, 250], "imped": 14, "2147483648": 14, "delimit": [14, 43, 244], "quot": [14, 36, 76, 103, 188, 191, 192, 235], "nul": 14, "escap": 14, "ooo": 14, "octal": 14, "proce": 14, "autoidx": 14, "flattenn": 14, "warm": 14, "param": [14, 43, 193, 197, 211, 214, 216, 219, 221, 241, 263], "anyth": [14, 173, 229], "complement": 14, "11111111111111111111111111111111": 14, "enclos": [14, 188], "offset": [14, 250], "upto": [14, 250], "dest": 14, "tick": 14, "bibliographi": 15, "alfr": 15, "aho": 15, "ravi": 15, "sethi": 15, "jeffrei": 15, "ullman": 15, "addison": 15, "weslei": 15, "longman": 15, "boston": 15, "ma": 15, "usa": 15, "1986": 15, "isbn": 15, "201": 15, "10088": 15, "doi": 15, "1109": 15, "ieeestd": 15, "94220": 15, "1076": 15, "2004": 15, "revis": 15, "1999": 15, "94802": 15, "2001": [15, 257], "2006": 15, "99495": 15, "2008": 15, "4772740": 15, "packag": 15, "reus": 15, "c1": 15, "360": 15, "2010": 15, "5417309": 15, "brayton": 15, "hachtel": 15, "sangiovanni": 15, "vincentelli": 15, "multilevel": 15, "proceed": 15, "264": 15, "300": 15, "1990": 15, "52213": 15, "robert": 15, "brummay": 15, "armin": 15, "bier": 15, "florian": 15, "lons": 15, "btor": [15, 263, 264], "precis": [15, 43, 100], "joint": 15, "workshop": 15, "6th": 15, "modulo": 15, "theori": [15, 253], "1st": 15, "33": 15, "38": 15, "clifford": 15, "cum": 15, "sunburst": 15, "kill": 15, "snug": 15, "2000": 15, "paper": 15, "mc1": 15, "st": 15, "nikla": 15, "\u00e9": 15, "\u00f6": 15, "rensson": 15, "theoret": 15, "scienc": 15, "89": 15, "543": 15, "560": 15, "2003": 15, "johann": 15, "glaser": 15, "methodologi": 15, "interconnect": [15, 248], "jan": 15, "haas": 15, "editor": 15, "chip": [15, 263], "contribut": 15, "fdl": 15, "springer": 15, "somenzi": 15, "1996": 15, "kyu": 15, "lee": 15, "michael": 15, "hollei": 15, "mari": 15, "bailei": 15, "walter": 15, "bright": 15, "vlsi": 15, "manhasset": 15, "ny": 15, "cpm": 15, "62": 15, "june": 15, "yiqiong": 15, "shi": 15, "chan": 15, "ting": 15, "bah": 15, "hwee": 15, "gwee": 15, "ye": [15, 79], "ren": 15, "isca": 15, "symposium": 15, "2610": 15, "2613": 15, "5537093": 15, "acm": 15, "januari": 15, "1976": 15, "1145": 15, "321921": 15, "321925": 15, "wol13": [15, 264], "bachelor": [15, 264], "thesi": [15, 264], "vienna": [15, 264], "schupfer": 15, "christoph": 15, "grimm": 15, "2012": 15, "forum": 15, "194": 15, "ex": [16, 17, 18], "bindir": [16, 17, 18], "rest": [16, 17, 18], "genlib": [16, 213], "constr": 16, "strash": 16, "fraig": 16, "scorr": [16, 17, 18], "dc2": [16, 17, 18], "dretim": 16, "dch": [16, 17, 18], "nf": 16, "upsiz": 16, "dnsize": 16, "stime": 16, "mfs2": 16, "lutpack": 16, "cost": [16, 17, 18, 100, 125, 134, 194, 243], "qualiti": [16, 17, 18, 264], "set_driving_cel": 16, "cell_nam": [16, 55, 250], "set_load": 16, "floating_point_numb": 16, "primari": [16, 19, 42, 256], "femtofarad": 16, "picosecond": [16, 17, 18], "retim": [16, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 223], "num": [16, 56, 78, 88, 103, 125, 187, 190], "max": [16, 17, 18, 65, 72, 78, 122, 185, 190], "w1": [16, 17, 18], "w2": [16, 17, 18], "cost1": [16, 17, 18], "cost2": [16, 17, 18], "cost3": [16, 17, 18], "sizen": [16, 17, 18], "cost4": [16, 17, 18], "type1": 16, "type2": 16, "andnot": 16, "ornot": 16, "nmux": 16, "aoi3": 16, "oai3": 16, "aoi4": 16, "oai4": 16, "alias": [16, 190, 241], "cmos2": 16, "cmos3": 16, "cmos4": 16, "alia": [16, 42, 142, 152, 156, 182, 197, 225, 263], "partit": [16, 17], "keepff": 16, "nocleanup": [16, 17, 173], "showtmp": [16, 17, 18], "temp": [16, 17, 18], "markgroup": [16, 207, 217], "abcgroup": 16, "dress": [16, 211, 213, 216, 219, 220], "post": [16, 107, 145, 259, 260], "experiment": [16, 115, 206, 207, 209, 211, 213, 214, 215, 216, 217, 218, 220, 223, 260, 263], "blif": [16, 18, 211, 216, 217, 219, 221, 223, 263, 264], "eec": [16, 17, 18], "berkelei": [16, 17, 18], "edu": [16, 17, 18], "alanmi": [16, 17, 18], "facilit": 17, "fulli": [17, 19, 20, 100, 113, 183, 203, 243, 250], "from_label": [17, 69, 160, 189, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223], "to_label": [17, 69, 160, 189, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223], "synonym": [17, 69, 160, 189, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223], "sweep": [17, 18, 74], "mf": [17, 18], "maxlut": [17, 19, 84, 206, 216, 218, 221], "discard": [17, 132, 222, 263], "xaiger": [17, 19, 176, 263], "write_xaig": [17, 263], "abc9_op": [17, 263], "prep_hier": [17, 19], "scc": [17, 19, 263], "set_attr": [17, 187], "abc9_scc_id": [17, 19], "prep_bypass": [17, 19], "prep_dff": [17, 19], "stash": [17, 54, 69], "abc9_map": [17, 19, 218, 221], "wbflip": [17, 263], "wb": [17, 69, 83, 132, 180, 225], "abc9_flop": [17, 19], "nodff": [17, 138, 141, 206, 211, 213, 214, 216, 218, 220, 221, 223], "nosdff": [17, 138, 141, 206, 211, 213, 216, 218, 220, 221, 223], "prep_dff_submod": [17, 19], "setattr": [17, 180, 182, 216, 223, 263], "whitebox": [17, 19, 83, 180, 182, 187, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 258, 263], "abc9_box": [17, 19, 258], "foreach": 17, "_techmap_replace_": [17, 225], "prep_dff_unmap": [17, 19], "max_it": [17, 225, 229], "icel": [17, 74, 182, 218, 219, 221, 241], "abc9_model": [17, 218, 221], "break_scc": [17, 19], "prep_delai": [17, 19], "prep_xaig": [17, 19], "prep_lut": [17, 19], "prep_box": [17, 19], "abc9_hol": [17, 19, 258], "purg": [17, 28, 32, 38, 138, 139, 207, 211, 213, 216, 217, 218, 219, 221, 222, 263], "aigmap": [17, 229, 263], "write_lut": [17, 19], "write_box": [17, 19], "sym": 17, "xaig": [17, 18], "abc9_ex": [17, 263], "cwd": [17, 18], "read_aig": [17, 263], "wideport": [17, 176, 177], "reintegr": [17, 19], "unmap": [17, 56, 119, 263], "abc9_unmap": [17, 19, 218, 221], "abc9_byp": [17, 19], "unset": [17, 42, 175, 185, 188, 190, 216, 223, 238, 263], "abc9_box_id": [17, 19], "conjunct": [19, 173], "abc9_carri": 19, "bypass": [19, 35], "captur": 19, "dst": 19, "prepar": [19, 57, 69, 77, 160, 209, 213, 215, 223, 263], "popul": 19, "__abc9_delai": 19, "account": [19, 243], "arbitrarili": 19, "chosen": [19, 100, 228], "tag": [19, 133], "interrupt": [19, 195], "__abc9_scc_break": 19, "topolog": [19, 250, 263], "prep_": 19, "abc9_lut": 19, "intergr": 19, "recov": 19, "stitch": 19, "name1": 20, "name2": 20, "made": 21, "bitstream": 23, "noinit": [25, 34, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223], "enforc": [25, 185], "emul": [26, 56, 58, 259, 263], "deassert": [26, 40], "tocas": [27, 154], "insensit": [27, 122, 154, 235], "old_nam": [27, 47, 154, 183], "new_nam": [27, 47, 154, 183], "old_valu": [27, 154], "new_valu": [27, 154], "imap": [27, 154], "modattr": 27, "xilinx": [27, 82, 145, 203, 244, 263], "attriburt": 28, "attrnam": 28, "privat": [29, 87, 183, 204], "crash": 32, "invok": [32, 141], "smallest": [32, 260], "write_rtlil": [32, 263], "grep": [32, 76], "converg": 32, "constrain": [32, 174], "bugpoint_keep": 32, "reconnect": [32, 139], "runner": 32, "wrap": [32, 44, 224, 263], "timeout": [32, 173, 185], "30": 32, "valgrind": 32, "modnam": [33, 190, 195], "cellnam": 33, "celltyp": [33, 41, 82, 102, 104, 110, 111, 248], "trail": 33, "substr": 33, "initdrv": 34, "tbuf": [34, 214], "s_eventu": 35, "assert2assum": 35, "assume2assert": 35, "live2fair": 35, "fair2liv": 35, "old_typ": 37, "new_typ": 37, "opt_clean": [38, 89, 93, 96, 108, 120, 138, 160, 186, 206, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 223, 263], "verbos": [38, 72, 78, 80, 88, 137, 157, 174, 235, 240, 252, 253, 254, 257], "widen": 39, "altogeth": [39, 141], "absenc": [41, 264], "clkbuf_inhibit": 41, "buffer_typ": 41, "bufr": 41, "portname_out": [41, 82], "portname_in": [41, 82], "sink": [41, 62, 243], "inpad": [41, 111, 207, 209, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223], "pad": [41, 217, 218, 222, 263], "nounset": 42, "lh": [42, 185, 214, 257], "rh": 42, "send": 43, "stdin": [43, 76], "stdout": [43, 76, 114], "socket": 43, "bidirect": [43, 187], "pipe": 43, "window": [43, 196], "json": [43, 112, 185, 203, 208, 209, 211, 212, 213, 214, 215, 216, 219, 220, 222, 249, 263], "protocol": [43, 174], "commun": 43, "respond": 43, "repli": 43, "unnam": 43, "unlimit": [43, 225], "hygien": 43, "parsedbi": 43, "anyconveni": 43, "cach": 43, "rewir": [44, 88, 200], "cell_typ": [44, 74, 78, 192, 197, 231, 250], "port_nam": [44, 250], "width_param": 44, "sign_param": 44, "destin": [48, 226], "consol": [48, 59, 133, 203, 226, 229], "newli": [48, 87, 204], "wildcard": [48, 56, 103, 190, 196, 225], "exit": [48, 115, 189, 195, 196, 225], "yosys_cover_dir": 48, "yosys_cover_fil": 48, "hint": [48, 85], "awk": 48, "gawk": 48, "60": 48, "10d": 48, "k3": 48, "cupoint": 49, "cmd": [50, 224, 226, 232], "flag": [51, 235], "bunch": 53, "new_mod_nam": 54, "new_top_nam": 54, "vlog": [54, 210, 213, 222, 229, 235, 263], "rememb": 54, "primarili": 55, "output_port": 55, "init_param": 55, "highlow": 55, "strinit": 55, "noreinit": 55, "cell_type_pattern": 56, "minc": [56, 216], "minimum": [56, 157, 197, 223, 243], "threshold": [56, 173], "soft": [56, 125], "minsrst": 56, "ie": [56, 148, 196, 225], "ingest": 56, "_aldff_": [56, 211], "_aldffe_": [56, 211], "upconvers": 56, "ty": 56, "unabl": 56, "realiz": 56, "plain": 56, "rais": 56, "info": [57, 198, 235, 242, 250], "won": 57, "untouch": 57, "along": [57, 100, 109, 174], "dfflegal": [57, 207, 208, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 263], "ce": [58, 211, 214, 216, 220], "header": [59, 243], "outfil": 59, "trim": 61, "sgsr": 61, "nogsr": 61, "gold_sig": 64, "gate_sig": 64, "gold_cel": [64, 85], "gate_cel": [64, 85], "weak": 65, "diverg": 65, "observ": [65, 87], "confid": 65, "gold_modul": 66, "gate_modul": 66, "equiv_modul": 66, "presum": 66, "equiv_simpl": [66, 263], "equiv_statu": [66, 69, 263], "inam": [66, 241, 255], "blacklist": [66, 69, 235], "encfil": [66, 89, 97, 206], "someth": 66, "unproven": [67, 68, 70, 73], "subcricuit": 67, "equiv_region": 67, "miter_modul": 68, "cmp": [68, 198], "cmp_": [68, 132], "equiv_mak": [69, 263], "multiclock": [69, 198], "clk2fflogic": [69, 87, 126, 263], "async2sync": [69, 87, 263], "equiv_induct": [69, 263], "nocheck": 69, "run_pass": 69, "preopt": 69, "postopt": 69, "gold": [69, 71, 74, 132, 198], "segment": 70, "shorter": 72, "cone": [72, 80, 190], "nogroup": 72, "assumpt": [74, 85, 185, 253], "de": 74, "fwd": [74, 85], "performan": 74, "forward": [74, 85], "noth": [74, 195], "backward": [74, 85], "fwonli": 74, "maxit": 74, "suppli": 76, "popen": 76, "stderr": [76, 114, 115, 243], "subprocess": 76, "regex": [76, 115], "echo": [76, 263], "bananapi": 76, "nana": 76, "cut": [77, 263], "among": 77, "evert": 77, "sep": 77, "map_fil": 78, "out_fil": 78, "il": [78, 88], "constport": 78, "slower": 78, "nodefaultswap": 78, "builtin": [78, 225], "needle_typ": 78, "haystack_typ": 78, "needl": 78, "haystack": 78, "port1": 78, "port2": 78, "swappabl": 78, "perm": 78, "porta": 78, "portb": 78, "permut": 78, "cell_attr": 78, "attribute_nam": [78, 180, 182, 196, 250], "wire_attr": 78, "ignore_paramet": 78, "ignore_param": 78, "parameter_nam": [78, 250], "unprocess": 78, "mine_cells_span": 78, "min": [78, 122, 190, 261], "mine_min_freq": 78, "mine_limit_matches_per_modul": 78, "mine_max_fanout": 78, "extract_ord": 78, "ascend": 78, "resett": 79, "maxwidth": [79, 215], "minwidth": 79, "allow_arst": [79, 209], "pout": [79, 215], "breadth": [80, 225], "search": [82, 99, 103, 182, 185, 235], "is_clk_invert": 82, "ISE": [82, 223], "invertible_pin": 82, "param_nam": [82, 111], "xore": 82, "inv": [82, 88, 223], "keep_hierarchi": 83, "minlut": 84, "simplemap": [84, 208, 211, 212, 213, 214, 216, 220, 222, 223, 225, 263], "relax": 84, "minim": [84, 100, 173, 185, 263], "alpha": [84, 174], "beta": 84, "gamma": 84, "potenti": [84, 141, 182], "optarea": 84, "fewer": 84, "slight": [85, 243], "initeq": 85, "anyeq": 85, "bwd": 85, "equivalend": 85, "fordward": 85, "hit": 85, "nop": 85, "speedup": 85, "strang": 85, "unconstrain": [86, 253], "trace": [86, 87, 183, 240, 263], "clk2ff": 87, "ff2anyinit": 87, "inhibit": 87, "wit": [87, 183, 198, 235, 240], "anyinit2ff": 87, "revers": [87, 204], "awar": [87, 88], "sound": 87, "redund": [88, 263], "vv": [88, 137, 157, 235], "got": 89, "nodetect": 89, "fullexpand": 89, "fm_set_fsm_fil": [89, 97], "protect": 90, "noauto": 92, "origenc": 92, "s0": 92, "elimin": [93, 152, 263], "reassign": 97, "set_fsm_": 97, "state_sign": 97, "old_bitpattern": 97, "new_bitpattern": 97, "simulu": 98, "tb": 98, "txt": [98, 208, 211, 212, 213, 214, 216, 217, 218, 219, 220, 245], "portnam": [98, 103, 104, 110, 111, 198, 250], "clockn": [98, 198], "arbitari": [98, 198], "__cc_not": 99, "cc_lut2": 99, "cc_l2t4": 99, "cc_l2t5": 99, "augment": 100, "qbf": [100, 173], "taint": 100, "y_t": 100, "b_t": 100, "a_t": 100, "imprecis": 100, "instrument": 100, "__glift_weight": 100, "rough": 100, "un": 100, "alongsid": 100, "orign": 100, "significantli": [100, 185, 243], "choic": [100, 157], "total": [100, 122], "gp_inv": 101, "gp_dff": [101, 215], "gp_dlatch": 101, "decl": 103, "wand": 103, "wor": 103, "simcheck": 103, "smtcheck": 103, "smtlib2_modul": 103, "purge_lib": 103, "keep_posit": 103, "keep_portwidth": 103, "adjust": [103, 149], "nodefault": 103, "nokeep_assert": 103, "indirectli": 103, "chparam": [103, 235, 263], "elabor": [103, 235], "io": [103, 209, 213, 214, 215, 217, 218, 219, 220, 222, 223, 253], "tielo": 104, "tiehi": 104, "hicel": [104, 214, 218, 220, 221], "locel": [104, 214, 218, 220, 221], "init_fil": 106, "init_x": 106, "sb_mac16": 107, "accumul": [107, 260], "dsp": [107, 216, 220, 223, 263], "16x16": 107, "8x8": 107, "pack": [107, 135, 263], "scenario": [107, 260], "opt_dff": [108, 138, 263], "sb_carri": [109, 216], "sb_lut4": 109, "__ice40_carry_wrapp": 109, "ed": [109, 152], "unwrap": [109, 216], "notic": 110, "in_port": 111, "ext_port": 111, "face": 111, "outpad": [111, 207, 209, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223], "out_port": 111, "inoutpad": [111, 209, 215], "io_port": 111, "toutpad": [111, 209, 213, 214, 215, 218, 219, 220, 222, 223], "oe_port": 111, "tinoutpad": [111, 209, 213, 214, 215, 218, 219, 220, 221, 222, 223], "widthparam": 111, "nameparam": 111, "write_jni": [112, 263], "write_json": [113, 179, 208, 209, 211, 212, 213, 214, 215, 216, 219, 220, 222, 263], "screen": 114, "logfil": [114, 226], "quiet": [114, 164], "notifi": 114, "nolog": 114, "timestamp": 115, "nowarn": 115, "werror": 115, "nonzero": 115, "expected_count": 115, "noff": [117, 138, 160, 215], "norom": [120, 162], "nordff": [120, 206, 253], "nowiden": [120, 130], "nosat": [120, 130, 229], "memx": [120, 160, 239], "rw": [120, 124, 206, 211, 214, 216], "bram": [120, 122, 208, 211, 212, 213, 214, 216, 219, 220], "bram_rul": 120, "memory_": [120, 160], "opt_mem": [120, 263], "opt_mem_prior": [120, 263], "opt_mem_feedback": [120, 263], "memory_bmux2rom": [120, 263], "memory_shar": [120, 263], "opt_mem_widen": [120, 263], "memory_memx": [120, 160, 239, 263], "bmux": [121, 263], "rule_fil": 122, "attr_icas": 122, "ramb1024x32": 122, "dbit": 122, "wrmode": 122, "transp": 122, "clkpol": [122, 197], "endbram": 122, "wast": 122, "16384": 122, "16k": 122, "80": 122, "endmatch": 122, "wport": 122, "rport": 122, "dup": 122, "awast": 122, "slot": 122, "dwast": 122, "bwast": 122, "percentag": [122, 157], "acel": 122, "dcell": 122, "string_valu": 122, "or_next_if_bett": 122, "make_transp": 122, "make_outreg": 122, "shuffle_en": 122, "accommod": 122, "no_rw_check": [124, 206, 211, 214, 216], "library_fil": 125, "memlib": 125, "md": 125, "huge": [125, 216, 220], "ram_styl": 125, "iattr": [126, 221, 241], "keepdc": [126, 132, 138, 141, 142, 150, 160, 162, 223, 239], "adjac": 130, "subject": [130, 243], "counterpart": 131, "gold_nam": 132, "gate_nam": 132, "miter_nam": 132, "in_": 132, "mismatch": 132, "ignore_gold_x": 132, "make_output": 132, "rout": [132, 209, 215, 244], "gold_": 132, "gate_": 132, "make_outcmp": 132, "make_assert": 132, "cross": 132, "sampl": [133, 198], "rng": [133, 227, 229], "ctrl": [133, 195, 235], "portbit": 133, "ctrlbit": 133, "wirebit": 133, "filter": 133, "candid": 133, "cfg": [133, 235], "weight_pq_w": 133, "weight_pq_b": 133, "weight_pq_c": 133, "weight_pq_": 133, "weight_pq_mw": 133, "weight_pq_mb": 133, "weight_pq_mc": 133, "weight_pq_m": 133, "weight_cov": 133, "pick_cover_prcnt": 133, "_mux": 134, "mux4": [134, 213, 221], "mux8": [134, 213, 221], "mux16": 134, "220": 134, "460": 134, "940": 134, "mux2": 134, "100": [134, 227, 229], "dmux": 134, "90": 134, "nodecod": 134, "noparti": 134, "mutual": [135, 148, 263], "n_1": 136, "n_2": 136, "n_3": 136, "excess": 136, "mux_bool": [138, 142], "noclkinv": [138, 142, 215, 223], "share_al": [138, 150], "opt_shar": [138, 263], "reduce_": [140, 230, 263], "overal": [140, 234], "recognit": 141, "addition": [141, 228], "dlogic": [144, 216], "xilinx_dffopt": [145, 223, 263], "tech": [145, 197, 203, 211, 214, 215, 223], "ecp5": [145, 154, 263], "gowin": [145, 263], "flipflop": [150, 211, 214, 220], "interlink": 152, "diamond": 154, "lut4": [154, 211, 214, 220, 223, 259], "plugin_filenam": 156, "alias_nam": 156, "min_dens": 157, "densiti": [157, 211, 216], "shifter": 157, "min_choic": 157, "onehot": [157, 263], "norang": 157, "partli": [160, 206, 223], "ifx": [160, 162, 169], "wreduc": [160, 206, 211, 213, 216, 218, 220, 221, 223, 263], "nomem": [160, 253], "rdff": 160, "nokeepdc": 160, "stat": [160, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 263], "proc_": 162, "proc_prun": [162, 263], "proc_init": [162, 263], "proc_rom": [162, 263], "proc_dlatch": [162, 263], "proc_memwr": [162, 263], "Will": 162, "omit": [162, 197, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225], "netnam": [162, 163, 201, 242, 250], "noopt": [162, 182], "constant_valu": 163, "ultim": 164, "foral": 173, "existenti": 173, "quantifi": 173, "explicitli": [173, 220], "smt2": [173, 253], "smtbmc": [173, 253], "nooptim": 173, "smt": [173, 240, 263], "libv2": [173, 263], "nobisect": 173, "bisect": 173, "bitvector": 173, "z3": 173, "yice": 173, "cvc4": [173, 253], "o0": [173, 243], "o1": [173, 243], "o2": [173, 243], "placement": 174, "qwp_posit": 174, "ltr": 174, "border": 174, "alphanumer": 174, "axi": 174, "grid": 174, "divis": [174, 185, 229], "html_file_nam": 174, "html": 174, "profil": 174, "matrix": 174, "toi": 174, "vlog95": [175, 235], "vlog2k": [175, 235], "sv2005": [175, 235], "sv2009": [175, 235], "sv2012": [175, 235], "systemverilog": [175, 182, 235, 257], "vhdl87": [175, 235], "vhdl93": [175, 235], "vhdl2k": [175, 235], "vhdl2008": [175, 235], "incdir": [175, 225, 235], "noverif": 175, "clk_name": 176, "wire_nam": 176, "nooverwrit": [180, 181, 182, 225], "ignore_miss_func": 180, "ignore_miss_dir": 180, "ignore_miss_data_latch": 180, "nosynthesi": 182, "noassert": 182, "noassum": 182, "norestrict": 182, "dump_ast1": 182, "dump_ast2": 182, "dump_vlog1": 182, "dump_vlog2": 182, "no_dump_ptr": 182, "diff": 182, "dump_rtlil": 182, "nolatch": 182, "nomem2reg": 182, "incorrect": 182, "mem2reg": 182, "nomeminit": 182, "ppdump": 182, "nopp": 182, "nodpi": 182, "dpi": 182, "noblackbox": 182, "dblackbox": 182, "lib_whitebox": 182, "nowb": 182, "pwire": 182, "black": [182, 190, 243], "noautowir": 182, "default_nettyp": 182, "dname": [182, 237], "preprocessor": [182, 237], "idir": 182, "verilog_default": [182, 263], "pretti": [182, 235], "icaru": 182, "reli": 182, "privatli": 183, "enumer": [183, 196], "hierarch": [183, 213, 223, 243, 253, 257], "grow": 185, "enable_undef": 185, "def": 185, "et": 185, "cetera": 185, "pictur": 185, "vital": 185, "ignore_div_by_zero": 185, "ignore_unknown_cel": 185, "tempinduct": 185, "baseonli": 185, "maxstep": 185, "dump_vcd": 185, "vcd": [185, 198], "dump_json": 185, "wavejson": 185, "dump_cnf": 185, "dimac": 185, "forev": 185, "basecas": 185, "inductonli": 185, "initstep": 185, "deep": 185, "stepsiz": 185, "falsifi": 185, "worri": 186, "rid": 186, "max_depth": 187, "longer": 187, "nofeedback": 187, "all_cell_typ": 187, "examin": 187, "identifier_from": 188, "identifier_to": 188, "did_someth": 188, "scriptwir": 189, "embed": 189, "assert_opt": 190, "compact": 190, "mod_pattern": 190, "obj_pattern": 190, "white": 190, "prior": 190, "subtract": [190, 226, 260], "num1": 190, "num2": 190, "inclus": 190, "expans": 190, "beyond": 190, "xe": 190, "cie": 190, "coe": 190, "expos": [193, 243, 263], "aggress": 194, "svg": 196, "postscript": 196, "verilog_or_rtlil_fil": [196, 248], "read_liberti": [196, 210, 263], "yosys_show": 196, "ambigu": 196, "colorattr": 196, "ab": [196, 260], "_sign": 196, "asterisk": 196, "stretch": 196, "wait": 196, "notitl": 196, "titl": 196, "nobg": 196, "background": 196, "posix": 196, "yosysj": 196, "__shreg_dff_": 197, "minlen": [197, 223, 261], "keep_befor": 197, "keep_aft": 197, "maxlen": 197, "enpol": 197, "any_or_non": 197, "d_port_nam": 197, "q_port_nam": 197, "__shreg_": 197, "denot": [197, 250], "zinit": [197, 198, 211, 220, 223, 240, 263], "legal": 197, "greenpak4": [197, 263], "fst": [198, 263], "aiw": 198, "aiger": [198, 258, 263], "date": 198, "resetn": 198, "rstlen": 198, "timescal": 198, "writeback": 198, "vcd2fst": 198, "stimulu": 198, "sel_by_cel": 200, "sel_by_wir": 200, "sel_any_bit": 200, "no_output": 200, "no_port": 200, "char1": 201, "char2": 201, "char3": 201, "char": 201, "mysign": 201, "blindli": 201, "liberty_fil": 203, "estem": 203, "add_8": 203, "readabl": 203, "tee": [203, 224, 263], "flat": 204, "nofsm": 206, "noabc": [206, 216], "noalumacc": 206, "alumacc": [206, 211, 213, 216, 218, 220, 221, 223, 263], "noshar": 206, "abc9": [206, 211, 214, 216, 218, 220, 221, 223, 263], "flowmap": [206, 216, 263], "peepopt": [206, 211, 213, 216, 218, 220, 221, 223, 263], "cmp2lut": [206, 211, 213, 216, 218, 220, 221, 223], "cmp2lcu": [206, 223], "gate2lut": [206, 216], "opt_lut": [206, 216, 263], "achronix": 207, "speedster": 207, "efpga": 207, "vout": [207, 214], "noflatten": [207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 243], "cells_sim": [207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223], "deminout": [207, 208, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 263], "map_lut": [207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "map_cel": [207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223], "iopadmap": [207, 209, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 263], "__outpad": [207, 217], "__inpad": [207, 217], "cells_map": [207, 208, 211, 212, 214, 215, 216, 217, 219, 220, 222, 223], "nodec": [207, 257], "attr2com": [207, 210, 214, 217, 218, 257], "defparam": [207, 214, 217, 218, 257], "renameprefix": [207, 214, 217, 257], "syn_": [207, 217], "nolutram": [208, 211, 214, 218, 219, 220, 223], "eg_logic_dram16x4": 208, "nobram": [208, 211, 212, 213, 214, 216, 217, 218, 219, 220, 223], "eg_phy_bram": 208, "eg_phy_bram32k": 208, "eagle_bb": 208, "map_ram": [208, 211, 212, 214, 216, 219, 220], "memory_libmap": [208, 211, 212, 213, 214, 216, 219, 220, 223, 263], "lutram": [208, 211, 214, 219, 220], "lutrams_map": [208, 211, 214, 219, 220], "brams_map": [208, 211, 212, 213, 214, 216, 219, 220], "map_ffram": [208, 211, 212, 213, 214, 216, 217, 218, 220, 221, 223], "map_gat": [208, 211, 212, 213, 214, 216, 220, 221], "arith_map": [208, 211, 212, 213, 214, 216, 220, 222, 223], "map_ff": [208, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223], "_dffe_p": 208, "p_": [208, 211, 214, 216, 220, 222, 223], "_sdffe_p": 208, "_dlatch_n": 208, "no_lut": [208, 211, 212, 220, 222], "map_anlog": 208, "anlogic_fixcarri": [208, 263], "anlogic_eqn": [208, 263], "write_edif": [208, 211, 212, 216, 219, 222, 223, 263], "intend": [209, 215], "github": [209, 215, 253], "com": [209, 215, 235, 249], "azonenberg": [209, 215], "openfpga": [209, 215], "coolrunner2": 209, "extract_count": [209, 215, 263], "cells_counter_map": 209, "cells_latch": [209, 215], "xc2_dff": 209, "map_tff": 209, "tff_extract": 209, "map_pla": 209, "40": 209, "56": 209, "dffinit": [209, 215, 263], "fdcp": 209, "fdcp_n": 209, "ftcp": 209, "ftcp_n": 209, "ldcp": 209, "ldcp_n": 209, "coolrunner2_sop": [209, 263], "ibuf": [209, 214, 223], "iobuf": [209, 214, 223], "attrmvcp": [209, 211, 215, 219, 220, 263], "loc": [209, 215, 219], "coolrunner2_fixup": [209, 263], "etool": 210, "etools_phys_clk_lib": 210, "etools_logic_lut_lib": 210, "noccu2": [211, 220], "ccu2": [211, 220], "nowidelut": [211, 214, 220, 223], "pfu": [211, 220], "asyncprld": 211, "prld": 211, "abc2": [211, 216], "vpr": [211, 216, 217, 219], "incomplet": [211, 216, 219], "nodsp": [211, 218, 220, 223], "mult18x18d": 211, "cells_bb": [211, 213], "lut_width": [211, 213, 216, 218, 220, 221, 223], "mul2dsp": [211, 216, 218, 220, 223], "dsp_map": [211, 216, 218, 220], "dsp_a_maxwidth": [211, 216], "dsp_b_maxwidth": [211, 216], "dsp_a_minwidth": [211, 216], "dsp_b_minwidth": [211, 216], "dsp_name": [211, 216], "__mul18x18": 211, "chtype": [211, 216, 223, 263], "__soft_mul": [211, 216, 223], "dffe_": [211, 220], "_sdff": [211, 220], "ecp5_gsr": [211, 263], "syn_useioff": [211, 220], "latches_map": [211, 216, 220], "opt_lut_in": [211, 214, 223, 263], "autonam": [211, 214, 216, 218, 220, 221, 263], "cname": [211, 216, 219, 241], "efx_ram_5k": 212, "map_gbuf": 212, "clkbufmap": [212, 213, 218, 221, 222, 223, 263], "__efx_gbuf": 212, "gbuf_map": 212, "efinix_fixcarri": [212, 263], "ag": 213, "cc_bram_20k": 213, "cc_bram_40k": 213, "noaddf": 213, "cc_addf": 213, "nomult": 213, "cc_mult": 213, "nomx8": 213, "nomx4": 213, "cc_mx": 213, "luttre": 213, "noiopad": [213, 214, 218, 219, 220, 223], "noclkbuf": [213, 218, 223], "muxpack": [213, 223, 263], "map_mult": 213, "mul_map": 213, "map_bram": [213, 217, 218], "map_io": [213, 219], "cc_ibuf": 213, "cc_obuf": 213, "cc_tobuf": 213, "cc_iobuf": 213, "map_reg": 213, "reg_map": 213, "map_mux": 213, "muxcov": [213, 221, 223, 263], "mux_map": [213, 223], "lut_tree_cel": 213, "lut_tree_map": 213, "gatemate_foldinv": [213, 263], "inv_map": 213, "lut_map": [213, 223], "map_bufg": 213, "cc_bufg": 213, "noattr": [213, 221, 257], "nexpnr": 214, "iob": 214, "noalu": 214, "obuf": [214, 223], "oen": 214, "hilomap": [214, 218, 220, 221, 244, 263], "vcc": [214, 244], "gnd": [214, 244], "gen": [214, 235], "slg46140v": 215, "slg46620v": 215, "slg46621v": 215, "gp_dcmp": 215, "gp_dac": 215, "nlutmap": [215, 263], "shregmap": [215, 263], "gp_dffr": 215, "gp_dffsr": 215, "gp_ibuf": 215, "IN": 215, "gp_obuf": 215, "gp_obuft": 215, "oe": [215, 218], "gp_iobuf": 215, "greenpak4_dffinv": [215, 263], "hx": 216, "lp": 216, "nocarri": [216, 223], "sb_dffe": 216, "dffe_min_ce_us": 216, "min_ce_us": 216, "sb_ram40_4k": [216, 263], "spram": 216, "sb_spram256ka": 216, "ultraplu": 216, "ice40_hx": 216, "dsp_y_minwidth": 216, "__mul16x16": 216, "ice40_dsp": [216, 263], "spram_map": 216, "ice40_braminit": [216, 263], "ice40_wrapcarri": [216, 263], "ice40_opt": [216, 263], "ff_map": [216, 217, 223], "i0": 216, "i1": 216, "famili": [217, 218, 220, 221, 223, 260], "max10": 217, "cyclone10lp": 217, "cycloneiv": 217, "cyclon": [217, 218], "iv": 217, "gx": 217, "synth_intel_alm": [217, 263], "vqm": [217, 218], "quartu": [217, 218], "iopad": 217, "m9k_bb": 217, "altpll_bb": [217, 218], "brams_m9k": 217, "brams_map_m9k": 217, "nohex": [217, 218, 221, 257], "THE": 217, "cyclonev": 218, "arriav": 218, "arria": 218, "gz": 218, "cyclone10gx": 218, "10gx": 218, "statist": [218, 263], "mistral_": 218, "mistral_mul": 218, "intel_alm": 218, "alm_sim": 218, "dff_sim": 218, "dsp_sim": 218, "mem_sim": 218, "misc_sim": 218, "megafunction_bb": 218, "mistral_ob": 218, "mistral_ib": 218, "mistral_io": 218, "arith_alm_map": 218, "bram_": 218, "bram_typ": 218, "_map": [218, 223], "map_lutram": 218, "lutram_mlab": 218, "dff_map": 218, "mistral_clkbuf": 218, "600": 218, "alm_map": 218, "__mistral_vcc": 218, "__mistral_gnd": 218, "quartus_renam": 218, "__facade_outpad": 219, "__facade_inpad": 219, "__facade_toutpad": 219, "__facade_tinoutpad": 219, "lifcl": 220, "lfd2nx": 220, "vm": 220, "nolram": 220, "lram": 220, "cells_xtra": [220, 223], "lrams_map": 220, "ob": 220, "ib": 220, "obz": 220, "bb": 220, "_dff_pp": 220, "_sdff_pp": 220, "_dffe_pp": 220, "_sdffe_pp": 220, "vhi": 220, "vlo": 220, "pp3": 221, "polarpro": 221, "wors": 221, "pp3_cells_sim": 221, "lut_sim": 221, "pmuxtre": [221, 246, 263], "ram_block": 221, "rom_block": 221, "logic_block": 221, "syn_ramstyl": 221, "syn_romstyl": 221, "pp3_cells_map": 221, "pp3_ffs_map": 221, "pp3_latches_map": 221, "pp3_lut_map": 221, "iomap": 221, "ckpad": 221, "bipad": 221, "logic_1": 221, "logic_0": 221, "noiob": 222, "clkbuf": 222, "global_net": 222, "ffinit": 222, "sf2": 222, "attrmap": [222, 263], "_dffe_pn": 222, "_sdffce_pn": 222, "_dlatch_pn": 222, "map_iob": 222, "clkint": 222, "inbuf": 222, "outbuf": 222, "tribuff": 222, "bibuf": 222, "gndvccy": [222, 244], "xcup": [223, 260], "ultrascal": 223, "xcu": [223, 260], "xc7": [223, 260], "xc6": [223, 260], "spartan": 223, "xc6v": [223, 260], "virtex": 223, "xc5v": [223, 260], "xc4v": [223, 260], "xc3sda": [223, 260], "3a": 223, "xc3sa": 223, "xc3se": 223, "3e": 223, "xc3": 223, "xc2vp": 223, "pro": 223, "xc2v": 223, "xcve": 223, "2e": 223, "xcv": 223, "ise": 223, "nosrl": 223, "srl": 223, "xorci": 223, "muxci": 223, "carry4": 223, "muxf": 223, "dsp48": 223, "uram": 223, "uram288": 223, "widemux": 223, "pmux2shiftx": [223, 263], "map_dsp": 223, "_dsp_map": 223, "xilinx_dsp": [223, 263], "46": 223, "map_memori": 223, "lutrams_": 223, "brams_": 223, "xilinx_srl": [223, 263], "lut_siz": 223, "obuft": 223, "bufg": 223, "extractinv": [223, 263], "pvector": [223, 244], "bra": [223, 244], "argc": 224, "argv": 224, "reciev": 224, "redirect": [224, 263], "underscor": 225, "pn": 225, "techmap_simplemap": 225, "techmap_maccmap": 225, "maccmap": [225, 263], "techmap_wrap": 225, "techmap_autopurg": 225, "_techmap_": 225, "alphabet": 225, "constmap": 225, "_techmap_removeinit_": 225, "_techmap_celltype_": 225, "_techmap_cellname_": 225, "_techmap_constmsk_": 225, "_techmap_constval_": 225, "_techmap_wireinit_": 225, "_techmap_bits_connmap_": 225, "_techmap_connmap_": 225, "reserv": 225, "inherit": 225, "similarli": 225, "positive_integ": [227, 229], "testbench": [228, 263], "toggl": [228, 243], "semi": 228, "manner": 228, "gentb_clock": 228, "gentb_const": 228, "explor": 228, "gentb_skip": 228, "1000": 228, "rtlil_fil": 229, "filename_prefix": 229, "simlib_nocheck": 229, "muxdiv": 229, "divid": 229, "script_fil": 229, "noeval": 229, "db": 229, "reduce_chain": 230, "reduce_tre": 230, "eqpmux": 230, "pattern_nam": 230, "cell_port": 231, "noautostop": 231, "simultan": [233, 243], "modular": 234, "themself": 234, "filepath": 235, "libext": 235, "libord": 235, "librescan": 235, "unresolv": 235, "nest": 235, "systemverilogext": 235, "verilog1995ext": 235, "verilog2001ext": 235, "am": 235, "v2k": 235, "sverilog": 235, "libnam": 235, "msg_id": 235, "1209": 235, "extnet": 235, "autocov": 235, "fullinit": 235, "1928": 235, "1676": 235, "pp": 235, "blockbox": 235, "sva": 235, "checker": 235, "nosva": 235, "dump_fil": 235, "lineno": 235, "blfile": 235, "whitelist": 235, "wlfile": 235, "tabbi": 235, "cad": 235, "contact": 235, "offic": 235, "unam": 237, "vmap": 240, "startoffset": 240, "ywmap": 240, "bad_stat": 240, "happi": 240, "top_modul": [241, 244, 255], "unbuf": 241, "noalia": 241, "fanout": 241, "subckt": 241, "impltf": 241, "cxxrtl_design": 243, "p_top": 243, "p_clk": 243, "cxxrtl": 243, "race": 243, "malfunct": 243, "factori": 243, "cxxrtl_blackbox": 243, "cxxrtl_edg": 243, "i_data": 243, "cxxrtl_sync": 243, "o_data": 243, "bb_p_debug": 243, "posedge_p_clk": 243, "p_en": 243, "p_i_data": 243, "p_o_data": 243, "commit": 243, "unique_ptr": 243, "metadata_map": 243, "stderr_debug": 243, "fprintf": 243, "02x": 243, "make_uniqu": 243, "cxxrtl_templat": 243, "cxxrtl_width": 243, "detector": [243, 260], "negedge_p_clk": 243, "cxxrtl_comb": 243, "correspondingli": 243, "schedul": 243, "pessimist": 243, "nohierarchi": 243, "unbuff": 243, "absent": 243, "delta": 243, "waveform": 243, "noproc": 243, "o6": 243, "dramat": 243, "decreas": 243, "o3": 243, "o4": 243, "o5": 243, "g4": 243, "pessim": 243, "g0": 243, "g1": 243, "bare": 243, "g2": 243, "g3": 243, "demand": 243, "nogndvcc": 244, "attrprop": 244, "par": 244, "ang": 244, "parenthes": 244, "angl": 244, "flavor": 244, "output_fil": 245, "input_fil": 245, "eot": 245, "bmuxmap": [246, 263], "demuxmap": [246, 263], "notyp": 248, "conntyp": 248, "postsilicon": 248, "bygon": 248, "clairexen": 248, "jny": [249, 263], "schema": 249, "raw": 249, "githubusercont": 249, "misc": 249, "attribute_valu": 250, "parameter_default_valu": 250, "parameter_valu": 250, "port_detail": 250, "cell_detail": 250, "memory_nam": 250, "memory_detail": 250, "net_nam": [250, 255], "net_detail": 250, "bit_vector": 250, "hide_nam": 250, "port_direct": 250, "start_offset": 250, "01xz": 250, "foo_inst": 250, "d10": 250, "2406": 250, "sha1": [250, 264], "fb1168d8": 250, "clang": 250, "fpic": 250, "cells_not_process": 250, "00000000000000000000000000000001": 250, "00000000000000000000000000101010": 250, "00000000000000000000010100111001": 250, "module_not_deriv": 250, "model_nam": 250, "spec": 250, "bitindex": 250, "nport": 250, "ANDed": 250, "3u": 250, "walk": [252, 253, 254], "i8": 252, "i16": 252, "i32": 252, "i64": 252, "prover": 253, "fun": 253, "_h": 253, "establish": 253, "wirenam": 253, "_n": 253, "bitvec": 253, "accessor": 253, "instancenam": 253, "_i": 253, "_t": 253, "next_stat": 253, "_a": 253, "_u": 253, "_c": 253, "stbv": 253, "uninterpret": 253, "stdt": 253, "datatyp": 253, "nobv": 253, "fixedsizebitvector": 253, "incl": 253, "arraysex": 253, "_m": 253, "tpl": [253, 254], "template_fil": [253, 254], "visit": 253, "david": 253, "cok": 253, "tutori": 253, "smtlib": 253, "jsmtlib": 253, "smtlibtutori": 253, "qf_ufbv": 253, "test_": 253, "successor": 253, "test_t": 253, "test_n": 253, "b0000": 253, "bv": 253, "big_endian": 255, "vss": 255, "vdd": 255, "dc": 255, "subckt_nam": 255, "jumper": 255, "nc_prefix": 255, "_nc": 255, "pi": 256, "pio": 256, "always_comb": 257, "norenam": 257, "siminit": 257, "ref": 257, "radix": 257, "nostr": 257, "extmem": 257, "network": [257, 263], "psuedo": 258, "fd": 259, "lut6": 259, "a2": 260, "a1": 260, "b2": 260, "pcout": 260, "pcin": 260, "cout": 260, "cin": 260, "scratchpad": [260, 263], "multonli": 260, "use_dsp": 260, "simd": 260, "dsp48e1": 260, "fdre": 261, "fdre_1": 261, "__xilinx_shreg": 261, "fan": 261, "anlog": 263, "carri": 263, "assertpmux": 263, "testcas": 263, "chformal": 263, "clean_zerowidth": 263, "connect_rpc": 263, "rpc": 263, "connwrapp": 263, "coolrunn": 263, "ii": 263, "andterm": 263, "orterm": 263, "coverag": 263, "cutpoint": 263, "demot": 263, "demux": 263, "dffunmap": 263, "gsr": 263, "edgetyp": 263, "efinix": 263, "equiv_add": 263, "equiv_mark": 263, "region": 263, "equiv_mit": 263, "equiv_opt": 263, "equiv_purg": 263, "equiv_remov": 263, "statu": 263, "equiv_struct": 263, "extract_fa": 263, "extract_reduc": 263, "fmcombin": 263, "fminit": 263, "formalff": 263, "freduc": 263, "recod": 263, "fst2tb": 263, "gatem": 263, "glift": 263, "hi": 263, "lo": 263, "ice40": 263, "insbuf": 263, "logger": 263, "ltp": 263, "longest": 263, "lut2mux": 263, "sim": 263, "memory_narrow": 263, "memory_nordff": 263, "unpack": 263, "mutat": 263, "opt_demorgan": 263, "demorgan": 263, "opt_ffinv": 263, "dead": 263, "paramap": 263, "peephol": 263, "portlist": 263, "printattr": 263, "qbfsat": 263, "2qbf": 263, "qwp": 263, "quadrat": 263, "wirelength": 263, "placer": 263, "read_blif": 263, "read_ilang": 263, "deprec": 263, "read_rtlil": 263, "read_json": 263, "rmport": 263, "scatter": 263, "strongli": 263, "view": 263, "setparam": 263, "schemat": 263, "sta": 263, "submodul": 263, "supercov": 263, "synth_achronix": 263, "acrhonix": 263, "speedster22i": 263, "synth_anlog": 263, "synth_coolrunner2": 263, "cpld": 263, "synth_eas": 263, "easic": 263, "platform": 263, "synth_ecp5": 263, "synth_efinix": 263, "synth_gatem": 263, "cologn": 263, "synth_gowin": 263, "synth_greenpak4": 263, "synth_ice40": 263, "synth_intel": 263, "intel": 263, "altera": 263, "alm": 263, "synth_machxo2": 263, "machxo2": 263, "synth_nexu": 263, "lattic": 263, "nexu": 263, "synth_quicklog": 263, "quicklog": 263, "synth_sf2": 263, "smartfusion2": 263, "igloo2": 263, "synth_xilinx": 263, "test_abcloop": 263, "test_autotb": 263, "test_cel": 263, "test_pmgen": 263, "pmgen": 263, "torder": 263, "uniquifi": 263, "verilog_defin": 263, "write_cxxrtl": 263, "write_fil": 263, "write_firrtl": 263, "firrtl": 263, "write_ilang": 263, "write_intersynth": 263, "intersynth": 263, "write_simplec": 263, "write_smt2": 263, "write_smv": 263, "smv": 263, "write_spic": 263, "spice": 263, "write_t": 263, "focu": 264, "li": 264, "challeng": 264, "guidelin": 264, "stubsnet": 264, "bigint": 264, "ezsat": 264, "010": 264, "amber23": 264, "armv2a": 264, "conclus": 264, "011": 264, "navig": 264, "012": 264, "literatur": 264}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"approach": 0, "data": [0, 5], "control": [0, 259], "flow": [0, 1, 5, 11], "intern": [0, 2, 77], "format": [0, 59, 113], "yosi": [0, 1, 3, 6, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264], "typic": 0, "us": [0, 4, 9, 16, 17, 18, 65, 196, 235], "case": [0, 8], "basic": [1, 95, 120, 126], "principl": 1, "level": [1, 2, 7, 10, 159], "abstract": [1, 264], "system": [1, 5, 76], "high": 1, "behaviour": 1, "regist": [1, 2, 197, 261], "transfer": 1, "rtl": [1, 2, 5, 243], "logic": [1, 2, 4, 10, 21, 91, 95, 187], "gate": [1, 2, 7, 10, 81, 152], "physic": 1, "switch": [1, 14, 172], "featur": 1, "synthesiz": 1, "verilog": [1, 2, 8, 9, 11, 182, 235, 237, 257], "structur": [1, 3, 74], "express": [1, 2, 142], "model": [1, 100], "function": [1, 19, 88], "task": 1, "condit": 1, "loop": [1, 187, 227], "gener": [1, 8, 40, 98, 133, 160, 196, 206, 225, 228, 249], "statement": [1, 8, 14], "arrai": [1, 8], "memori": [1, 2, 5, 14, 120, 122, 123, 124, 125, 126, 128, 129, 130, 131, 146, 147, 149, 168], "challeng": 1, "digit": 1, "circuit": [1, 10, 21, 26, 66, 68, 69, 75, 132, 173, 185, 198], "synthesi": [1, 5, 9, 160, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "standard": 1, "complianc": 1, "optim": [1, 4, 69, 89, 96, 100, 108, 137, 138, 140, 141, 144, 146, 149, 155, 259], "technologi": [1, 7, 16, 17, 18, 57, 104, 111, 225], "map": [1, 7, 16, 17, 18, 21, 57, 95, 104, 107, 111, 119, 122, 125, 136, 197, 199], "script": [1, 5, 9, 160, 189, 206, 224], "base": [1, 194, 218], "method": 1, "from": [1, 28, 39, 58, 68, 106, 129, 165, 166, 168, 180, 181, 182, 189], "compil": 1, "design": [1, 5, 8, 10, 20, 34, 35, 37, 39, 47, 49, 51, 54, 59, 83, 90, 93, 103, 112, 113, 133, 175, 183, 235, 240, 241, 242, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258], "lex": 1, "pars": 1, "exemplari": 1, "token": 1, "list": [1, 2, 62, 116, 156, 159, 190], "assign": [1, 8, 29, 170], "foo": 1, "bar": 1, "42": 1, "multi": [1, 123, 131, 201], "pass": [1, 4, 8, 230], "static": [1, 202], "singl": 1, "ssa": 1, "form": 1, "cell": [2, 4, 5, 7, 14, 22, 28, 31, 37, 38, 40, 45, 46, 53, 55, 64, 65, 71, 78, 79, 81, 82, 85, 91, 110, 119, 120, 123, 125, 126, 131, 134, 137, 139, 144, 150, 153, 154, 157, 158, 180, 199, 200, 205, 229, 231], "librari": [2, 12], "unari": 2, "oper": [2, 10, 76, 239], "type": [2, 8, 37, 56, 62, 153, 229], "correspond": [2, 8], "binari": 2, "comparison": 2, "between": [2, 148], "differ": [2, 136], "round": 2, "mode": [2, 195], "divis": 2, "modulo": 2, "multiplex": [2, 151, 169], "finit": [2, 89, 94, 96, 97], "state": [2, 89, 94, 96, 97, 233], "machin": [2, 89, 94, 96, 97], "specifi": 2, "rule": [2, 4], "formal": [2, 35, 49, 86, 87], "verif": [2, 9, 235], "network": [2, 41], "main": 2, "ff": [2, 26, 40, 55, 56, 58, 87, 129, 143, 259, 262], "reset": [2, 54, 58, 163], "enabl": [2, 50, 58, 147], "set": [2, 55, 86, 115, 188, 191, 192, 236], "latch": [2, 101, 166], "sr": 2, "introduct": [3, 10], "histori": [3, 105], "thi": [3, 219], "document": 3, "simpl": [4, 10, 72, 108, 138, 142, 199, 228, 252], "The": [4, 5, 6, 8, 9], "opt_expr": [4, 142], "const": [4, 142], "fold": [4, 99, 142], "_and_": 4, "opt_muxtre": [4, 151], "opt_reduc": [4, 152], "opt_rmdff": 4, "opt_clean": [4, 139], "opt_merg": [4, 150], "fsm": [4, 89, 90, 91, 92, 93, 95], "extract": [4, 22, 68, 78, 79, 80, 82, 89, 93, 129, 165, 166, 168, 261], "encod": 4, "detect": [4, 163, 187], "recod": [4, 97], "implement": [5, 229], "overview": [5, 10], "simplifi": [5, 152], "intermedi": [5, 186], "languag": 5, "rtlil": [5, 8, 14, 59, 181, 251], "identifi": [5, 14], "modul": [5, 6, 14, 30, 33, 36, 47, 70, 73, 77, 116, 181, 182, 184, 204, 234], "wire": [5, 14, 28, 38, 110, 139, 189, 205], "sigspec": 5, "process": [5, 14, 162, 164, 165, 166, 168], "command": [5, 10, 50, 60, 76, 105, 189, 195, 226, 227, 232, 263], "interfac": 5, "sourc": 5, "tree": [5, 31, 99, 134, 151, 158, 169, 171], "build": 5, "program": [6, 13], "extens": 6, "guidelin": 6, "stubsnet": 6, "exampl": [6, 9, 11], "substitut": 7, "subcircuit": [7, 12, 78], "ast": 8, "frontend": [8, 43], "transform": [8, 31, 53, 157, 158], "preprocessor": 8, "lexer": 8, "parser": 8, "node": 8, "construct": 8, "simplif": 8, "synthes": 8, "alwai": 8, "block": [8, 122, 167], "processgener": 8, "algorithm": 8, "handl": [8, 61, 227], "nonblock": 8, "further": 8, "analysi": [8, 202], "proc": [8, 162], "parametr": 8, "010": 9, "convert": [9, 11, 26, 30, 40, 56, 77, 81, 118, 121, 147, 167, 169, 172, 243, 252], "blif": [9, 177, 241], "page": [9, 10, 11], "instal": [9, 10, 11], "get": [9, 188], "start": [9, 11], "advanc": [9, 10], "amber23": 9, "armv2a": 9, "cpu": 9, "limit": [9, 11], "conclus": [9, 10, 11], "011": 10, "interact": [10, 105, 195], "investig": 10, "prerequisit": 10, "show": [10, 105, 196], "A": 10, "break": [10, 46], "out": [10, 98], "box": 10, "signal": [10, 14, 77, 137, 153, 259], "vector": 10, "netlist": [10, 162, 244, 248, 255], "miscellan": 10, "note": 10, "navig": 10, "work": [10, 219], "select": [10, 33, 62, 161, 190], "cone": 10, "store": 10, "recal": 10, "techniqu": 10, "evalu": [10, 36, 75], "combinatori": 10, "solv": [10, 173, 185], "sat": [10, 173, 185, 194], "problem": [10, 34, 100, 173, 185], "sequenti": 10, "012": 11, "btor": [11, 242], "quick": 11, "detail": 11, "auxiliari": [12, 13], "sha1": 12, "bigint": 12, "ezsat": 12, "config": 13, "filterlib": 13, "abc": [13, 16, 227], "text": [14, 114, 245], "represent": 14, "lexic": 14, "element": 14, "charact": 14, "valu": [14, 86, 188, 193], "string": 14, "comment": 14, "file": [14, 92, 98, 106, 114, 176, 177, 179, 180, 181, 182, 189, 224, 226, 232, 240, 241, 242, 244, 245, 246, 248, 250, 251, 253, 254, 255, 257, 258], "autoindex": 14, "attribut": [14, 27, 28, 161, 167, 191, 238], "specif": 14, "connect": [14, 39, 42, 43, 110, 184, 187, 256], "sync": [14, 26], "literatur": 15, "refer": [15, 263], "help": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "abc9": [17, 18, 19], "abc9_ex": 18, "abc9_op": 19, "helper": 19, "add": [20, 25, 49, 64, 186, 205, 262], "object": [20, 29, 51, 116, 161, 183, 190, 191, 192], "aigmap": 21, "invert": [21, 82, 99, 101, 143, 262], "graph": 21, "alumacc": 22, "alu": 22, "macc": [22, 119], "anlogic_eqn": 23, "anlog": [23, 24, 208], "calcul": 23, "equat": 23, "lut": [23, 84, 99, 118, 136, 144, 145], "anlogic_fixcarri": 24, "fix": [24, 63], "carri": [24, 63, 109], "chain": [24, 63, 81], "assertpmux": 25, "assert": 25, "parallel": 25, "mux": [25, 31, 53, 121, 134, 135, 152, 158], "async2sync": 26, "async": 26, "input": [26, 44, 52, 75, 124, 145, 153], "attrmap": 27, "renam": [27, 154, 183], "attrmvcp": 28, "move": [28, 204], "copi": [28, 47, 234], "drive": 28, "autonam": 29, "automat": [29, 132, 227, 229], "name": [29, 33], "blackbox": 30, "bmuxmap": 31, "bmux": 31, "bugpoint": 32, "minim": 32, "testcas": 32, "cd": 33, "shortcut": 33, "check": [34, 66, 67, 70, 73, 74, 103], "obviou": 34, "chformal": 35, "chang": [35, 37], "constraint": 35, "chparam": 36, "re": 36, "new": [36, 204], "paramet": [36, 154, 192], "chtype": 37, "clean": [38, 39, 103], "remov": [38, 42, 71, 139, 148, 164, 170, 184], "unus": [38, 139, 145], "clean_zerowidth": 39, "zero": [39, 262], "width": [39, 44], "clk2fflogic": 40, "clock": [40, 41, 58], "clkbufmap": 41, "insert": [41, 45, 110], "buffer": [41, 45, 110, 111, 233], "creat": [42, 100, 123, 132, 200, 234], "connect_rpc": 43, "rpc": 43, "connwrapp": 44, "match": 44, "output": [44, 52, 124, 226, 232], "port": [44, 52, 77, 123, 124, 127, 128, 129, 130, 131, 147, 148, 149, 159, 184], "pair": 44, "coolrunner2_fixup": 45, "necessari": 45, "coolrunn": [45, 209], "ii": [45, 209], "architectur": 45, "coolrunner2_sop": 46, "sop": 46, "andterm": 46, "orterm": 46, "cover": [48, 134, 205], "print": [48, 59, 73, 94, 114, 117, 161, 203, 231], "code": [48, 252], "coverag": 48, "counter": [48, 79], "cutpoint": 49, "cut": 49, "point": 49, "debug": 50, "run": 50, "log": [50, 114], "messag": [50, 102], "delet": 51, "deminout": 52, "demot": 52, "inout": 52, "demuxmap": 53, "demux": 53, "eq": [53, 137], "save": 54, "restor": 54, "current": 54, "dffinit": 55, "init": [55, 86, 167], "param": 55, "dfflegal": 56, "support": 56, "target": 56, "dfflibmap": 57, "flip": [57, 165, 238], "flop": [57, 165], "dffunmap": 58, "unmap": 58, "synchron": 58, "dump": 59, "part": [59, 164, 204], "echo": 60, "turn": 60, "back": 60, "off": 60, "ecp5_gsr": 61, "ecp5": [61, 211], "gsr": 61, "edgetyp": 62, "all": [62, 149, 262], "edg": 62, "efinix_fixcarri": 63, "efinix": [63, 212], "equiv_add": 64, "equiv": [64, 65, 68, 71, 72], "equiv_induct": 65, "prove": [65, 69, 72], "tempor": 65, "induct": 65, "equiv_mak": 66, "prepar": [66, 87], "equival": [66, 67, 69, 70, 73, 74, 140], "equiv_mark": 67, "mark": 67, "region": 67, "equiv_mit": 68, "miter": [68, 132], "equiv_opt": 69, "equiv_purg": 70, "purg": 70, "equiv_remov": 71, "equiv_simpl": 72, "try": 72, "instanc": [72, 85], "equiv_statu": 73, "statu": 73, "equiv_struct": 74, "eval": 75, "given": 75, "an": [75, 153], "exec": 76, "execut": [76, 189, 224], "shell": [76, 195], "expos": 77, "find": [78, 80, 90], "replac": [78, 193], "them": 78, "extract_count": 79, "greenpak4": [79, 101, 215], "extract_fa": 80, "full": 80, "half": 80, "adder": 80, "extract_reduc": 81, "reduce_": 81, "extractinv": 82, "explicit": [82, 200], "pin": 82, "flatten": 83, "flowmap": 84, "pack": [84, 260], "fmcombin": 85, "combin": 85, "two": 85, "one": 85, "fminit": 86, "sequenc": 86, "formalff": 87, "freduc": 88, "perform": [88, 106, 108, 138, 141, 142, 194, 202], "reduct": [88, 140], "fsm_detect": 90, "fsm_expand": 91, "expand": [91, 103], "merg": [91, 101, 124, 153], "fsm_export": 92, "export": 92, "kiss2": 92, "fsm_extract": 93, "fsm_info": 94, "inform": 94, "fsm_map": 95, "fsm_opt": 96, "fsm_recod": 97, "fst2tb": 98, "testbench": 98, "fst": 98, "gatemate_foldinv": 99, "gatem": [99, 213], "glift": 100, "greenpak4_dffinv": 101, "dff": [101, 124, 141], "displai": 102, "hierarchi": 103, "up": [103, 128, 201], "hilomap": 104, "constant": [104, 193], "hi": [104, 205], "lo": [104, 205], "driver": 104, "last": 105, "ice40_braminit": 106, "ice40": [106, 107, 108, 109, 216], "sb_ram40_4k": 106, "initi": [106, 167, 262], "ice40_dsp": 107, "multipli": 107, "ice40_opt": 108, "ice40_wrapcarri": 109, "wrap": 109, "insbuf": 110, "iopadmap": 111, "i": [111, 219], "o": 111, "pad": 111, "jny": 112, "write": [112, 113, 147, 148, 168, 240, 241, 242, 244, 245, 246, 248, 250, 251, 253, 254, 255, 256, 257, 258], "metadata": [112, 249], "json": [113, 179, 250], "logger": 115, "properti": 115, "l": 116, "ltp": 117, "longest": 117, "topolog": [117, 231], "path": [117, 147], "lut2mux": 118, "_mux_": 118, "maccmap": 119, "translat": [120, 126, 162], "memory_bmux2rom": 121, "rom": [121, 172], "memory_bram": 122, "ram": 122, "memory_collect": 123, "memory_dff": 124, "read": [124, 129, 147, 175, 176, 177, 179, 180, 181, 182], "memory_libmap": 125, "memory_map": 126, "multiport": 126, "memory_memx": 127, "emul": 127, "vlog": 127, "sim": [127, 198], "behavior": 127, "mem": 127, "memory_narrow": 128, "split": [128, 201], "wide": [128, 149], "memory_nordff": 129, "memory_shar": 130, "consolid": [130, 150], "memory_unpack": 131, "unpack": 131, "mutat": 133, "appli": 133, "muxcov": 134, "wider": 134, "muxpack": 135, "pmux": [135, 157, 158], "cascad": 135, "nlutmap": 136, "size": [136, 239], "onehot": 137, "opt": 138, "opt_demorgan": 140, "demorgan": 140, "opt_dff": 141, "rewrit": 142, "opt_ffinv": 143, "push": 143, "through": 143, "opt_lut": 144, "opt_lut_in": 145, "discard": 145, "opt_mem": 146, "opt_mem_feedback": 147, "feedback": 147, "opt_mem_prior": 148, "prioriti": 148, "relat": 148, "can": 148, "never": 148, "collid": 148, "opt_mem_widen": 149, "where": 149, "ar": [149, 262], "ident": 150, "elimin": [151, 171], "dead": [151, 171], "larg": 152, "AND": 152, "OR": 152, "opt_shar": 153, "mutual": 153, "exclus": 153, "same": 153, "share": [153, 194], "paramap": 154, "peepopt": 155, "collect": 155, "peephol": 155, "plugin": 156, "load": [156, 175, 235], "pmux2shiftx": 157, "shiftx": 157, "pmuxtre": 158, "portlist": 159, "top": 159, "prep": 160, "printattr": 161, "proc_arst": 163, "asynchron": 163, "proc_clean": 164, "empti": 164, "proc_dff": 165, "proc_dlatch": 166, "proc_init": 167, "proc_memwr": 168, "proc_mux": 169, "decis": [169, 171], "proc_prun": 170, "redund": 170, "proc_rmdead": 171, "proc_rom": 172, "qbfsat": 173, "2qbf": 173, "qwp": 174, "quadrat": 174, "wirelength": 174, "placer": 174, "hdl": 175, "read_aig": 176, "aiger": [176, 240], "read_blif": 177, "read_ilang": 178, "deprec": [178, 247], "alia": [178, 247], "read_rtlil": [178, 181], "read_json": 179, "read_liberti": 180, "liberti": 180, "read_verilog": [182, 236], "rmport": 184, "scatter": 186, "addit": 186, "net": [186, 201], "scc": 187, "strongli": 187, "compon": 187, "scratchpad": 188, "modifi": 190, "view": 190, "setattr": 191, "unset": [191, 192], "setparam": 192, "setundef": 193, "undef": 193, "defin": [193, 237], "resourc": [194, 260], "enter": 195, "schemat": 196, "graphviz": 196, "shregmap": 197, "shift": [197, 261], "simul": [198, 243], "simplemap": 199, "coars": 199, "grain": 199, "splice": 200, "splitnet": 201, "bit": [201, 205], "sta": 202, "time": 202, "stat": 203, "some": 203, "statist": 203, "submod": 204, "submodul": 204, "supercov": 205, "each": 205, "synth": 206, "synth_achronix": 207, "acrhonix": 207, "speedster22i": 207, "fpga": [207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "synth_anlog": 208, "synth_coolrunner2": 209, "xilinx": [209, 223, 259, 260, 261], "cpld": 209, "synth_eas": 210, "easic": 210, "platform": 210, "synth_ecp5": 211, "synth_efinix": 212, "synth_gatem": 213, "cologn": 213, "chip": 213, "synth_gowin": 214, "gowin": 214, "synth_greenpak4": 215, "synth_ice40": 216, "synth_intel": 217, "intel": [217, 218], "altera": [217, 218], "synth_intel_alm": 218, "alm": 218, "synth_machxo2": 219, "machxo2": 219, "experiment": 219, "synth_nexu": 220, "lattic": 220, "nexu": 220, "synth_quicklog": 221, "quicklog": 221, "synth_sf2": 222, "smartfusion2": 222, "igloo2": 222, "synth_xilinx": 223, "tcl": 224, "techmap": 225, "mapper": 225, "tee": 226, "redirect": [226, 232], "test_abcloop": 227, "test": [227, 228, 229, 230], "test_autotb": 228, "bench": 228, "test_cel": 229, "test_pmgen": 230, "pmgen": 230, "torder": 231, "order": 231, "trace": 232, "tribuf": 233, "infer": 233, "tri": 233, "uniquifi": 234, "uniqu": 234, "vhdl": 235, "verilog_default": 236, "default": 236, "option": 236, "verilog_defin": 237, "undefin": 237, "wbflip": 238, "whitebox": 238, "wreduc": 239, "reduc": 239, "word": 239, "possibl": 239, "write_aig": 240, "write_blif": 241, "write_btor": 242, "write_cxxrtl": 243, "c": [243, 252], "write_edif": 244, "edif": 244, "write_fil": 245, "write_firrtl": 246, "firrtl": 246, "write_ilang": 247, "write_rtlil": [247, 251], "write_intersynth": 248, "intersynth": 248, "write_jni": 249, "write_json": 250, "write_simplec": 252, "write_smt2": 253, "smt": 253, "libv2": 253, "write_smv": 254, "smv": 254, "write_spic": 255, "spice": 255, "write_t": 256, "tabl": 256, "write_verilog": 257, "write_xaig": 258, "xaiger": 258, "xilinx_dffopt": 259, "usag": 259, "xilinx_dsp": 260, "dsp": 260, "xilinx_srl": 261, "zinit": 262, "so": 262, "line": 263, "manual": 264, "appendix": 264}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"Approach": [[0, "approach"]], "Data- and control-flow": [[0, "data-and-control-flow"]], "Internal formats in Yosys": [[0, "internal-formats-in-yosys"]], "Typical use case": [[0, "typical-use-case"]], "Basic principles": [[1, "basic-principles"]], "Levels of abstraction": [[1, "levels-of-abstraction"]], "System level": [[1, "system-level"]], "High level": [[1, "high-level"]], "Behavioural level": [[1, "behavioural-level"]], "Register-Transfer Level (RTL)": [[1, "register-transfer-level-rtl"]], "Logical gate level": [[1, "logical-gate-level"]], "Physical gate level": [[1, "physical-gate-level"]], "Switch level": [[1, "switch-level"]], "Yosys": [[1, "yosys"]], "Features of synthesizable Verilog": [[1, "features-of-synthesizable-verilog"]], "Structural Verilog": [[1, "structural-verilog"]], "Expressions in Verilog": [[1, "expressions-in-verilog"]], "Behavioural modelling": [[1, "behavioural-modelling"]], "Functions and tasks": [[1, "functions-and-tasks"]], "Conditionals, loops and generate-statements": [[1, "conditionals-loops-and-generate-statements"]], "Arrays and memories": [[1, "arrays-and-memories"]], "Challenges in digital circuit synthesis": [[1, "challenges-in-digital-circuit-synthesis"]], "Standards compliance": [[1, "standards-compliance"]], "Optimizations": [[1, "optimizations"], [4, "optimizations"]], "Technology mapping": [[1, "technology-mapping"], [7, "technology-mapping"]], "Script-based synthesis flows": [[1, "script-based-synthesis-flows"]], "Methods from compiler design": [[1, "methods-from-compiler-design"]], "Lexing and parsing": [[1, "lexing-and-parsing"]], "Exemplary token list for the statement assign foo = bar + 42;": [[1, "tab-basics-tokens"]], "Multi-pass compilation": [[1, "multi-pass-compilation"]], "Static Single Assignment (SSA) form": [[1, "static-single-assignment-ssa-form"]], "Internal cell library": [[2, "internal-cell-library"]], "RTL cells": [[2, "rtl-cells"]], "Unary operators": [[2, "unary-operators"]], "Cell types for unary operators with their corresponding Verilog expressions.": [[2, "tab-celllib-unary"]], "Binary operators": [[2, "binary-operators"]], "Cell types for binary operators with their corresponding Verilog expressions.": [[2, "tab-celllib-binary"]], "Comparison between different rounding modes for division and modulo cells.": [[2, "tab-celllib-divmod"]], "Multiplexers": [[2, "multiplexers"]], "Registers": [[2, "registers"]], "Memories": [[2, "memories"], [14, "memories"]], "Finite state machines": [[2, "finite-state-machines"]], "Specify rules": [[2, "specify-rules"]], "Formal verification cells": [[2, "formal-verification-cells"]], "Gates": [[2, "gates"]], "Cell types for gate level logic networks (main list)": [[2, "tab-celllib-gates"]], "Cell types for gate level logic networks (FFs with reset)": [[2, "tab-celllib-gates-adff"]], "Cell types for gate level logic networks (FFs with enable)": [[2, "tab-celllib-gates-dffe"]], "Cell types for gate level logic networks (FFs with reset and enable)": [[2, "tab-celllib-gates-adffe"]], "Cell types for gate level logic networks (FFs with set and reset)": [[2, "tab-celllib-gates-dffsr"]], "Cell types for gate level logic networks (FFs with set and reset and enable)": [[2, "tab-celllib-gates-dffsre"]], "Cell types for gate level logic networks (latches with reset)": [[2, "tab-celllib-gates-adlatch"]], "Cell types for gate level logic networks (latches with set and reset)": [[2, "tab-celllib-gates-dlatchsr"]], "Cell types for gate level logic networks (SR latches)": [[2, "tab-celllib-gates-sr"]], "Introduction": [[3, "introduction"]], "History of Yosys": [[3, "history-of-yosys"]], "Structure of this document": [[3, "structure-of-this-document"]], "Simple optimizations": [[4, "simple-optimizations"]], "The opt_expr pass": [[4, "the-opt-expr-pass"]], "Const folding rules for $_AND_ cells as used in opt_expr.": [[4, "tab-opt-expr-and"]], "The opt_muxtree pass": [[4, "the-opt-muxtree-pass"]], "The opt_reduce pass": [[4, "the-opt-reduce-pass"]], "The opt_rmdff pass": [[4, "the-opt-rmdff-pass"]], "The opt_clean pass": [[4, "the-opt-clean-pass"]], "The opt_merge pass": [[4, "the-opt-merge-pass"]], "FSM extraction and encoding": [[4, "fsm-extraction-and-encoding"]], "FSM detection": [[4, "fsm-detection"]], "FSM extraction": [[4, "fsm-extraction"]], "FSM optimization": [[4, "fsm-optimization"]], "FSM recoding": [[4, "fsm-recoding"]], "Logic optimization": [[4, "logic-optimization"]], "Implementation overview": [[5, "implementation-overview"]], "Simplified data flow": [[5, "simplified-data-flow"]], "The RTL Intermediate Language (RTLIL)": [[5, "the-rtl-intermediate-language-rtlil"]], "RTLIL identifiers": [[5, "rtlil-identifiers"]], "RTLIL::Design and RTLIL::Module": [[5, "rtlil-design-and-rtlil-module"]], "RTLIL::Cell and RTLIL::Wire": [[5, "rtlil-cell-and-rtlil-wire"]], "RTLIL::SigSpec": [[5, "rtlil-sigspec"]], "RTLIL::Process": [[5, "rtlil-process"]], "RTLIL::Memory": [[5, "rtlil-memory"]], "Command interface and synthesis scripts": [[5, "command-interface-and-synthesis-scripts"]], "Source tree and build system": [[5, "source-tree-and-build-system"]], "Programming Yosys extensions": [[6, "programming-yosys-extensions"]], "Guidelines": [[6, "guidelines"]], "The \u201cstubsnets\u201d example module": [[6, "the-stubsnets-example-module"]], "Cell substitution": [[7, "cell-substitution"]], "Subcircuit substitution": [[7, "subcircuit-substitution"]], "Gate-level technology mapping": [[7, "gate-level-technology-mapping"]], "The Verilog and AST frontends": [[8, "the-verilog-and-ast-frontends"]], "Transforming Verilog to AST": [[8, "transforming-verilog-to-ast"]], "The Verilog preprocessor": [[8, "the-verilog-preprocessor"]], "The Verilog lexer": [[8, "the-verilog-lexer"]], "The Verilog parser": [[8, "the-verilog-parser"]], "AST node types with their corresponding Verilog constructs.": [[8, "tab-verilog-astnodetype"]], "Transforming AST to RTLIL": [[8, "transforming-ast-to-rtlil"]], "AST simplification": [[8, "ast-simplification"]], "Generating RTLIL": [[8, "generating-rtlil"]], "Synthesizing Verilog always blocks": [[8, "synthesizing-verilog-always-blocks"]], "The ProcessGenerator algorithm": [[8, "the-processgenerator-algorithm"]], "Handling of nonblocking assignments": [[8, "handling-of-nonblocking-assignments"]], "Handling of blocking assignments": [[8, "handling-of-blocking-assignments"]], "Handling of cases and if-statements": [[8, "handling-of-cases-and-if-statements"]], "Further analysis of the algorithm for cases and if-statements": [[8, "further-analysis-of-the-algorithm-for-cases-and-if-statements"]], "The proc pass": [[8, "the-proc-pass"]], "Synthesizing Verilog arrays": [[8, "synthesizing-verilog-arrays"]], "Synthesizing parametric designs": [[8, "synthesizing-parametric-designs"]], "010: Converting Verilog to BLIF page": [[9, "converting-verilog-to-blif-page"]], "Installation": [[9, "installation"], [11, "installation"]], "Getting started": [[9, "getting-started"]], "Using a synthesis script": [[9, "using-a-synthesis-script"]], "Advanced example: The Amber23 ARMv2a CPU": [[9, "advanced-example-the-amber23-armv2a-cpu"]], "Verification of the Amber23 CPU": [[9, "verification-of-the-amber23-cpu"]], "Limitations": [[9, "limitations"], [11, "limitations"]], "Conclusion": [[9, "conclusion"], [10, "conclusion"], [11, "conclusion"]], "011: Interactive design investigation page": [[10, "interactive-design-investigation-page"]], "Installation and prerequisites": [[10, "installation-and-prerequisites"]], "Overview": [[10, "overview"]], "Introduction to the show command": [[10, "introduction-to-the-show-command"]], "A simple circuit": [[10, "a-simple-circuit"]], "Break-out boxes for signal vectors": [[10, "break-out-boxes-for-signal-vectors"]], "Gate level netlists": [[10, "gate-level-netlists"]], "Miscellaneous notes": [[10, "miscellaneous-notes"]], "Navigating the design": [[10, "navigating-the-design"]], "Interactive navigation": [[10, "interactive-navigation"]], "Working with selections": [[10, "working-with-selections"]], "Operations on selections": [[10, "operations-on-selections"]], "Selecting logic cones": [[10, "selecting-logic-cones"]], "Storing and recalling selections": [[10, "storing-and-recalling-selections"]], "Advanced investigation techniques": [[10, "advanced-investigation-techniques"]], "Evaluation of combinatorial circuits": [[10, "evaluation-of-combinatorial-circuits"]], "Solving combinatorial SAT problems": [[10, "solving-combinatorial-sat-problems"]], "Solving sequential SAT problems": [[10, "solving-sequential-sat-problems"]], "012: Converting Verilog to BTOR page": [[11, "converting-verilog-to-btor-page"]], "Quick start": [[11, "quick-start"]], "Detailed flow": [[11, "detailed-flow"]], "Example": [[11, "example"]], "Auxiliary libraries": [[12, "auxiliary-libraries"]], "SHA1": [[12, "sha1"]], "BigInt": [[12, "bigint"]], "SubCircuit": [[12, "subcircuit"]], "ezSAT": [[12, "ezsat"]], "Auxiliary programs": [[13, "auxiliary-programs"]], "yosys-config": [[13, "yosys-config"]], "yosys-filterlib": [[13, "yosys-filterlib"]], "yosys-abc": [[13, "yosys-abc"]], "RTLIL text representation": [[14, "rtlil-text-representation"]], "Lexical elements": [[14, "lexical-elements"]], "Characters": [[14, "characters"]], "Identifiers": [[14, "identifiers"]], "Values": [[14, "values"]], "Strings": [[14, "strings"]], "Comments": [[14, "comments"]], "File": [[14, "file"]], "Autoindex statements": [[14, "autoindex-statements"]], "Modules": [[14, "modules"]], "Attribute statements": [[14, "attribute-statements"]], "Signal specifications": [[14, "signal-specifications"]], "Connections": [[14, "connections"]], "Wires": [[14, "wires"]], "Cells": [[14, "cells"]], "Processes": [[14, "processes"]], "Switches": [[14, "switches"]], "Syncs": [[14, "syncs"]], "Literature references": [[15, "literature-references"]], "abc - use ABC for technology mapping": [[16, "abc-use-abc-for-technology-mapping"]], "yosys> help abc": [[16, "yosys-help-abc"]], "abc9 - use ABC9 for technology mapping": [[17, "abc9-use-abc9-for-technology-mapping"]], "yosys> help abc9": [[17, "yosys-help-abc9"]], "abc9_exe - use ABC9 for technology mapping": [[18, "abc9-exe-use-abc9-for-technology-mapping"]], "yosys> help abc9_exe": [[18, "yosys-help-abc9-exe"]], "abc9_ops - helper functions for ABC9": [[19, "abc9-ops-helper-functions-for-abc9"]], "yosys> help abc9_ops": [[19, "yosys-help-abc9-ops"]], "add - add objects to the design": [[20, "add-add-objects-to-the-design"]], "yosys> help add": [[20, "yosys-help-add"]], "aigmap - map logic to and-inverter-graph circuit": [[21, "aigmap-map-logic-to-and-inverter-graph-circuit"]], "yosys> help aigmap": [[21, "yosys-help-aigmap"]], "alumacc - extract ALU and MACC cells": [[22, "alumacc-extract-alu-and-macc-cells"]], "yosys> help alumacc": [[22, "yosys-help-alumacc"]], "anlogic_eqn - Anlogic: Calculate equations for luts": [[23, "anlogic-eqn-anlogic-calculate-equations-for-luts"]], "yosys> help anlogic_eqn": [[23, "yosys-help-anlogic-eqn"]], "anlogic_fixcarry - Anlogic: fix carry chain": [[24, "anlogic-fixcarry-anlogic-fix-carry-chain"]], "yosys> help anlogic_fixcarry": [[24, "yosys-help-anlogic-fixcarry"]], "assertpmux - adds asserts for parallel muxes": [[25, "assertpmux-adds-asserts-for-parallel-muxes"]], "yosys> help assertpmux": [[25, "yosys-help-assertpmux"]], "async2sync - convert async FF inputs to sync circuits": [[26, "async2sync-convert-async-ff-inputs-to-sync-circuits"]], "yosys> help async2sync": [[26, "yosys-help-async2sync"]], "attrmap - renaming attributes": [[27, "attrmap-renaming-attributes"]], "yosys> help attrmap": [[27, "yosys-help-attrmap"]], "attrmvcp - move or copy attributes from wires to driving cells": [[28, "attrmvcp-move-or-copy-attributes-from-wires-to-driving-cells"]], "yosys> help attrmvcp": [[28, "yosys-help-attrmvcp"]], "autoname - automatically assign names to objects": [[29, "autoname-automatically-assign-names-to-objects"]], "yosys> help autoname": [[29, "yosys-help-autoname"]], "blackbox - convert modules into blackbox modules": [[30, "blackbox-convert-modules-into-blackbox-modules"]], "yosys> help blackbox": [[30, "yosys-help-blackbox"]], "bmuxmap - transform $bmux cells to trees of $mux cells": [[31, "bmuxmap-transform-bmux-cells-to-trees-of-mux-cells"]], "yosys> help bmuxmap": [[31, "yosys-help-bmuxmap"]], "bugpoint - minimize testcases": [[32, "bugpoint-minimize-testcases"]], "yosys> help bugpoint": [[32, "yosys-help-bugpoint"]], "cd - a shortcut for \u2018select -module <name>\u2019": [[33, "cd-a-shortcut-for-select-module-name"]], "yosys> help cd": [[33, "yosys-help-cd"]], "check - check for obvious problems in the design": [[34, "check-check-for-obvious-problems-in-the-design"]], "yosys> help check": [[34, "yosys-help-check"]], "chformal - change formal constraints of the design": [[35, "chformal-change-formal-constraints-of-the-design"]], "yosys> help chformal": [[35, "yosys-help-chformal"]], "chparam - re-evaluate modules with new parameters": [[36, "chparam-re-evaluate-modules-with-new-parameters"]], "yosys> help chparam": [[36, "yosys-help-chparam"]], "chtype - change type of cells in the design": [[37, "chtype-change-type-of-cells-in-the-design"]], "yosys> help chtype": [[37, "yosys-help-chtype"]], "clean - remove unused cells and wires": [[38, "clean-remove-unused-cells-and-wires"]], "yosys> help clean": [[38, "yosys-help-clean"]], "clean_zerowidth - clean zero-width connections from the design": [[39, "clean-zerowidth-clean-zero-width-connections-from-the-design"]], "yosys> help clean_zerowidth": [[39, "yosys-help-clean-zerowidth"]], "clk2fflogic - convert clocked FFs to generic $ff cells": [[40, "clk2fflogic-convert-clocked-ffs-to-generic-ff-cells"]], "yosys> help clk2fflogic": [[40, "yosys-help-clk2fflogic"]], "clkbufmap - insert clock buffers on clock networks": [[41, "clkbufmap-insert-clock-buffers-on-clock-networks"]], "yosys> help clkbufmap": [[41, "yosys-help-clkbufmap"]], "connect - create or remove connections": [[42, "connect-create-or-remove-connections"]], "yosys> help connect": [[42, "yosys-help-connect"]], "connect_rpc - connect to RPC frontend": [[43, "connect-rpc-connect-to-rpc-frontend"]], "yosys> help connect_rpc": [[43, "yosys-help-connect-rpc"]], "connwrappers - match width of input-output port pairs": [[44, "connwrappers-match-width-of-input-output-port-pairs"]], "yosys> help connwrappers": [[44, "yosys-help-connwrappers"]], "coolrunner2_fixup - insert necessary buffer cells for CoolRunner-II architecture": [[45, "coolrunner2-fixup-insert-necessary-buffer-cells-for-coolrunner-ii-architecture"]], "yosys> help coolrunner2_fixup": [[45, "yosys-help-coolrunner2-fixup"]], "coolrunner2_sop - break $sop cells into ANDTERM/ORTERM cells": [[46, "coolrunner2-sop-break-sop-cells-into-andterm-orterm-cells"]], "yosys> help coolrunner2_sop": [[46, "yosys-help-coolrunner2-sop"]], "copy - copy modules in the design": [[47, "copy-copy-modules-in-the-design"]], "yosys> help copy": [[47, "yosys-help-copy"]], "cover - print code coverage counters": [[48, "cover-print-code-coverage-counters"]], "yosys> help cover": [[48, "yosys-help-cover"]], "cutpoint - adds formal cut points to the design": [[49, "cutpoint-adds-formal-cut-points-to-the-design"]], "yosys> help cutpoint": [[49, "yosys-help-cutpoint"]], "debug - run command with debug log messages enabled": [[50, "debug-run-command-with-debug-log-messages-enabled"]], "yosys> help debug": [[50, "yosys-help-debug"]], "delete - delete objects in the design": [[51, "delete-delete-objects-in-the-design"]], "yosys> help delete": [[51, "yosys-help-delete"]], "deminout - demote inout ports to input or output": [[52, "deminout-demote-inout-ports-to-input-or-output"]], "yosys> help deminout": [[52, "yosys-help-deminout"]], "demuxmap - transform $demux cells to $eq + $mux cells": [[53, "demuxmap-transform-demux-cells-to-eq-mux-cells"]], "yosys> help demuxmap": [[53, "yosys-help-demuxmap"]], "design - save, restore and reset current design": [[54, "design-save-restore-and-reset-current-design"]], "yosys> help design": [[54, "yosys-help-design"]], "dffinit - set INIT param on FF cells": [[55, "dffinit-set-init-param-on-ff-cells"]], "yosys> help dffinit": [[55, "yosys-help-dffinit"]], "dfflegalize - convert FFs to types supported by the target": [[56, "dfflegalize-convert-ffs-to-types-supported-by-the-target"]], "yosys> help dfflegalize": [[56, "yosys-help-dfflegalize"]], "dfflibmap - technology mapping of flip-flops": [[57, "dfflibmap-technology-mapping-of-flip-flops"]], "yosys> help dfflibmap": [[57, "yosys-help-dfflibmap"]], "dffunmap - unmap clock enable and synchronous reset from FFs": [[58, "dffunmap-unmap-clock-enable-and-synchronous-reset-from-ffs"]], "yosys> help dffunmap": [[58, "yosys-help-dffunmap"]], "dump - print parts of the design in RTLIL format": [[59, "dump-print-parts-of-the-design-in-rtlil-format"]], "yosys> help dump": [[59, "yosys-help-dump"]], "echo - turning echoing back of commands on and off": [[60, "echo-turning-echoing-back-of-commands-on-and-off"]], "yosys> help echo": [[60, "yosys-help-echo"]], "ecp5_gsr - ECP5: handle GSR": [[61, "ecp5-gsr-ecp5-handle-gsr"]], "yosys> help ecp5_gsr": [[61, "yosys-help-ecp5-gsr"]], "edgetypes - list all types of edges in selection": [[62, "edgetypes-list-all-types-of-edges-in-selection"]], "yosys> help edgetypes": [[62, "yosys-help-edgetypes"]], "efinix_fixcarry - Efinix: fix carry chain": [[63, "efinix-fixcarry-efinix-fix-carry-chain"]], "yosys> help efinix_fixcarry": [[63, "yosys-help-efinix-fixcarry"]], "equiv_add - add a $equiv cell": [[64, "equiv-add-add-a-equiv-cell"]], "yosys> help equiv_add": [[64, "yosys-help-equiv-add"]], "equiv_induct - proving $equiv cells using temporal induction": [[65, "equiv-induct-proving-equiv-cells-using-temporal-induction"]], "yosys> help equiv_induct": [[65, "yosys-help-equiv-induct"]], "equiv_make - prepare a circuit for equivalence checking": [[66, "equiv-make-prepare-a-circuit-for-equivalence-checking"]], "yosys> help equiv_make": [[66, "yosys-help-equiv-make"]], "equiv_mark - mark equivalence checking regions": [[67, "equiv-mark-mark-equivalence-checking-regions"]], "yosys> help equiv_mark": [[67, "yosys-help-equiv-mark"]], "equiv_miter - extract miter from equiv circuit": [[68, "equiv-miter-extract-miter-from-equiv-circuit"]], "yosys> help equiv_miter": [[68, "yosys-help-equiv-miter"]], "equiv_opt - prove equivalence for optimized circuit": [[69, "equiv-opt-prove-equivalence-for-optimized-circuit"]], "yosys> help equiv_opt": [[69, "yosys-help-equiv-opt"]], "equiv_purge - purge equivalence checking module": [[70, "equiv-purge-purge-equivalence-checking-module"]], "yosys> help equiv_purge": [[70, "yosys-help-equiv-purge"]], "equiv_remove - remove $equiv cells": [[71, "equiv-remove-remove-equiv-cells"]], "yosys> help equiv_remove": [[71, "yosys-help-equiv-remove"]], "equiv_simple - try proving simple $equiv instances": [[72, "equiv-simple-try-proving-simple-equiv-instances"]], "yosys> help equiv_simple": [[72, "yosys-help-equiv-simple"]], "equiv_status - print status of equivalent checking module": [[73, "equiv-status-print-status-of-equivalent-checking-module"]], "yosys> help equiv_status": [[73, "yosys-help-equiv-status"]], "equiv_struct - structural equivalence checking": [[74, "equiv-struct-structural-equivalence-checking"]], "yosys> help equiv_struct": [[74, "yosys-help-equiv-struct"]], "eval - evaluate the circuit given an input": [[75, "eval-evaluate-the-circuit-given-an-input"]], "yosys> help eval": [[75, "yosys-help-eval"]], "exec - execute commands in the operating system shell": [[76, "exec-execute-commands-in-the-operating-system-shell"]], "yosys> help exec": [[76, "yosys-help-exec"]], "expose - convert internal signals to module ports": [[77, "expose-convert-internal-signals-to-module-ports"]], "yosys> help expose": [[77, "yosys-help-expose"]], "extract - find subcircuits and replace them with cells": [[78, "extract-find-subcircuits-and-replace-them-with-cells"]], "yosys> help extract": [[78, "yosys-help-extract"]], "extract_counter - Extract GreenPak4 counter cells": [[79, "extract-counter-extract-greenpak4-counter-cells"]], "yosys> help extract_counter": [[79, "yosys-help-extract-counter"]], "extract_fa - find and extract full/half adders": [[80, "extract-fa-find-and-extract-full-half-adders"]], "yosys> help extract_fa": [[80, "yosys-help-extract-fa"]], "extract_reduce - converts gate chains into $reduce_* cells": [[81, "extract-reduce-converts-gate-chains-into-reduce-cells"]], "yosys> help extract_reduce": [[81, "yosys-help-extract-reduce"]], "extractinv - extract explicit inverter cells for invertible cell pins": [[82, "extractinv-extract-explicit-inverter-cells-for-invertible-cell-pins"]], "yosys> help extractinv": [[82, "yosys-help-extractinv"]], "flatten - flatten design": [[83, "flatten-flatten-design"]], "yosys> help flatten": [[83, "yosys-help-flatten"]], "flowmap - pack LUTs with FlowMap": [[84, "flowmap-pack-luts-with-flowmap"]], "yosys> help flowmap": [[84, "yosys-help-flowmap"]], "fmcombine - combine two instances of a cell into one": [[85, "fmcombine-combine-two-instances-of-a-cell-into-one"]], "yosys> help fmcombine": [[85, "yosys-help-fmcombine"]], "fminit - set init values/sequences for formal": [[86, "fminit-set-init-values-sequences-for-formal"]], "yosys> help fminit": [[86, "yosys-help-fminit"]], "formalff - prepare FFs for formal": [[87, "formalff-prepare-ffs-for-formal"]], "yosys> help formalff": [[87, "yosys-help-formalff"]], "freduce - perform functional reduction": [[88, "freduce-perform-functional-reduction"]], "yosys> help freduce": [[88, "yosys-help-freduce"]], "fsm - extract and optimize finite state machines": [[89, "fsm-extract-and-optimize-finite-state-machines"]], "yosys> help fsm": [[89, "yosys-help-fsm"]], "fsm_detect - finding FSMs in design": [[90, "fsm-detect-finding-fsms-in-design"]], "yosys> help fsm_detect": [[90, "yosys-help-fsm-detect"]], "fsm_expand - expand FSM cells by merging logic into it": [[91, "fsm-expand-expand-fsm-cells-by-merging-logic-into-it"]], "yosys> help fsm_expand": [[91, "yosys-help-fsm-expand"]], "fsm_export - exporting FSMs to KISS2 files": [[92, "fsm-export-exporting-fsms-to-kiss2-files"]], "yosys> help fsm_export": [[92, "yosys-help-fsm-export"]], "fsm_extract - extracting FSMs in design": [[93, "fsm-extract-extracting-fsms-in-design"]], "yosys> help fsm_extract": [[93, "yosys-help-fsm-extract"]], "fsm_info - print information on finite state machines": [[94, "fsm-info-print-information-on-finite-state-machines"]], "yosys> help fsm_info": [[94, "yosys-help-fsm-info"]], "fsm_map - mapping FSMs to basic logic": [[95, "fsm-map-mapping-fsms-to-basic-logic"]], "yosys> help fsm_map": [[95, "yosys-help-fsm-map"]], "fsm_opt - optimize finite state machines": [[96, "fsm-opt-optimize-finite-state-machines"]], "yosys> help fsm_opt": [[96, "yosys-help-fsm-opt"]], "fsm_recode - recoding finite state machines": [[97, "fsm-recode-recoding-finite-state-machines"]], "yosys> help fsm_recode": [[97, "yosys-help-fsm-recode"]], "fst2tb - generate testbench out of fst file": [[98, "fst2tb-generate-testbench-out-of-fst-file"]], "yosys> help fst2tb": [[98, "yosys-help-fst2tb"]], "gatemate_foldinv - fold inverters into Gatemate LUT trees": [[99, "gatemate-foldinv-fold-inverters-into-gatemate-lut-trees"]], "yosys> help gatemate_foldinv": [[99, "yosys-help-gatemate-foldinv"]], "glift - create GLIFT models and optimization problems": [[100, "glift-create-glift-models-and-optimization-problems"]], "yosys> help glift": [[100, "yosys-help-glift"]], "greenpak4_dffinv - merge greenpak4 inverters and DFF/latches": [[101, "greenpak4-dffinv-merge-greenpak4-inverters-and-dff-latches"]], "yosys> help greenpak4_dffinv": [[101, "yosys-help-greenpak4-dffinv"]], "help - display help messages": [[102, "help-display-help-messages"]], "yosys> help help": [[102, "yosys-help-help"]], "hierarchy - check, expand and clean up design hierarchy": [[103, "hierarchy-check-expand-and-clean-up-design-hierarchy"]], "yosys> help hierarchy": [[103, "yosys-help-hierarchy"]], "hilomap - technology mapping of constant hi- and/or lo-drivers": [[104, "hilomap-technology-mapping-of-constant-hi-and-or-lo-drivers"]], "yosys> help hilomap": [[104, "yosys-help-hilomap"]], "history - show last interactive commands": [[105, "history-show-last-interactive-commands"]], "yosys> help history": [[105, "yosys-help-history"]], "ice40_braminit - iCE40: perform SB_RAM40_4K initialization from file": [[106, "ice40-braminit-ice40-perform-sb-ram40-4k-initialization-from-file"]], "yosys> help ice40_braminit": [[106, "yosys-help-ice40-braminit"]], "ice40_dsp - iCE40: map multipliers": [[107, "ice40-dsp-ice40-map-multipliers"]], "yosys> help ice40_dsp": [[107, "yosys-help-ice40-dsp"]], "ice40_opt - iCE40: perform simple optimizations": [[108, "ice40-opt-ice40-perform-simple-optimizations"]], "yosys> help ice40_opt": [[108, "yosys-help-ice40-opt"]], "ice40_wrapcarry - iCE40: wrap carries": [[109, "ice40-wrapcarry-ice40-wrap-carries"]], "yosys> help ice40_wrapcarry": [[109, "yosys-help-ice40-wrapcarry"]], "insbuf - insert buffer cells for connected wires": [[110, "insbuf-insert-buffer-cells-for-connected-wires"]], "yosys> help insbuf": [[110, "yosys-help-insbuf"]], "iopadmap - technology mapping of i/o pads (or buffers)": [[111, "iopadmap-technology-mapping-of-i-o-pads-or-buffers"]], "yosys> help iopadmap": [[111, "yosys-help-iopadmap"]], "jny - write design and metadata": [[112, "jny-write-design-and-metadata"]], "yosys> help jny": [[112, "yosys-help-jny"]], "json - write design in JSON format": [[113, "json-write-design-in-json-format"]], "yosys> help json": [[113, "yosys-help-json"]], "log - print text and log files": [[114, "log-print-text-and-log-files"]], "yosys> help log": [[114, "yosys-help-log"]], "logger - set logger properties": [[115, "logger-set-logger-properties"]], "yosys> help logger": [[115, "yosys-help-logger"]], "ls - list modules or objects in modules": [[116, "ls-list-modules-or-objects-in-modules"]], "yosys> help ls": [[116, "yosys-help-ls"]], "ltp - print longest topological path": [[117, "ltp-print-longest-topological-path"]], "yosys> help ltp": [[117, "yosys-help-ltp"]], "lut2mux - convert $lut to $_MUX_": [[118, "lut2mux-convert-lut-to-mux"]], "yosys> help lut2mux": [[118, "yosys-help-lut2mux"]], "maccmap - mapping macc cells": [[119, "maccmap-mapping-macc-cells"]], "yosys> help maccmap": [[119, "yosys-help-maccmap"]], "memory - translate memories to basic cells": [[120, "memory-translate-memories-to-basic-cells"]], "yosys> help memory": [[120, "yosys-help-memory"]], "memory_bmux2rom - convert muxes to ROMs": [[121, "memory-bmux2rom-convert-muxes-to-roms"]], "yosys> help memory_bmux2rom": [[121, "yosys-help-memory-bmux2rom"]], "memory_bram - map memories to block rams": [[122, "memory-bram-map-memories-to-block-rams"]], "yosys> help memory_bram": [[122, "yosys-help-memory-bram"]], "memory_collect - creating multi-port memory cells": [[123, "memory-collect-creating-multi-port-memory-cells"]], "yosys> help memory_collect": [[123, "yosys-help-memory-collect"]], "memory_dff - merge input/output DFFs into memory read ports": [[124, "memory-dff-merge-input-output-dffs-into-memory-read-ports"]], "yosys> help memory_dff": [[124, "yosys-help-memory-dff"]], "memory_libmap - map memories to cells": [[125, "memory-libmap-map-memories-to-cells"]], "yosys> help memory_libmap": [[125, "yosys-help-memory-libmap"]], "memory_map - translate multiport memories to basic cells": [[126, "memory-map-translate-multiport-memories-to-basic-cells"]], "yosys> help memory_map": [[126, "yosys-help-memory-map"]], "memory_memx - emulate vlog sim behavior for mem ports": [[127, "memory-memx-emulate-vlog-sim-behavior-for-mem-ports"]], "yosys> help memory_memx": [[127, "yosys-help-memory-memx"]], "memory_narrow - split up wide memory ports": [[128, "memory-narrow-split-up-wide-memory-ports"]], "yosys> help memory_narrow": [[128, "yosys-help-memory-narrow"]], "memory_nordff - extract read port FFs from memories": [[129, "memory-nordff-extract-read-port-ffs-from-memories"]], "yosys> help memory_nordff": [[129, "yosys-help-memory-nordff"]], "memory_share - consolidate memory ports": [[130, "memory-share-consolidate-memory-ports"]], "yosys> help memory_share": [[130, "yosys-help-memory-share"]], "memory_unpack - unpack multi-port memory cells": [[131, "memory-unpack-unpack-multi-port-memory-cells"]], "yosys> help memory_unpack": [[131, "yosys-help-memory-unpack"]], "miter - automatically create a miter circuit": [[132, "miter-automatically-create-a-miter-circuit"]], "yosys> help miter": [[132, "yosys-help-miter"]], "mutate - generate or apply design mutations": [[133, "mutate-generate-or-apply-design-mutations"]], "yosys> help mutate": [[133, "yosys-help-mutate"]], "muxcover - cover trees of MUX cells with wider MUXes": [[134, "muxcover-cover-trees-of-mux-cells-with-wider-muxes"]], "yosys> help muxcover": [[134, "yosys-help-muxcover"]], "muxpack - $mux/$pmux cascades to $pmux": [[135, "muxpack-mux-pmux-cascades-to-pmux"]], "yosys> help muxpack": [[135, "yosys-help-muxpack"]], "nlutmap - map to LUTs of different sizes": [[136, "nlutmap-map-to-luts-of-different-sizes"]], "yosys> help nlutmap": [[136, "yosys-help-nlutmap"]], "onehot - optimize $eq cells for onehot signals": [[137, "onehot-optimize-eq-cells-for-onehot-signals"]], "yosys> help onehot": [[137, "yosys-help-onehot"]], "opt - perform simple optimizations": [[138, "opt-perform-simple-optimizations"]], "yosys> help opt": [[138, "yosys-help-opt"]], "opt_clean - remove unused cells and wires": [[139, "opt-clean-remove-unused-cells-and-wires"]], "yosys> help opt_clean": [[139, "yosys-help-opt-clean"]], "opt_demorgan - Optimize reductions with DeMorgan equivalents": [[140, "opt-demorgan-optimize-reductions-with-demorgan-equivalents"]], "yosys> help opt_demorgan": [[140, "yosys-help-opt-demorgan"]], "opt_dff - perform DFF optimizations": [[141, "opt-dff-perform-dff-optimizations"]], "yosys> help opt_dff": [[141, "yosys-help-opt-dff"]], "opt_expr - perform const folding and simple expression rewriting": [[142, "opt-expr-perform-const-folding-and-simple-expression-rewriting"]], "yosys> help opt_expr": [[142, "yosys-help-opt-expr"]], "opt_ffinv - push inverters through FFs": [[143, "opt-ffinv-push-inverters-through-ffs"]], "yosys> help opt_ffinv": [[143, "yosys-help-opt-ffinv"]], "opt_lut - optimize LUT cells": [[144, "opt-lut-optimize-lut-cells"]], "yosys> help opt_lut": [[144, "yosys-help-opt-lut"]], "opt_lut_ins - discard unused LUT inputs": [[145, "opt-lut-ins-discard-unused-lut-inputs"]], "yosys> help opt_lut_ins": [[145, "yosys-help-opt-lut-ins"]], "opt_mem - optimize memories": [[146, "opt-mem-optimize-memories"]], "yosys> help opt_mem": [[146, "yosys-help-opt-mem"]], "opt_mem_feedback - convert memory read-to-write port feedback paths to write enables": [[147, "opt-mem-feedback-convert-memory-read-to-write-port-feedback-paths-to-write-enables"]], "yosys> help opt_mem_feedback": [[147, "yosys-help-opt-mem-feedback"]], "opt_mem_priority - remove priority relations between write ports that can never collide": [[148, "opt-mem-priority-remove-priority-relations-between-write-ports-that-can-never-collide"]], "yosys> help opt_mem_priority": [[148, "yosys-help-opt-mem-priority"]], "opt_mem_widen - optimize memories where all ports are wide": [[149, "opt-mem-widen-optimize-memories-where-all-ports-are-wide"]], "yosys> help opt_mem_widen": [[149, "yosys-help-opt-mem-widen"]], "opt_merge - consolidate identical cells": [[150, "opt-merge-consolidate-identical-cells"]], "yosys> help opt_merge": [[150, "yosys-help-opt-merge"]], "opt_muxtree - eliminate dead trees in multiplexer trees": [[151, "opt-muxtree-eliminate-dead-trees-in-multiplexer-trees"]], "yosys> help opt_muxtree": [[151, "yosys-help-opt-muxtree"]], "opt_reduce - simplify large MUXes and AND/OR gates": [[152, "opt-reduce-simplify-large-muxes-and-and-or-gates"]], "yosys> help opt_reduce": [[152, "yosys-help-opt-reduce"]], "opt_share - merge mutually exclusive cells of the same type that share an input signal": [[153, "opt-share-merge-mutually-exclusive-cells-of-the-same-type-that-share-an-input-signal"]], "yosys> help opt_share": [[153, "yosys-help-opt-share"]], "paramap - renaming cell parameters": [[154, "paramap-renaming-cell-parameters"]], "yosys> help paramap": [[154, "yosys-help-paramap"]], "peepopt - collection of peephole optimizers": [[155, "peepopt-collection-of-peephole-optimizers"]], "yosys> help peepopt": [[155, "yosys-help-peepopt"]], "plugin - load and list loaded plugins": [[156, "plugin-load-and-list-loaded-plugins"]], "yosys> help plugin": [[156, "yosys-help-plugin"]], "pmux2shiftx - transform $pmux cells to $shiftx cells": [[157, "pmux2shiftx-transform-pmux-cells-to-shiftx-cells"]], "yosys> help pmux2shiftx": [[157, "yosys-help-pmux2shiftx"]], "pmuxtree - transform $pmux cells to trees of $mux cells": [[158, "pmuxtree-transform-pmux-cells-to-trees-of-mux-cells"]], "yosys> help pmuxtree": [[158, "yosys-help-pmuxtree"]], "portlist - list (top-level) ports": [[159, "portlist-list-top-level-ports"]], "yosys> help portlist": [[159, "yosys-help-portlist"]], "prep - generic synthesis script": [[160, "prep-generic-synthesis-script"]], "yosys> help prep": [[160, "yosys-help-prep"]], "printattrs - print attributes of selected objects": [[161, "printattrs-print-attributes-of-selected-objects"]], "yosys> help printattrs": [[161, "yosys-help-printattrs"]], "proc - translate processes to netlists": [[162, "proc-translate-processes-to-netlists"]], "yosys> help proc": [[162, "yosys-help-proc"]], "proc_arst - detect asynchronous resets": [[163, "proc-arst-detect-asynchronous-resets"]], "yosys> help proc_arst": [[163, "yosys-help-proc-arst"]], "proc_clean - remove empty parts of processes": [[164, "proc-clean-remove-empty-parts-of-processes"]], "yosys> help proc_clean": [[164, "yosys-help-proc-clean"]], "proc_dff - extract flip-flops from processes": [[165, "proc-dff-extract-flip-flops-from-processes"]], "yosys> help proc_dff": [[165, "yosys-help-proc-dff"]], "proc_dlatch - extract latches from processes": [[166, "proc-dlatch-extract-latches-from-processes"]], "yosys> help proc_dlatch": [[166, "yosys-help-proc-dlatch"]], "proc_init - convert initial block to init attributes": [[167, "proc-init-convert-initial-block-to-init-attributes"]], "yosys> help proc_init": [[167, "yosys-help-proc-init"]], "proc_memwr - extract memory writes from processes": [[168, "proc-memwr-extract-memory-writes-from-processes"]], "yosys> help proc_memwr": [[168, "yosys-help-proc-memwr"]], "proc_mux - convert decision trees to multiplexers": [[169, "proc-mux-convert-decision-trees-to-multiplexers"]], "yosys> help proc_mux": [[169, "yosys-help-proc-mux"]], "proc_prune - remove redundant assignments": [[170, "proc-prune-remove-redundant-assignments"]], "yosys> help proc_prune": [[170, "yosys-help-proc-prune"]], "proc_rmdead - eliminate dead trees in decision trees": [[171, "proc-rmdead-eliminate-dead-trees-in-decision-trees"]], "yosys> help proc_rmdead": [[171, "yosys-help-proc-rmdead"]], "proc_rom - convert switches to ROMs": [[172, "proc-rom-convert-switches-to-roms"]], "yosys> help proc_rom": [[172, "yosys-help-proc-rom"]], "qbfsat - solve a 2QBF-SAT problem in the circuit": [[173, "qbfsat-solve-a-2qbf-sat-problem-in-the-circuit"]], "yosys> help qbfsat": [[173, "yosys-help-qbfsat"]], "qwp - quadratic wirelength placer": [[174, "qwp-quadratic-wirelength-placer"]], "yosys> help qwp": [[174, "yosys-help-qwp"]], "read - load HDL designs": [[175, "read-load-hdl-designs"]], "yosys> help read": [[175, "yosys-help-read"]], "read_aiger - read AIGER file": [[176, "read-aiger-read-aiger-file"]], "yosys> help read_aiger": [[176, "yosys-help-read-aiger"]], "read_blif - read BLIF file": [[177, "read-blif-read-blif-file"]], "yosys> help read_blif": [[177, "yosys-help-read-blif"]], "read_ilang - (deprecated) alias of read_rtlil": [[178, "read-ilang-deprecated-alias-of-read-rtlil"]], "yosys> help read_ilang": [[178, "yosys-help-read-ilang"]], "read_json - read JSON file": [[179, "read-json-read-json-file"]], "yosys> help read_json": [[179, "yosys-help-read-json"]], "read_liberty - read cells from liberty file": [[180, "read-liberty-read-cells-from-liberty-file"]], "yosys> help read_liberty": [[180, "yosys-help-read-liberty"]], "read_rtlil - read modules from RTLIL file": [[181, "read-rtlil-read-modules-from-rtlil-file"]], "yosys> help read_rtlil": [[181, "yosys-help-read-rtlil"]], "read_verilog - read modules from Verilog file": [[182, "read-verilog-read-modules-from-verilog-file"]], "yosys> help read_verilog": [[182, "yosys-help-read-verilog"]], "rename - rename object in the design": [[183, "rename-rename-object-in-the-design"]], "yosys> help rename": [[183, "yosys-help-rename"]], "rmports - remove module ports with no connections": [[184, "rmports-remove-module-ports-with-no-connections"]], "yosys> help rmports": [[184, "yosys-help-rmports"]], "sat - solve a SAT problem in the circuit": [[185, "sat-solve-a-sat-problem-in-the-circuit"]], "yosys> help sat": [[185, "yosys-help-sat"]], "scatter - add additional intermediate nets": [[186, "scatter-add-additional-intermediate-nets"]], "yosys> help scatter": [[186, "yosys-help-scatter"]], "scc - detect strongly connected components (logic loops)": [[187, "scc-detect-strongly-connected-components-logic-loops"]], "yosys> help scc": [[187, "yosys-help-scc"]], "scratchpad - get/set values in the scratchpad": [[188, "scratchpad-get-set-values-in-the-scratchpad"]], "yosys> help scratchpad": [[188, "yosys-help-scratchpad"]], "script - execute commands from file or wire": [[189, "script-execute-commands-from-file-or-wire"]], "yosys> help script": [[189, "yosys-help-script"]], "select - modify and view the list of selected objects": [[190, "select-modify-and-view-the-list-of-selected-objects"]], "yosys> help select": [[190, "yosys-help-select"]], "setattr - set/unset attributes on objects": [[191, "setattr-set-unset-attributes-on-objects"]], "yosys> help setattr": [[191, "yosys-help-setattr"]], "setparam - set/unset parameters on objects": [[192, "setparam-set-unset-parameters-on-objects"]], "yosys> help setparam": [[192, "yosys-help-setparam"]], "setundef - replace undef values with defined constants": [[193, "setundef-replace-undef-values-with-defined-constants"]], "yosys> help setundef": [[193, "yosys-help-setundef"]], "share - perform sat-based resource sharing": [[194, "share-perform-sat-based-resource-sharing"]], "yosys> help share": [[194, "yosys-help-share"]], "shell - enter interactive command mode": [[195, "shell-enter-interactive-command-mode"]], "yosys> help shell": [[195, "yosys-help-shell"]], "show - generate schematics using graphviz": [[196, "show-generate-schematics-using-graphviz"]], "yosys> help show": [[196, "yosys-help-show"]], "shregmap - map shift registers": [[197, "shregmap-map-shift-registers"]], "yosys> help shregmap": [[197, "yosys-help-shregmap"]], "sim - simulate the circuit": [[198, "sim-simulate-the-circuit"]], "yosys> help sim": [[198, "yosys-help-sim"]], "simplemap - mapping simple coarse-grain cells": [[199, "simplemap-mapping-simple-coarse-grain-cells"]], "yosys> help simplemap": [[199, "yosys-help-simplemap"]], "splice - create explicit splicing cells": [[200, "splice-create-explicit-splicing-cells"]], "yosys> help splice": [[200, "yosys-help-splice"]], "splitnets - split up multi-bit nets": [[201, "splitnets-split-up-multi-bit-nets"]], "yosys> help splitnets": [[201, "yosys-help-splitnets"]], "sta - perform static timing analysis": [[202, "sta-perform-static-timing-analysis"]], "yosys> help sta": [[202, "yosys-help-sta"]], "stat - print some statistics": [[203, "stat-print-some-statistics"]], "yosys> help stat": [[203, "yosys-help-stat"]], "submod - moving part of a module to a new submodule": [[204, "submod-moving-part-of-a-module-to-a-new-submodule"]], "yosys> help submod": [[204, "yosys-help-submod"]], "supercover - add hi/lo cover cells for each wire bit": [[205, "supercover-add-hi-lo-cover-cells-for-each-wire-bit"]], "yosys> help supercover": [[205, "yosys-help-supercover"]], "synth - generic synthesis script": [[206, "synth-generic-synthesis-script"]], "yosys> help synth": [[206, "yosys-help-synth"]], "synth_achronix - synthesis for Acrhonix Speedster22i FPGAs.": [[207, "synth-achronix-synthesis-for-acrhonix-speedster22i-fpgas"]], "yosys> help synth_achronix": [[207, "yosys-help-synth-achronix"]], "synth_anlogic - synthesis for Anlogic FPGAs": [[208, "synth-anlogic-synthesis-for-anlogic-fpgas"]], "yosys> help synth_anlogic": [[208, "yosys-help-synth-anlogic"]], "synth_coolrunner2 - synthesis for Xilinx Coolrunner-II CPLDs": [[209, "synth-coolrunner2-synthesis-for-xilinx-coolrunner-ii-cplds"]], "yosys> help synth_coolrunner2": [[209, "yosys-help-synth-coolrunner2"]], "synth_easic - synthesis for eASIC platform": [[210, "synth-easic-synthesis-for-easic-platform"]], "yosys> help synth_easic": [[210, "yosys-help-synth-easic"]], "synth_ecp5 - synthesis for ECP5 FPGAs": [[211, "synth-ecp5-synthesis-for-ecp5-fpgas"]], "yosys> help synth_ecp5": [[211, "yosys-help-synth-ecp5"]], "synth_efinix - synthesis for Efinix FPGAs": [[212, "synth-efinix-synthesis-for-efinix-fpgas"]], "yosys> help synth_efinix": [[212, "yosys-help-synth-efinix"]], "synth_gatemate - synthesis for Cologne Chip GateMate FPGAs": [[213, "synth-gatemate-synthesis-for-cologne-chip-gatemate-fpgas"]], "yosys> help synth_gatemate": [[213, "yosys-help-synth-gatemate"]], "synth_gowin - synthesis for Gowin FPGAs": [[214, "synth-gowin-synthesis-for-gowin-fpgas"]], "yosys> help synth_gowin": [[214, "yosys-help-synth-gowin"]], "synth_greenpak4 - synthesis for GreenPAK4 FPGAs": [[215, "synth-greenpak4-synthesis-for-greenpak4-fpgas"]], "yosys> help synth_greenpak4": [[215, "yosys-help-synth-greenpak4"]], "synth_ice40 - synthesis for iCE40 FPGAs": [[216, "synth-ice40-synthesis-for-ice40-fpgas"]], "yosys> help synth_ice40": [[216, "yosys-help-synth-ice40"]], "synth_intel - synthesis for Intel (Altera) FPGAs.": [[217, "synth-intel-synthesis-for-intel-altera-fpgas"]], "yosys> help synth_intel": [[217, "yosys-help-synth-intel"]], "synth_intel_alm - synthesis for ALM-based Intel (Altera) FPGAs.": [[218, "synth-intel-alm-synthesis-for-alm-based-intel-altera-fpgas"]], "yosys> help synth_intel_alm": [[218, "yosys-help-synth-intel-alm"]], "synth_machxo2 - synthesis for MachXO2 FPGAs. This work is experimental.": [[219, "synth-machxo2-synthesis-for-machxo2-fpgas-this-work-is-experimental"]], "yosys> help synth_machxo2": [[219, "yosys-help-synth-machxo2"]], "synth_nexus - synthesis for Lattice Nexus FPGAs": [[220, "synth-nexus-synthesis-for-lattice-nexus-fpgas"]], "yosys> help synth_nexus": [[220, "yosys-help-synth-nexus"]], "synth_quicklogic - Synthesis for QuickLogic FPGAs": [[221, "synth-quicklogic-synthesis-for-quicklogic-fpgas"]], "yosys> help synth_quicklogic": [[221, "yosys-help-synth-quicklogic"]], "synth_sf2 - synthesis for SmartFusion2 and IGLOO2 FPGAs": [[222, "synth-sf2-synthesis-for-smartfusion2-and-igloo2-fpgas"]], "yosys> help synth_sf2": [[222, "yosys-help-synth-sf2"]], "synth_xilinx - synthesis for Xilinx FPGAs": [[223, "synth-xilinx-synthesis-for-xilinx-fpgas"]], "yosys> help synth_xilinx": [[223, "yosys-help-synth-xilinx"]], "tcl - execute a TCL script file": [[224, "tcl-execute-a-tcl-script-file"]], "yosys> help tcl": [[224, "yosys-help-tcl"]], "techmap - generic technology mapper": [[225, "techmap-generic-technology-mapper"]], "yosys> help techmap": [[225, "yosys-help-techmap"]], "tee - redirect command output to file": [[226, "tee-redirect-command-output-to-file"]], "yosys> help tee": [[226, "yosys-help-tee"]], "test_abcloop - automatically test handling of loops in abc command": [[227, "test-abcloop-automatically-test-handling-of-loops-in-abc-command"]], "yosys> help test_abcloop": [[227, "yosys-help-test-abcloop"]], "test_autotb - generate simple test benches": [[228, "test-autotb-generate-simple-test-benches"]], "yosys> help test_autotb": [[228, "yosys-help-test-autotb"]], "test_cell - automatically test the implementation of a cell type": [[229, "test-cell-automatically-test-the-implementation-of-a-cell-type"]], "yosys> help test_cell": [[229, "yosys-help-test-cell"]], "test_pmgen - test pass for pmgen": [[230, "test-pmgen-test-pass-for-pmgen"]], "yosys> help test_pmgen": [[230, "yosys-help-test-pmgen"]], "torder - print cells in topological order": [[231, "torder-print-cells-in-topological-order"]], "yosys> help torder": [[231, "yosys-help-torder"]], "trace - redirect command output to file": [[232, "trace-redirect-command-output-to-file"]], "yosys> help trace": [[232, "yosys-help-trace"]], "tribuf - infer tri-state buffers": [[233, "tribuf-infer-tri-state-buffers"]], "yosys> help tribuf": [[233, "yosys-help-tribuf"]], "uniquify - create unique copies of modules": [[234, "uniquify-create-unique-copies-of-modules"]], "yosys> help uniquify": [[234, "yosys-help-uniquify"]], "verific - load Verilog and VHDL designs using Verific": [[235, "verific-load-verilog-and-vhdl-designs-using-verific"]], "yosys> help verific": [[235, "yosys-help-verific"]], "verilog_defaults - set default options for read_verilog": [[236, "verilog-defaults-set-default-options-for-read-verilog"]], "yosys> help verilog_defaults": [[236, "yosys-help-verilog-defaults"]], "verilog_defines - define and undefine verilog defines": [[237, "verilog-defines-define-and-undefine-verilog-defines"]], "yosys> help verilog_defines": [[237, "yosys-help-verilog-defines"]], "wbflip - flip the whitebox attribute": [[238, "wbflip-flip-the-whitebox-attribute"]], "yosys> help wbflip": [[238, "yosys-help-wbflip"]], "wreduce - reduce the word size of operations if possible": [[239, "wreduce-reduce-the-word-size-of-operations-if-possible"]], "yosys> help wreduce": [[239, "yosys-help-wreduce"]], "write_aiger - write design to AIGER file": [[240, "write-aiger-write-design-to-aiger-file"]], "yosys> help write_aiger": [[240, "yosys-help-write-aiger"]], "write_blif - write design to BLIF file": [[241, "write-blif-write-design-to-blif-file"]], "yosys> help write_blif": [[241, "yosys-help-write-blif"]], "write_btor - write design to BTOR file": [[242, "write-btor-write-design-to-btor-file"]], "yosys> help write_btor": [[242, "yosys-help-write-btor"]], "write_cxxrtl - convert design to C++ RTL simulation": [[243, "write-cxxrtl-convert-design-to-c-rtl-simulation"]], "yosys> help write_cxxrtl": [[243, "yosys-help-write-cxxrtl"]], "write_edif - write design to EDIF netlist file": [[244, "write-edif-write-design-to-edif-netlist-file"]], "yosys> help write_edif": [[244, "yosys-help-write-edif"]], "write_file - write a text to a file": [[245, "write-file-write-a-text-to-a-file"]], "yosys> help write_file": [[245, "yosys-help-write-file"]], "write_firrtl - write design to a FIRRTL file": [[246, "write-firrtl-write-design-to-a-firrtl-file"]], "yosys> help write_firrtl": [[246, "yosys-help-write-firrtl"]], "write_ilang - (deprecated) alias of write_rtlil": [[247, "write-ilang-deprecated-alias-of-write-rtlil"]], "yosys> help write_ilang": [[247, "yosys-help-write-ilang"]], "write_intersynth - write design to InterSynth netlist file": [[248, "write-intersynth-write-design-to-intersynth-netlist-file"]], "yosys> help write_intersynth": [[248, "yosys-help-write-intersynth"]], "write_jny - generate design metadata": [[249, "write-jny-generate-design-metadata"]], "yosys> help write_jny": [[249, "yosys-help-write-jny"]], "write_json - write design to a JSON file": [[250, "write-json-write-design-to-a-json-file"]], "yosys> help write_json": [[250, "yosys-help-write-json"]], "write_rtlil - write design to RTLIL file": [[251, "write-rtlil-write-design-to-rtlil-file"]], "yosys> help write_rtlil": [[251, "yosys-help-write-rtlil"]], "write_simplec - convert design to simple C code": [[252, "write-simplec-convert-design-to-simple-c-code"]], "yosys> help write_simplec": [[252, "yosys-help-write-simplec"]], "write_smt2 - write design to SMT-LIBv2 file": [[253, "write-smt2-write-design-to-smt-libv2-file"]], "yosys> help write_smt2": [[253, "yosys-help-write-smt2"]], "write_smv - write design to SMV file": [[254, "write-smv-write-design-to-smv-file"]], "yosys> help write_smv": [[254, "yosys-help-write-smv"]], "write_spice - write design to SPICE netlist file": [[255, "write-spice-write-design-to-spice-netlist-file"]], "yosys> help write_spice": [[255, "yosys-help-write-spice"]], "write_table - write design as connectivity table": [[256, "write-table-write-design-as-connectivity-table"]], "yosys> help write_table": [[256, "yosys-help-write-table"]], "write_verilog - write design to Verilog file": [[257, "write-verilog-write-design-to-verilog-file"]], "yosys> help write_verilog": [[257, "yosys-help-write-verilog"]], "write_xaiger - write design to XAIGER file": [[258, "write-xaiger-write-design-to-xaiger-file"]], "yosys> help write_xaiger": [[258, "yosys-help-write-xaiger"]], "xilinx_dffopt - Xilinx: optimize FF control signal usage": [[259, "xilinx-dffopt-xilinx-optimize-ff-control-signal-usage"]], "yosys> help xilinx_dffopt": [[259, "yosys-help-xilinx-dffopt"]], "xilinx_dsp - Xilinx: pack resources into DSPs": [[260, "xilinx-dsp-xilinx-pack-resources-into-dsps"]], "yosys> help xilinx_dsp": [[260, "yosys-help-xilinx-dsp"]], "xilinx_srl - Xilinx shift register extraction": [[261, "xilinx-srl-xilinx-shift-register-extraction"]], "yosys> help xilinx_srl": [[261, "yosys-help-xilinx-srl"]], "zinit - add inverters so all FF are zero-initialized": [[262, "zinit-add-inverters-so-all-ff-are-zero-initialized"]], "yosys> help zinit": [[262, "yosys-help-zinit"]], "Command line reference": [[263, "command-line-reference"]], "Command reference": [[263, null]], "Abstract": [[264, null]], "Yosys manual": [[264, "yosys-manual"]], "Manual": [[264, null]], "Appendix": [[264, null]]}, "indexentries": {}})